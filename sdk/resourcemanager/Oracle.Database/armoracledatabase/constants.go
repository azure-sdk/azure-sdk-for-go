//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armoracledatabase

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/Oracle.Database/armoracledatabase"
	moduleVersion = "v0.1.0"
)

// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// CloudAccountProvisioningState - CloudAccountProvisioningState enum
type CloudAccountProvisioningState string

const (
	// CloudAccountProvisioningStateAvailable - Available value
	CloudAccountProvisioningStateAvailable CloudAccountProvisioningState = "Available"
	// CloudAccountProvisioningStatePending - Pending value
	CloudAccountProvisioningStatePending CloudAccountProvisioningState = "Pending"
	// CloudAccountProvisioningStateProvisioning - Provisioning value
	CloudAccountProvisioningStateProvisioning CloudAccountProvisioningState = "Provisioning"
)

// PossibleCloudAccountProvisioningStateValues returns the possible values for the CloudAccountProvisioningState const type.
func PossibleCloudAccountProvisioningStateValues() []CloudAccountProvisioningState {
	return []CloudAccountProvisioningState{
		CloudAccountProvisioningStateAvailable,
		CloudAccountProvisioningStatePending,
		CloudAccountProvisioningStateProvisioning,
	}
}

// CloudExadataInfrastructureProvisioningState - CloudExadataInfrastructureProvisioningState enum
type CloudExadataInfrastructureProvisioningState string

const (
	// CloudExadataInfrastructureProvisioningStateAvailable - Available value
	CloudExadataInfrastructureProvisioningStateAvailable CloudExadataInfrastructureProvisioningState = "Available"
	// CloudExadataInfrastructureProvisioningStateCanceled - Resource creation was canceled.
	CloudExadataInfrastructureProvisioningStateCanceled CloudExadataInfrastructureProvisioningState = "Canceled"
	// CloudExadataInfrastructureProvisioningStateFailed - Resource creation failed.
	CloudExadataInfrastructureProvisioningStateFailed CloudExadataInfrastructureProvisioningState = "Failed"
	// CloudExadataInfrastructureProvisioningStateMaintenanceInProgress - MaintenanceInProgress value
	CloudExadataInfrastructureProvisioningStateMaintenanceInProgress CloudExadataInfrastructureProvisioningState = "MaintenanceInProgress"
	// CloudExadataInfrastructureProvisioningStateProvisioning - Provisioning value
	CloudExadataInfrastructureProvisioningStateProvisioning CloudExadataInfrastructureProvisioningState = "Provisioning"
	// CloudExadataInfrastructureProvisioningStateSucceeded - Resource has been created.
	CloudExadataInfrastructureProvisioningStateSucceeded CloudExadataInfrastructureProvisioningState = "Succeeded"
	// CloudExadataInfrastructureProvisioningStateTerminated - Terminated value
	CloudExadataInfrastructureProvisioningStateTerminated CloudExadataInfrastructureProvisioningState = "Terminated"
	// CloudExadataInfrastructureProvisioningStateTerminating - Terminating value
	CloudExadataInfrastructureProvisioningStateTerminating CloudExadataInfrastructureProvisioningState = "Terminating"
	// CloudExadataInfrastructureProvisioningStateUpdating - Updating value
	CloudExadataInfrastructureProvisioningStateUpdating CloudExadataInfrastructureProvisioningState = "Updating"
)

// PossibleCloudExadataInfrastructureProvisioningStateValues returns the possible values for the CloudExadataInfrastructureProvisioningState const type.
func PossibleCloudExadataInfrastructureProvisioningStateValues() []CloudExadataInfrastructureProvisioningState {
	return []CloudExadataInfrastructureProvisioningState{
		CloudExadataInfrastructureProvisioningStateAvailable,
		CloudExadataInfrastructureProvisioningStateCanceled,
		CloudExadataInfrastructureProvisioningStateFailed,
		CloudExadataInfrastructureProvisioningStateMaintenanceInProgress,
		CloudExadataInfrastructureProvisioningStateProvisioning,
		CloudExadataInfrastructureProvisioningStateSucceeded,
		CloudExadataInfrastructureProvisioningStateTerminated,
		CloudExadataInfrastructureProvisioningStateTerminating,
		CloudExadataInfrastructureProvisioningStateUpdating,
	}
}

// CloudVMClusterProvisioningState - CloudVmClusterProvisioningState enum
type CloudVMClusterProvisioningState string

const (
	// CloudVMClusterProvisioningStateAvailable - Available value
	CloudVMClusterProvisioningStateAvailable CloudVMClusterProvisioningState = "Available"
	// CloudVMClusterProvisioningStateCanceled - Resource creation was canceled.
	CloudVMClusterProvisioningStateCanceled CloudVMClusterProvisioningState = "Canceled"
	// CloudVMClusterProvisioningStateFailed - Resource creation failed.
	CloudVMClusterProvisioningStateFailed CloudVMClusterProvisioningState = "Failed"
	// CloudVMClusterProvisioningStateMaintenanceInProgress - MaintenanceInProgress value
	CloudVMClusterProvisioningStateMaintenanceInProgress CloudVMClusterProvisioningState = "MaintenanceInProgress"
	// CloudVMClusterProvisioningStateProvisioning - Provisioning value
	CloudVMClusterProvisioningStateProvisioning CloudVMClusterProvisioningState = "Provisioning"
	// CloudVMClusterProvisioningStateSucceeded - Resource has been created.
	CloudVMClusterProvisioningStateSucceeded CloudVMClusterProvisioningState = "Succeeded"
	// CloudVMClusterProvisioningStateTerminated - Terminated value
	CloudVMClusterProvisioningStateTerminated CloudVMClusterProvisioningState = "Terminated"
	// CloudVMClusterProvisioningStateTerminating - Terminating value
	CloudVMClusterProvisioningStateTerminating CloudVMClusterProvisioningState = "Terminating"
	// CloudVMClusterProvisioningStateUpdating - Updating value
	CloudVMClusterProvisioningStateUpdating CloudVMClusterProvisioningState = "Updating"
)

// PossibleCloudVMClusterProvisioningStateValues returns the possible values for the CloudVMClusterProvisioningState const type.
func PossibleCloudVMClusterProvisioningStateValues() []CloudVMClusterProvisioningState {
	return []CloudVMClusterProvisioningState{
		CloudVMClusterProvisioningStateAvailable,
		CloudVMClusterProvisioningStateCanceled,
		CloudVMClusterProvisioningStateFailed,
		CloudVMClusterProvisioningStateMaintenanceInProgress,
		CloudVMClusterProvisioningStateProvisioning,
		CloudVMClusterProvisioningStateSucceeded,
		CloudVMClusterProvisioningStateTerminated,
		CloudVMClusterProvisioningStateTerminating,
		CloudVMClusterProvisioningStateUpdating,
	}
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// DNSPrivateViewsProvisioningState - DnsPrivateViews provisioning state enum
type DNSPrivateViewsProvisioningState string

const (
	// DNSPrivateViewsProvisioningStateActive - Active value
	DNSPrivateViewsProvisioningStateActive DNSPrivateViewsProvisioningState = "Active"
	// DNSPrivateViewsProvisioningStateCanceled - Resource creation was canceled.
	DNSPrivateViewsProvisioningStateCanceled DNSPrivateViewsProvisioningState = "Canceled"
	// DNSPrivateViewsProvisioningStateDeleted - Deleted value
	DNSPrivateViewsProvisioningStateDeleted DNSPrivateViewsProvisioningState = "Deleted"
	// DNSPrivateViewsProvisioningStateDeleting - Deleting value
	DNSPrivateViewsProvisioningStateDeleting DNSPrivateViewsProvisioningState = "Deleting"
	// DNSPrivateViewsProvisioningStateFailed - Resource creation failed.
	DNSPrivateViewsProvisioningStateFailed DNSPrivateViewsProvisioningState = "Failed"
	// DNSPrivateViewsProvisioningStateSucceeded - Resource has been created.
	DNSPrivateViewsProvisioningStateSucceeded DNSPrivateViewsProvisioningState = "Succeeded"
	// DNSPrivateViewsProvisioningStateUpdating - Updating value
	DNSPrivateViewsProvisioningStateUpdating DNSPrivateViewsProvisioningState = "Updating"
)

// PossibleDNSPrivateViewsProvisioningStateValues returns the possible values for the DNSPrivateViewsProvisioningState const type.
func PossibleDNSPrivateViewsProvisioningStateValues() []DNSPrivateViewsProvisioningState {
	return []DNSPrivateViewsProvisioningState{
		DNSPrivateViewsProvisioningStateActive,
		DNSPrivateViewsProvisioningStateCanceled,
		DNSPrivateViewsProvisioningStateDeleted,
		DNSPrivateViewsProvisioningStateDeleting,
		DNSPrivateViewsProvisioningStateFailed,
		DNSPrivateViewsProvisioningStateSucceeded,
		DNSPrivateViewsProvisioningStateUpdating,
	}
}

// DNSPrivateZonesProvisioningState - DnsPrivateZones provisioning state enum
type DNSPrivateZonesProvisioningState string

const (
	// DNSPrivateZonesProvisioningStateActive - Active value
	DNSPrivateZonesProvisioningStateActive DNSPrivateZonesProvisioningState = "Active"
	// DNSPrivateZonesProvisioningStateCanceled - Resource creation was canceled.
	DNSPrivateZonesProvisioningStateCanceled DNSPrivateZonesProvisioningState = "Canceled"
	// DNSPrivateZonesProvisioningStateCreating - Creating value
	DNSPrivateZonesProvisioningStateCreating DNSPrivateZonesProvisioningState = "Creating"
	// DNSPrivateZonesProvisioningStateDeleted - Deleted value
	DNSPrivateZonesProvisioningStateDeleted DNSPrivateZonesProvisioningState = "Deleted"
	// DNSPrivateZonesProvisioningStateDeleting - Deleting value
	DNSPrivateZonesProvisioningStateDeleting DNSPrivateZonesProvisioningState = "Deleting"
	// DNSPrivateZonesProvisioningStateFailed - Resource creation failed.
	DNSPrivateZonesProvisioningStateFailed DNSPrivateZonesProvisioningState = "Failed"
	// DNSPrivateZonesProvisioningStateSucceeded - Resource has been created.
	DNSPrivateZonesProvisioningStateSucceeded DNSPrivateZonesProvisioningState = "Succeeded"
	// DNSPrivateZonesProvisioningStateUpdating - Updating value
	DNSPrivateZonesProvisioningStateUpdating DNSPrivateZonesProvisioningState = "Updating"
)

// PossibleDNSPrivateZonesProvisioningStateValues returns the possible values for the DNSPrivateZonesProvisioningState const type.
func PossibleDNSPrivateZonesProvisioningStateValues() []DNSPrivateZonesProvisioningState {
	return []DNSPrivateZonesProvisioningState{
		DNSPrivateZonesProvisioningStateActive,
		DNSPrivateZonesProvisioningStateCanceled,
		DNSPrivateZonesProvisioningStateCreating,
		DNSPrivateZonesProvisioningStateDeleted,
		DNSPrivateZonesProvisioningStateDeleting,
		DNSPrivateZonesProvisioningStateFailed,
		DNSPrivateZonesProvisioningStateSucceeded,
		DNSPrivateZonesProvisioningStateUpdating,
	}
}

// DayOfWeekName - DayOfWeekName enum
type DayOfWeekName string

const (
	// DayOfWeekNameFriday - Friday value
	DayOfWeekNameFriday DayOfWeekName = "Friday"
	// DayOfWeekNameMonday - Monday value
	DayOfWeekNameMonday DayOfWeekName = "Monday"
	// DayOfWeekNameSaturday - Saturday value
	DayOfWeekNameSaturday DayOfWeekName = "Saturday"
	// DayOfWeekNameSunday - Sunday value
	DayOfWeekNameSunday DayOfWeekName = "Sunday"
	// DayOfWeekNameThursday - Thursday value
	DayOfWeekNameThursday DayOfWeekName = "Thursday"
	// DayOfWeekNameTuesday - Tuesday value
	DayOfWeekNameTuesday DayOfWeekName = "Tuesday"
	// DayOfWeekNameWednesday - Wednesday value
	DayOfWeekNameWednesday DayOfWeekName = "Wednesday"
)

// PossibleDayOfWeekNameValues returns the possible values for the DayOfWeekName const type.
func PossibleDayOfWeekNameValues() []DayOfWeekName {
	return []DayOfWeekName{
		DayOfWeekNameFriday,
		DayOfWeekNameMonday,
		DayOfWeekNameSaturday,
		DayOfWeekNameSunday,
		DayOfWeekNameThursday,
		DayOfWeekNameTuesday,
		DayOfWeekNameWednesday,
	}
}

// DbNodeMaintenanceType - The type of database node maintenance.
type DbNodeMaintenanceType string

const (
	// DbNodeMaintenanceTypeVmdbRebootMigration - Provisioning value
	DbNodeMaintenanceTypeVmdbRebootMigration DbNodeMaintenanceType = "VmdbRebootMigration"
)

// PossibleDbNodeMaintenanceTypeValues returns the possible values for the DbNodeMaintenanceType const type.
func PossibleDbNodeMaintenanceTypeValues() []DbNodeMaintenanceType {
	return []DbNodeMaintenanceType{
		DbNodeMaintenanceTypeVmdbRebootMigration,
	}
}

// DbNodeProvisioningState - DnNode provisioning state enum
type DbNodeProvisioningState string

const (
	// DbNodeProvisioningStateAvailable - Available value
	DbNodeProvisioningStateAvailable DbNodeProvisioningState = "Available"
	// DbNodeProvisioningStateCanceled - Resource creation was canceled.
	DbNodeProvisioningStateCanceled DbNodeProvisioningState = "Canceled"
	// DbNodeProvisioningStateFailed - Resource creation failed.
	DbNodeProvisioningStateFailed DbNodeProvisioningState = "Failed"
	// DbNodeProvisioningStateProvisioning - Provisioning value
	DbNodeProvisioningStateProvisioning DbNodeProvisioningState = "Provisioning"
	// DbNodeProvisioningStateStarting - Starting value
	DbNodeProvisioningStateStarting DbNodeProvisioningState = "Starting"
	// DbNodeProvisioningStateStopped - Stopped value
	DbNodeProvisioningStateStopped DbNodeProvisioningState = "Stopped"
	// DbNodeProvisioningStateStopping - Stopping value
	DbNodeProvisioningStateStopping DbNodeProvisioningState = "Stopping"
	// DbNodeProvisioningStateSucceeded - Resource has been created.
	DbNodeProvisioningStateSucceeded DbNodeProvisioningState = "Succeeded"
	// DbNodeProvisioningStateTerminated - Terminated value
	DbNodeProvisioningStateTerminated DbNodeProvisioningState = "Terminated"
	// DbNodeProvisioningStateTerminating - Terminating value
	DbNodeProvisioningStateTerminating DbNodeProvisioningState = "Terminating"
	// DbNodeProvisioningStateUpdating - Updating value
	DbNodeProvisioningStateUpdating DbNodeProvisioningState = "Updating"
)

// PossibleDbNodeProvisioningStateValues returns the possible values for the DbNodeProvisioningState const type.
func PossibleDbNodeProvisioningStateValues() []DbNodeProvisioningState {
	return []DbNodeProvisioningState{
		DbNodeProvisioningStateAvailable,
		DbNodeProvisioningStateCanceled,
		DbNodeProvisioningStateFailed,
		DbNodeProvisioningStateProvisioning,
		DbNodeProvisioningStateStarting,
		DbNodeProvisioningStateStopped,
		DbNodeProvisioningStateStopping,
		DbNodeProvisioningStateSucceeded,
		DbNodeProvisioningStateTerminated,
		DbNodeProvisioningStateTerminating,
		DbNodeProvisioningStateUpdating,
	}
}

// DbServerPatchingStatus - Db Server patching status enum
type DbServerPatchingStatus string

const (
	// DbServerPatchingStatusComplete - COMPLETE value
	DbServerPatchingStatusComplete DbServerPatchingStatus = "Complete"
	// DbServerPatchingStatusFailed - FAILED value
	DbServerPatchingStatusFailed DbServerPatchingStatus = "Failed"
	// DbServerPatchingStatusMaintenanceInProgress - MAINTENANCE_IN_PROGRESS value
	DbServerPatchingStatusMaintenanceInProgress DbServerPatchingStatus = "MaintenanceInProgress"
	// DbServerPatchingStatusScheduled - SCHEDULED value
	DbServerPatchingStatusScheduled DbServerPatchingStatus = "Scheduled"
)

// PossibleDbServerPatchingStatusValues returns the possible values for the DbServerPatchingStatus const type.
func PossibleDbServerPatchingStatusValues() []DbServerPatchingStatus {
	return []DbServerPatchingStatus{
		DbServerPatchingStatusComplete,
		DbServerPatchingStatusFailed,
		DbServerPatchingStatusMaintenanceInProgress,
		DbServerPatchingStatusScheduled,
	}
}

// DbServerProvisioningState - DbServerProvisioningState enum
type DbServerProvisioningState string

const (
	// DbServerProvisioningStateAvailable - Available value
	DbServerProvisioningStateAvailable DbServerProvisioningState = "Available"
	// DbServerProvisioningStateCanceled - Resource creation was canceled.
	DbServerProvisioningStateCanceled DbServerProvisioningState = "Canceled"
	// DbServerProvisioningStateFailed - Resource creation failed.
	DbServerProvisioningStateFailed DbServerProvisioningState = "Failed"
	// DbServerProvisioningStateMaintenanceInProgress - MaintenanceInProgress value
	DbServerProvisioningStateMaintenanceInProgress DbServerProvisioningState = "MaintenanceInProgress"
	// DbServerProvisioningStateProvisioning - Provisioning value
	DbServerProvisioningStateProvisioning DbServerProvisioningState = "Provisioning"
	// DbServerProvisioningStateSucceeded - Resource has been created.
	DbServerProvisioningStateSucceeded DbServerProvisioningState = "Succeeded"
	// DbServerProvisioningStateTerminated - Terminated value
	DbServerProvisioningStateTerminated DbServerProvisioningState = "Terminated"
	// DbServerProvisioningStateTerminating - Terminating value
	DbServerProvisioningStateTerminating DbServerProvisioningState = "Terminating"
	// DbServerProvisioningStateUpdating - Updating value
	DbServerProvisioningStateUpdating DbServerProvisioningState = "Updating"
)

// PossibleDbServerProvisioningStateValues returns the possible values for the DbServerProvisioningState const type.
func PossibleDbServerProvisioningStateValues() []DbServerProvisioningState {
	return []DbServerProvisioningState{
		DbServerProvisioningStateAvailable,
		DbServerProvisioningStateCanceled,
		DbServerProvisioningStateFailed,
		DbServerProvisioningStateMaintenanceInProgress,
		DbServerProvisioningStateProvisioning,
		DbServerProvisioningStateSucceeded,
		DbServerProvisioningStateTerminated,
		DbServerProvisioningStateTerminating,
		DbServerProvisioningStateUpdating,
	}
}

// DiskRedundancy - DiskRedundancy enum
type DiskRedundancy string

const (
	// DiskRedundancyHigh - High value
	DiskRedundancyHigh DiskRedundancy = "High"
	// DiskRedundancyNormal - Normal value
	DiskRedundancyNormal DiskRedundancy = "Normal"
)

// PossibleDiskRedundancyValues returns the possible values for the DiskRedundancy const type.
func PossibleDiskRedundancyValues() []DiskRedundancy {
	return []DiskRedundancy{
		DiskRedundancyHigh,
		DiskRedundancyNormal,
	}
}

// IormLifecycleState - IORMLifecycleState enum
type IormLifecycleState string

const (
	// IormLifecycleStateBootStrapping - BOOTSTRAPPING value
	IormLifecycleStateBootStrapping IormLifecycleState = "BootStrapping"
	// IormLifecycleStateDisabled - DISABLED value
	IormLifecycleStateDisabled IormLifecycleState = "Disabled"
	// IormLifecycleStateEnabled - ENABLED value
	IormLifecycleStateEnabled IormLifecycleState = "Enabled"
	// IormLifecycleStateFailed - FAILED value
	IormLifecycleStateFailed IormLifecycleState = "Failed"
	// IormLifecycleStateUpdating - UPDATING value
	IormLifecycleStateUpdating IormLifecycleState = "Updating"
)

// PossibleIormLifecycleStateValues returns the possible values for the IormLifecycleState const type.
func PossibleIormLifecycleStateValues() []IormLifecycleState {
	return []IormLifecycleState{
		IormLifecycleStateBootStrapping,
		IormLifecycleStateDisabled,
		IormLifecycleStateEnabled,
		IormLifecycleStateFailed,
		IormLifecycleStateUpdating,
	}
}

// LicenseModel - LicenseModel enum
type LicenseModel string

const (
	// LicenseModelBringYourOwnLicense - BringYourOwnLicense value
	LicenseModelBringYourOwnLicense LicenseModel = "BringYourOwnLicense"
	// LicenseModelLicenseIncluded - LicenseIncluded value
	LicenseModelLicenseIncluded LicenseModel = "LicenseIncluded"
)

// PossibleLicenseModelValues returns the possible values for the LicenseModel const type.
func PossibleLicenseModelValues() []LicenseModel {
	return []LicenseModel{
		LicenseModelBringYourOwnLicense,
		LicenseModelLicenseIncluded,
	}
}

// MonthName - MonthName enum
type MonthName string

const (
	// MonthNameApril - April value
	MonthNameApril MonthName = "April"
	// MonthNameAugust - August value
	MonthNameAugust MonthName = "August"
	// MonthNameDecember - December value
	MonthNameDecember MonthName = "December"
	// MonthNameFebruary - February value
	MonthNameFebruary MonthName = "February"
	// MonthNameJanuary - January value
	MonthNameJanuary MonthName = "January"
	// MonthNameJuly - July value
	MonthNameJuly MonthName = "July"
	// MonthNameJune - June value
	MonthNameJune MonthName = "June"
	// MonthNameMarch - March value
	MonthNameMarch MonthName = "March"
	// MonthNameMay - May value
	MonthNameMay MonthName = "May"
	// MonthNameNovember - November value
	MonthNameNovember MonthName = "November"
	// MonthNameOctober - October value
	MonthNameOctober MonthName = "October"
	// MonthNameSeptember - September value
	MonthNameSeptember MonthName = "September"
)

// PossibleMonthNameValues returns the possible values for the MonthName const type.
func PossibleMonthNameValues() []MonthName {
	return []MonthName{
		MonthNameApril,
		MonthNameAugust,
		MonthNameDecember,
		MonthNameFebruary,
		MonthNameJanuary,
		MonthNameJuly,
		MonthNameJune,
		MonthNameMarch,
		MonthNameMay,
		MonthNameNovember,
		MonthNameOctober,
		MonthNameSeptember,
	}
}

// Objective - Objective enum
type Objective string

const (
	// ObjectiveAuto - AUTO value
	ObjectiveAuto Objective = "Auto"
	// ObjectiveBalanced - BALANCED value
	ObjectiveBalanced Objective = "Balanced"
	// ObjectiveBasic - BASIC value
	ObjectiveBasic Objective = "Basic"
	// ObjectiveHighThroughput - HIGH_THROUGHPUT value
	ObjectiveHighThroughput Objective = "HighThroughput"
	// ObjectiveLowLatency - LOW_LATENCY value
	ObjectiveLowLatency Objective = "LowLatency"
)

// PossibleObjectiveValues returns the possible values for the Objective const type.
func PossibleObjectiveValues() []Objective {
	return []Objective{
		ObjectiveAuto,
		ObjectiveBalanced,
		ObjectiveBasic,
		ObjectiveHighThroughput,
		ObjectiveLowLatency,
	}
}

// OracleSubscriptionProvisioningState - OracleSubscriptionProvisioningState enum
type OracleSubscriptionProvisioningState string

const (
	// OracleSubscriptionProvisioningStateCanceled - Resource creation was canceled.
	OracleSubscriptionProvisioningStateCanceled OracleSubscriptionProvisioningState = "Canceled"
	// OracleSubscriptionProvisioningStateFailed - Resource creation failed.
	OracleSubscriptionProvisioningStateFailed OracleSubscriptionProvisioningState = "Failed"
	// OracleSubscriptionProvisioningStateSucceeded - Resource has been created.
	OracleSubscriptionProvisioningStateSucceeded OracleSubscriptionProvisioningState = "Succeeded"
)

// PossibleOracleSubscriptionProvisioningStateValues returns the possible values for the OracleSubscriptionProvisioningState const type.
func PossibleOracleSubscriptionProvisioningStateValues() []OracleSubscriptionProvisioningState {
	return []OracleSubscriptionProvisioningState{
		OracleSubscriptionProvisioningStateCanceled,
		OracleSubscriptionProvisioningStateFailed,
		OracleSubscriptionProvisioningStateSucceeded,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	OriginSystem     Origin = "system"
	OriginUser       Origin = "user"
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// PatchingMode - PatchingMode enum
type PatchingMode string

const (
	// PatchingModeNonRolling - Non Rolling value
	PatchingModeNonRolling PatchingMode = "NonRolling"
	// PatchingModeRolling - Rolling value
	PatchingModeRolling PatchingMode = "Rolling"
)

// PossiblePatchingModeValues returns the possible values for the PatchingMode const type.
func PossiblePatchingModeValues() []PatchingMode {
	return []PatchingMode{
		PatchingModeNonRolling,
		PatchingModeRolling,
	}
}

// Preference - Preference enum
type Preference string

const (
	// PreferenceCustomPreference - CustomPreference value
	PreferenceCustomPreference Preference = "CustomPreference"
	// PreferenceNoPreference - NoPreference value
	PreferenceNoPreference Preference = "NoPreference"
)

// PossiblePreferenceValues returns the possible values for the Preference const type.
func PossiblePreferenceValues() []Preference {
	return []Preference{
		PreferenceCustomPreference,
		PreferenceNoPreference,
	}
}

// VirtualNetworkAddressProvisioningState - VirtualNetworkAddressProvisioningState enum
type VirtualNetworkAddressProvisioningState string

const (
	// VirtualNetworkAddressProvisioningStateAvailable - Available value
	VirtualNetworkAddressProvisioningStateAvailable VirtualNetworkAddressProvisioningState = "Available"
	// VirtualNetworkAddressProvisioningStateCanceled - Resource creation was canceled.
	VirtualNetworkAddressProvisioningStateCanceled VirtualNetworkAddressProvisioningState = "Canceled"
	// VirtualNetworkAddressProvisioningStateFailed - Resource creation failed.
	VirtualNetworkAddressProvisioningStateFailed VirtualNetworkAddressProvisioningState = "Failed"
	// VirtualNetworkAddressProvisioningStateProvisioning - Provisioning value
	VirtualNetworkAddressProvisioningStateProvisioning VirtualNetworkAddressProvisioningState = "Provisioning"
	// VirtualNetworkAddressProvisioningStateSucceeded - Resource has been created.
	VirtualNetworkAddressProvisioningStateSucceeded VirtualNetworkAddressProvisioningState = "Succeeded"
	// VirtualNetworkAddressProvisioningStateTerminated - Terminated value
	VirtualNetworkAddressProvisioningStateTerminated VirtualNetworkAddressProvisioningState = "Terminated"
	// VirtualNetworkAddressProvisioningStateTerminating - Terminating value
	VirtualNetworkAddressProvisioningStateTerminating VirtualNetworkAddressProvisioningState = "Terminating"
)

// PossibleVirtualNetworkAddressProvisioningStateValues returns the possible values for the VirtualNetworkAddressProvisioningState const type.
func PossibleVirtualNetworkAddressProvisioningStateValues() []VirtualNetworkAddressProvisioningState {
	return []VirtualNetworkAddressProvisioningState{
		VirtualNetworkAddressProvisioningStateAvailable,
		VirtualNetworkAddressProvisioningStateCanceled,
		VirtualNetworkAddressProvisioningStateFailed,
		VirtualNetworkAddressProvisioningStateProvisioning,
		VirtualNetworkAddressProvisioningStateSucceeded,
		VirtualNetworkAddressProvisioningStateTerminated,
		VirtualNetworkAddressProvisioningStateTerminating,
	}
}

// ZoneType - ZoneType enum
type ZoneType string

const (
	// ZoneTypePrimary - Primary value
	ZoneTypePrimary ZoneType = "Primary"
	// ZoneTypeSecondary - Secondary value
	ZoneTypeSecondary ZoneType = "Secondary"
)

// PossibleZoneTypeValues returns the possible values for the ZoneType const type.
func PossibleZoneTypeValues() []ZoneType {
	return []ZoneType{
		ZoneTypePrimary,
		ZoneTypeSecondary,
	}
}
