// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package pipelinegroups

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/monitor/pipelinegroups"
	moduleVersion = "v0.1.0"
)

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// ExporterType - The exporter type.
type ExporterType string

const (
	// ExporterTypeAzureMonitorWorkspaceLogs - Export logs to Azure Monitor Workspace.
	ExporterTypeAzureMonitorWorkspaceLogs ExporterType = "AzureMonitorWorkspaceLogs"
	// ExporterTypePipelineGroup - Export data to another pipeline group instance.
	ExporterTypePipelineGroup ExporterType = "PipelineGroup"
)

// PossibleExporterTypeValues returns the possible values for the ExporterType const type.
func PossibleExporterTypeValues() []ExporterType {
	return []ExporterType{
		ExporterTypeAzureMonitorWorkspaceLogs,
		ExporterTypePipelineGroup,
	}
}

// ExtendedLocationType - The supported ExtendedLocation types.
type ExtendedLocationType string

const (
	// ExtendedLocationTypeCustomLocation - Azure Custom Locations type
	ExtendedLocationTypeCustomLocation ExtendedLocationType = "CustomLocation"
	// ExtendedLocationTypeEdgeZone - Azure Edge Zones location type
	ExtendedLocationTypeEdgeZone ExtendedLocationType = "EdgeZone"
)

// PossibleExtendedLocationTypeValues returns the possible values for the ExtendedLocationType const type.
func PossibleExtendedLocationTypeValues() []ExtendedLocationType {
	return []ExtendedLocationType{
		ExtendedLocationTypeCustomLocation,
		ExtendedLocationTypeEdgeZone,
	}
}

// ExternalNetworkingMode - The mode of the external networking.
type ExternalNetworkingMode string

const (
	// ExternalNetworkingModeLoadBalancerOnly - Load balancer only.
	ExternalNetworkingModeLoadBalancerOnly ExternalNetworkingMode = "LoadBalancerOnly"
)

// PossibleExternalNetworkingModeValues returns the possible values for the ExternalNetworkingMode const type.
func PossibleExternalNetworkingModeValues() []ExternalNetworkingMode {
	return []ExternalNetworkingMode{
		ExternalNetworkingModeLoadBalancerOnly,
	}
}

// JSONMapperElement - Define the destination's element. The element is the body or the attributes of the message, to which
// the json array mapper will write the output map.
type JSONMapperElement string

const (
	// JSONMapperElementAttributes - Read or write the json array from or to the attributes of the message.
	JSONMapperElementAttributes JSONMapperElement = "attributes"
	// JSONMapperElementBody - Read or write the json array from or to the body of the message.
	JSONMapperElementBody JSONMapperElement = "body"
)

// PossibleJSONMapperElementValues returns the possible values for the JSONMapperElement const type.
func PossibleJSONMapperElementValues() []JSONMapperElement {
	return []JSONMapperElement{
		JSONMapperElementAttributes,
		JSONMapperElementBody,
	}
}

// PipelineType - The pipeline type.
type PipelineType string

const (
	// PipelineTypeLogs - Pipeline for logs telemetry.
	PipelineTypeLogs PipelineType = "Logs"
)

// PossiblePipelineTypeValues returns the possible values for the PipelineType const type.
func PossiblePipelineTypeValues() []PipelineType {
	return []PipelineType{
		PipelineTypeLogs,
	}
}

// ProcessorType - The processor type.
type ProcessorType string

const (
	// ProcessorTypeBatch - Batch processor.
	ProcessorTypeBatch ProcessorType = "Batch"
)

// PossibleProcessorTypeValues returns the possible values for the ProcessorType const type.
func PossibleProcessorTypeValues() []ProcessorType {
	return []ProcessorType{
		ProcessorTypeBatch,
	}
}

// ProvisioningState - The provisioning state of a resource.
type ProvisioningState string

const (
	// ProvisioningStateCanceled - Resource creation was canceled.
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateCreating - The resource is being created.
	ProvisioningStateCreating ProvisioningState = "Creating"
	// ProvisioningStateDeleting - The resource is being deleted.
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed - Resource creation failed.
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateSucceeded - Resource has been created.
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateCanceled,
		ProvisioningStateCreating,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateSucceeded,
	}
}

// ReceiverType - The receiver type.
type ReceiverType string

const (
	// ReceiverTypeAma - Receives data from azure monitor agent receiver.
	ReceiverTypeAma ReceiverType = "Ama"
	// ReceiverTypeOTLP - Receives data from a OTLP collector.
	ReceiverTypeOTLP ReceiverType = "OTLP"
	// ReceiverTypePipelineGroup - Receives data from another pipeline group.
	ReceiverTypePipelineGroup ReceiverType = "PipelineGroup"
	// ReceiverTypeSyslog - Linux syslog.
	ReceiverTypeSyslog ReceiverType = "Syslog"
	// ReceiverTypeUDP - Receives data from an UDP collector.
	ReceiverTypeUDP ReceiverType = "UDP"
)

// PossibleReceiverTypeValues returns the possible values for the ReceiverType const type.
func PossibleReceiverTypeValues() []ReceiverType {
	return []ReceiverType{
		ReceiverTypeAma,
		ReceiverTypeOTLP,
		ReceiverTypePipelineGroup,
		ReceiverTypeSyslog,
		ReceiverTypeUDP,
	}
}

// StreamEncodingType - The encoding of the stream being received.
type StreamEncodingType string

const (
	// StreamEncodingTypeASCII - ASCII encoding.
	StreamEncodingTypeASCII StreamEncodingType = "ascii"
	// StreamEncodingTypeBig5 - The Big5 Chinese character encoding.
	StreamEncodingTypeBig5 StreamEncodingType = "big5"
	// StreamEncodingTypeNop - No encoding validation. Treats the file as a stream of raw bytes.
	StreamEncodingTypeNop StreamEncodingType = "nop"
	// StreamEncodingTypeUTF16Be - UTF-16 encoding with little-endian byte order.
	StreamEncodingTypeUTF16Be StreamEncodingType = "utf-16be"
	// StreamEncodingTypeUTF16Le - UTF-16 encoding with little-endian byte order.
	StreamEncodingTypeUTF16Le StreamEncodingType = "utf-16le"
	// StreamEncodingTypeUTF8 - UTF-8 encoding.
	StreamEncodingTypeUTF8 StreamEncodingType = "utf-8"
)

// PossibleStreamEncodingTypeValues returns the possible values for the StreamEncodingType const type.
func PossibleStreamEncodingTypeValues() []StreamEncodingType {
	return []StreamEncodingType{
		StreamEncodingTypeASCII,
		StreamEncodingTypeBig5,
		StreamEncodingTypeNop,
		StreamEncodingTypeUTF16Be,
		StreamEncodingTypeUTF16Le,
		StreamEncodingTypeUTF8,
	}
}

// SyslogProtocol - Protocol to parse syslog messages. Default rfc3164
type SyslogProtocol string

const (
	// SyslogProtocolRFC3164 - rfc3164 protocol.
	SyslogProtocolRFC3164 SyslogProtocol = "rfc3164"
	// SyslogProtocolRFC5424 - rfc5424 protocol.
	SyslogProtocolRFC5424 SyslogProtocol = "rfc5424"
)

// PossibleSyslogProtocolValues returns the possible values for the SyslogProtocol const type.
func PossibleSyslogProtocolValues() []SyslogProtocol {
	return []SyslogProtocol{
		SyslogProtocolRFC3164,
		SyslogProtocolRFC5424,
	}
}
