// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armmigrationhub

// DatabaseInstancesControllerClientGetDatabaseInstanceOptions contains the optional parameters for the DatabaseInstancesControllerClient.GetDatabaseInstance
// method.
type DatabaseInstancesControllerClientGetDatabaseInstanceOptions struct {
	// placeholder for future optional parameters
}

// DatabaseInstancesControllerClientListDatabaseInstancesOptions contains the optional parameters for the DatabaseInstancesControllerClient.NewListDatabaseInstancesPager
// method.
type DatabaseInstancesControllerClientListDatabaseInstancesOptions struct {
	// The continuation token.
	ContinuationToken *string

	// The number of items to be returned in a single page. This value is honored only if it is less than the 100.
	PageSize *int32
}

// DatabasesControllerClientGetDatabaseOptions contains the optional parameters for the DatabasesControllerClient.GetDatabase
// method.
type DatabasesControllerClientGetDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabasesControllerClientListDatabasesOptions contains the optional parameters for the DatabasesControllerClient.NewListDatabasesPager
// method.
type DatabasesControllerClientListDatabasesOptions struct {
	// The continuation token.
	ContinuationToken *string

	// The number of items to be returned in a single page. This value is honored only if it is less than the 100.
	PageSize *int32
}

// EventsControllerClientDeleteOptions contains the optional parameters for the EventsControllerClient.Delete method.
type EventsControllerClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// EventsControllerClientGetEventOptions contains the optional parameters for the EventsControllerClient.GetEvent method.
type EventsControllerClientGetEventOptions struct {
	// placeholder for future optional parameters
}

// EventsControllerClientListEventsOptions contains the optional parameters for the EventsControllerClient.NewListEventsPager
// method.
type EventsControllerClientListEventsOptions struct {
	// The continuation token.
	ContinuationToken *string
}

// MachinesControllerClientGetMachineOptions contains the optional parameters for the MachinesControllerClient.GetMachine
// method.
type MachinesControllerClientGetMachineOptions struct {
	// placeholder for future optional parameters
}

// MachinesControllerClientListMachinesOptions contains the optional parameters for the MachinesControllerClient.NewListMachinesPager
// method.
type MachinesControllerClientListMachinesOptions struct {
	// The continuation token.
	ContinuationToken *string

	// The number of items to be returned in a single page. This value is honored only if it is less than the 100.
	PageSize *int32
}

// MigrateProjectsControllerClientDeleteMigrateProjectOptions contains the optional parameters for the MigrateProjectsControllerClient.DeleteMigrateProject
// method.
type MigrateProjectsControllerClientDeleteMigrateProjectOptions struct {
	// placeholder for future optional parameters
}

// MigrateProjectsControllerClientGetMigrateProjectOptions contains the optional parameters for the MigrateProjectsControllerClient.GetMigrateProject
// method.
type MigrateProjectsControllerClientGetMigrateProjectOptions struct {
	// placeholder for future optional parameters
}

// MigrateProjectsControllerClientGetToolRegistrationDetailsOptions contains the optional parameters for the MigrateProjectsControllerClient.GetToolRegistrationDetails
// method.
type MigrateProjectsControllerClientGetToolRegistrationDetailsOptions struct {
	// placeholder for future optional parameters
}

// MigrateProjectsControllerClientPatchMigrateProjectOptions contains the optional parameters for the MigrateProjectsControllerClient.PatchMigrateProject
// method.
type MigrateProjectsControllerClientPatchMigrateProjectOptions struct {
	// placeholder for future optional parameters
}

// MigrateProjectsControllerClientPutMigrateProjectOptions contains the optional parameters for the MigrateProjectsControllerClient.PutMigrateProject
// method.
type MigrateProjectsControllerClientPutMigrateProjectOptions struct {
	// placeholder for future optional parameters
}

// MigrateProjectsControllerClientRefreshSummaryOptions contains the optional parameters for the MigrateProjectsControllerClient.RefreshSummary
// method.
type MigrateProjectsControllerClientRefreshSummaryOptions struct {
	// placeholder for future optional parameters
}

// MigrateProjectsControllerClientRegisterToolOptions contains the optional parameters for the MigrateProjectsControllerClient.RegisterTool
// method.
type MigrateProjectsControllerClientRegisterToolOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionControllerClientDeletePrivateEndpointConnectionOptions contains the optional parameters for the
// PrivateEndpointConnectionControllerClient.DeletePrivateEndpointConnection method.
type PrivateEndpointConnectionControllerClientDeletePrivateEndpointConnectionOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionControllerClientGetPrivateEndpointConnectionOptions contains the optional parameters for the PrivateEndpointConnectionControllerClient.GetPrivateEndpointConnection
// method.
type PrivateEndpointConnectionControllerClientGetPrivateEndpointConnectionOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionControllerClientPutPrivateEndpointConnectionOptions contains the optional parameters for the PrivateEndpointConnectionControllerClient.PutPrivateEndpointConnection
// method.
type PrivateEndpointConnectionControllerClientPutPrivateEndpointConnectionOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionProxyControllerClientCreateOptions contains the optional parameters for the PrivateEndpointConnectionProxyControllerClient.Create
// method.
type PrivateEndpointConnectionProxyControllerClientCreateOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionProxyControllerClientDeleteOptions contains the optional parameters for the PrivateEndpointConnectionProxyControllerClient.Delete
// method.
type PrivateEndpointConnectionProxyControllerClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionProxyControllerClientGetOptions contains the optional parameters for the PrivateEndpointConnectionProxyControllerClient.Get
// method.
type PrivateEndpointConnectionProxyControllerClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionProxyControllerClientListPrivateEndpointConnectionProxiesOptions contains the optional parameters
// for the PrivateEndpointConnectionProxyControllerClient.NewListPrivateEndpointConnectionProxiesPager method.
type PrivateEndpointConnectionProxyControllerClientListPrivateEndpointConnectionProxiesOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionProxyControllerClientValidateOptions contains the optional parameters for the PrivateEndpointConnectionProxyControllerClient.Validate
// method.
type PrivateEndpointConnectionProxyControllerClientValidateOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsControllerClientGetPrivateEndpointConnectionsOptions contains the optional parameters for the
// PrivateEndpointConnectionsControllerClient.NewGetPrivateEndpointConnectionsPager method.
type PrivateEndpointConnectionsControllerClientGetPrivateEndpointConnectionsOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourceControllerClientGetPrivateLinkResourceOptions contains the optional parameters for the PrivateLinkResourceControllerClient.GetPrivateLinkResource
// method.
type PrivateLinkResourceControllerClientGetPrivateLinkResourceOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourceControllerClientGetPrivateLinkResourcesOptions contains the optional parameters for the PrivateLinkResourceControllerClient.NewGetPrivateLinkResourcesPager
// method.
type PrivateLinkResourceControllerClientGetPrivateLinkResourcesOptions struct {
	// placeholder for future optional parameters
}

// ProjectsClientListBySubscriptionOptions contains the optional parameters for the ProjectsClient.NewListBySubscriptionPager
// method.
type ProjectsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// ProjectsClientListOptions contains the optional parameters for the ProjectsClient.NewListPager method.
type ProjectsClientListOptions struct {
	// placeholder for future optional parameters
}

// SolutionsControllerClientCleanupDataOptions contains the optional parameters for the SolutionsControllerClient.CleanupData
// method.
type SolutionsControllerClientCleanupDataOptions struct {
	// placeholder for future optional parameters
}

// SolutionsControllerClientCreateOptions contains the optional parameters for the SolutionsControllerClient.Create method.
type SolutionsControllerClientCreateOptions struct {
	// placeholder for future optional parameters
}

// SolutionsControllerClientDeleteSolutionOptions contains the optional parameters for the SolutionsControllerClient.DeleteSolution
// method.
type SolutionsControllerClientDeleteSolutionOptions struct {
	// placeholder for future optional parameters
}

// SolutionsControllerClientGetConfigOptions contains the optional parameters for the SolutionsControllerClient.GetConfig
// method.
type SolutionsControllerClientGetConfigOptions struct {
	// placeholder for future optional parameters
}

// SolutionsControllerClientGetSolutionOptions contains the optional parameters for the SolutionsControllerClient.GetSolution
// method.
type SolutionsControllerClientGetSolutionOptions struct {
	// placeholder for future optional parameters
}

// SolutionsControllerClientListSolutionsOptions contains the optional parameters for the SolutionsControllerClient.NewListSolutionsPager
// method.
type SolutionsControllerClientListSolutionsOptions struct {
	// placeholder for future optional parameters
}

// SolutionsControllerClientUpdateOptions contains the optional parameters for the SolutionsControllerClient.Update method.
type SolutionsControllerClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// VirtualDesktopUserControllerClientGetVirtualDesktopUserOptions contains the optional parameters for the VirtualDesktopUserControllerClient.GetVirtualDesktopUser
// method.
type VirtualDesktopUserControllerClientGetVirtualDesktopUserOptions struct {
	// placeholder for future optional parameters
}

// VirtualDesktopUserControllerClientListVirtualDesktopUsersOptions contains the optional parameters for the VirtualDesktopUserControllerClient.NewListVirtualDesktopUsersPager
// method.
type VirtualDesktopUserControllerClientListVirtualDesktopUsersOptions struct {
	// The continuation token.
	ContinuationToken *string

	// The number of items to be returned in a single page. This value is honored only if it is less than the 100.
	PageSize *int32
}

// WebServersControllerClientGetWebServerOptions contains the optional parameters for the WebServersControllerClient.GetWebServer
// method.
type WebServersControllerClientGetWebServerOptions struct {
	// placeholder for future optional parameters
}

// WebServersControllerClientListWebServersOptions contains the optional parameters for the WebServersControllerClient.NewListWebServersPager
// method.
type WebServersControllerClientListWebServersOptions struct {
	// The continuation token.
	ContinuationToken *string

	// The number of items to be returned in a single page. This value is honored only if it is less than the 100.
	PageSize *int32
}

// WebSitesControllerClientGetWebSiteOptions contains the optional parameters for the WebSitesControllerClient.GetWebSite
// method.
type WebSitesControllerClientGetWebSiteOptions struct {
	// placeholder for future optional parameters
}

// WebSitesControllerClientListWebSitesOptions contains the optional parameters for the WebSitesControllerClient.NewListWebSitesPager
// method.
type WebSitesControllerClientListWebSitesOptions struct {
	// The continuation token.
	ContinuationToken *string

	// The number of items to be returned in a single page. This value is honored only if it is less than the 100.
	PageSize *int32
}
