//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armresourcehealth

import "time"

// ErrorResponse - Error details.
type ErrorResponse struct {
	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`
}

// Event - Service health event
type Event struct {
	// Properties of event.
	Properties *EventProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// EventProperties - Properties of event.
type EventProperties struct {
	// Contains additional information regarding the event.
	AdditionalInformation *EventPropertiesAdditionalInformation `json:"additionalInformation,omitempty"`

	// Article of event.
	Article *EventPropertiesArticle `json:"article,omitempty"`

	// Contains the communication message for the event, that could include summary, root cause and other details.
	Description *string `json:"description,omitempty"`

	// The expected duration of the event in seconds.
	Duration *int32 `json:"duration,omitempty"`

	// Tells if we want to enable or disable Microsoft Support for this event.
	EnableChatWithUs *bool `json:"enableChatWithUs,omitempty"`

	// Tells if we want to enable or disable Microsoft Support for this event.
	EnableMicrosoftSupport *bool `json:"enableMicrosoftSupport,omitempty"`

	// Level of event.
	EventLevel *EventLevelValues `json:"eventLevel,omitempty"`

	// Source of event.
	EventSource *EventSourceValues `json:"eventSource,omitempty"`

	// Type of event.
	EventType *EventTypeValues `json:"eventType,omitempty"`

	// Frequently asked questions for the service health event.
	Faqs []*Faq `json:"faqs,omitempty"`

	// Header text of event.
	Header *string `json:"header,omitempty"`

	// Stage for HIR Document
	HirStage *string `json:"hirStage,omitempty"`

	// List services impacted by the service health event.
	Impact []*Impact `json:"impact,omitempty"`

	// It provides the Timestamp for when the health impacting event resolved.
	ImpactMitigationTime *time.Time `json:"impactMitigationTime,omitempty"`

	// It provides the Timestamp for when the health impacting event started.
	ImpactStartTime *time.Time `json:"impactStartTime,omitempty"`

	// The event's impact type
	ImpactType *string `json:"impactType,omitempty"`

	// It provides information if the event is High incident rate event or not.
	IsHIR *bool `json:"isHIR,omitempty"`

	// It provides the Timestamp for when the health impacting event was last updated.
	LastUpdateTime *time.Time `json:"lastUpdateTime,omitempty"`

	// Level of insight.
	Level *LevelValues `json:"level,omitempty"`

	// Useful links of event.
	Links []*Link `json:"links,omitempty"`

	// Is true if the event is platform initiated.
	PlatformInitiated *bool `json:"platformInitiated,omitempty"`

	// Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority
	// followed by planned maintenance and health advisory. Critical events have
	// higher priority followed by error, warning and informational. Furthermore, active events have higher priority than resolved.
	Priority *int32 `json:"priority,omitempty"`

	// Recommended actions of event.
	RecommendedActions *EventPropertiesRecommendedActions `json:"recommendedActions,omitempty"`

	// Current status of event.
	Status *EventStatusValues `json:"status,omitempty"`

	// Summary text of event.
	Summary *string `json:"summary,omitempty"`

	// Title text of event.
	Title *string `json:"title,omitempty"`
}

// EventPropertiesAdditionalInformation - Contains additional information regarding the event.
type EventPropertiesAdditionalInformation struct {
	// Additional information message.
	Message *string `json:"message,omitempty"`
}

// EventPropertiesArticle - Article of event.
type EventPropertiesArticle struct {
	// Article content of event.
	ArticleContent *string `json:"articleContent,omitempty"`
}

// EventPropertiesRecommendedActions - Recommended actions of event.
type EventPropertiesRecommendedActions struct {
	// Recommended actions for the service health event.
	Actions []*EventPropertiesRecommendedActionsItem `json:"actions,omitempty"`

	// Recommended action locale for the service health event.
	LocaleCode *string `json:"localeCode,omitempty"`

	// Recommended action title for the service health event.
	Message *string `json:"message,omitempty"`
}

// EventPropertiesRecommendedActionsItem - Recommended action for the service health event.
type EventPropertiesRecommendedActionsItem struct {
	// Recommended action text
	ActionText *string `json:"actionText,omitempty"`

	// Recommended action group Id for the service health event.
	GroupID *int32 `json:"groupId,omitempty"`
}

// Events - The List events operation response.
type Events struct {
	// REQUIRED; The list of event.
	Value []*Event `json:"value,omitempty"`

	// The URI to fetch the next page of events. Call ListNext() with this URI to fetch the next page of events.
	NextLink *string `json:"nextLink,omitempty"`
}

// EventsClientListBySingleResourceOptions contains the optional parameters for the EventsClient.ListBySingleResource method.
type EventsClientListBySingleResourceOptions struct {
	// A valid odata query to limit the events returned. The logical operators and, or, equal, not equal, and top are supported.
	// For example, $filter=Properties/EventType eq 'ServiceIssue' or
	// Properties/EventType eq 'PlannedMaintenance' OR %24filter=Properties%2FEventType%20eq%20%27ServiceIssue%27%20or%20Properties%2FEventType%20eq%20%27PlannedMaintenance%27
	Filter *string
	// setting view=full expands the article parameters
	View *string
}

// EventsClientListBySubscriptionIDOptions contains the optional parameters for the EventsClient.ListBySubscriptionID method.
type EventsClientListBySubscriptionIDOptions struct {
	// A valid odata query to limit the events returned. The logical operators and, or, equal, not equal, and top are supported.
	// For example, $filter=Properties/EventType eq 'ServiceIssue' or
	// Properties/EventType eq 'PlannedMaintenance' OR %24filter=Properties%2FEventType%20eq%20%27ServiceIssue%27%20or%20Properties%2FEventType%20eq%20%27PlannedMaintenance%27
	Filter *string
	// Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR
	// queryStartTime=7%2F24%2F2020
	QueryStartTime *string
	// setting view=full expands the article parameters
	View *string
}

// Faq - Frequently asked question for the service health event
type Faq struct {
	// FAQ answer for the service health event.
	Answer *string `json:"answer,omitempty"`

	// FAQ locale for the service health event.
	LocaleCode *string `json:"localeCode,omitempty"`

	// FAQ question for the service health event.
	Question *string `json:"question,omitempty"`
}

// Impact - Azure service impacted by the service health event.
type Impact struct {
	// List regions impacted by the service health event.
	ImpactedRegions []*ImpactedServiceRegion `json:"impactedRegions,omitempty"`

	// Impacted service name.
	ImpactedService *string `json:"impactedService,omitempty"`
}

// ImpactedServiceRegion - Azure region impacted by the service health event.
type ImpactedServiceRegion struct {
	// Impacted region name.
	ImpactedRegion *string `json:"impactedRegion,omitempty"`

	// List subscription impacted by the service health event.
	ImpactedSubscriptions []*string `json:"impactedSubscriptions,omitempty"`

	// It provides the Timestamp for when the last update for the service health event.
	LastUpdateTime *time.Time `json:"lastUpdateTime,omitempty"`

	// Current status of event in the region.
	Status *EventStatusValues `json:"status,omitempty"`

	// List of updates for given service health event.
	Updates []*Update `json:"updates,omitempty"`
}

// Link - Useful links for service health event.
type Link struct {
	// It provides the name of portal extension blade to produce link for given service health event.
	BladeName *string `json:"bladeName,omitempty"`

	// Display text of link.
	DisplayText *LinkDisplayText `json:"displayText,omitempty"`

	// It provides the name of portal extension to produce link for given service health event.
	ExtensionName *string `json:"extensionName,omitempty"`

	// It provides a map of parameter name and value for portal extension blade to produce lik for given service health event.
	Parameters interface{} `json:"parameters,omitempty"`

	// Type of link.
	Type *LinkTypeValues `json:"type,omitempty"`
}

// LinkDisplayText - Display text of link.
type LinkDisplayText struct {
	// Localized display text of link.
	LocalizedValue *string `json:"localizedValue,omitempty"`

	// Display text of link.
	Value *string `json:"value,omitempty"`
}

// Operation available in the resourcehealth resource provider.
type Operation struct {
	// Properties of the operation.
	Display *OperationDisplay `json:"display,omitempty"`

	// Indicates whether the operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// Name of the operation.
	Name *string `json:"name,omitempty"`
}

// OperationDisplay - Properties of the operation.
type OperationDisplay struct {
	// Description of the operation.
	Description *string `json:"description,omitempty"`

	// Operation name.
	Operation *string `json:"operation,omitempty"`

	// Provider name.
	Provider *string `json:"provider,omitempty"`

	// Resource name.
	Resource *string `json:"resource,omitempty"`
}

// OperationListResult - Lists the operations response.
type OperationListResult struct {
	// REQUIRED; List of operations available in the resourcehealth resource provider.
	Value []*Operation `json:"value,omitempty"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// Update for service health event.
type Update struct {
	// Summary text for the given update for the service health event.
	Summary *string `json:"summary,omitempty"`

	// It provides the Timestamp for the given update for the service health event.
	UpdateDateTime *time.Time `json:"updateDateTime,omitempty"`
}
