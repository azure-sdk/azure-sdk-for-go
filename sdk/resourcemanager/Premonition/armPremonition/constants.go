//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armPremonition

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/Premonition/armPremonition"
	moduleVersion = "v0.1.0"
)

// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// AnalysisKind - Supported types of analysis
type AnalysisKind string

const (
	// AnalysisKindMetagenomics - Metagenomics analysis: identify the sources of genetic material in a sample
	AnalysisKindMetagenomics AnalysisKind = "Metagenomics"
)

// PossibleAnalysisKindValues returns the possible values for the AnalysisKind const type.
func PossibleAnalysisKindValues() []AnalysisKind {
	return []AnalysisKind{
		AnalysisKindMetagenomics,
	}
}

// AnalysisState - The status of an analysis
type AnalysisState string

const (
	// AnalysisStateCanceled - Resource creation was canceled.
	AnalysisStateCanceled AnalysisState = "Canceled"
	// AnalysisStateFailed - Resource creation failed.
	AnalysisStateFailed AnalysisState = "Failed"
	// AnalysisStateQueued - Submitted for processing
	AnalysisStateQueued AnalysisState = "Queued"
	// AnalysisStateStarted - In progress
	AnalysisStateStarted AnalysisState = "Started"
	// AnalysisStateSucceeded - Resource has been created.
	AnalysisStateSucceeded AnalysisState = "Succeeded"
)

// PossibleAnalysisStateValues returns the possible values for the AnalysisState const type.
func PossibleAnalysisStateValues() []AnalysisState {
	return []AnalysisState{
		AnalysisStateCanceled,
		AnalysisStateFailed,
		AnalysisStateQueued,
		AnalysisStateStarted,
		AnalysisStateSucceeded,
	}
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	OriginSystem     Origin = "system"
	OriginUser       Origin = "user"
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// ResourceProvisioningState - The provisioning state of a resource type.
type ResourceProvisioningState string

const (
	// ResourceProvisioningStateCanceled - Resource creation was canceled.
	ResourceProvisioningStateCanceled ResourceProvisioningState = "Canceled"
	// ResourceProvisioningStateFailed - Resource creation failed.
	ResourceProvisioningStateFailed ResourceProvisioningState = "Failed"
	// ResourceProvisioningStateSucceeded - Resource has been created.
	ResourceProvisioningStateSucceeded ResourceProvisioningState = "Succeeded"
)

// PossibleResourceProvisioningStateValues returns the possible values for the ResourceProvisioningState const type.
func PossibleResourceProvisioningStateValues() []ResourceProvisioningState {
	return []ResourceProvisioningState{
		ResourceProvisioningStateCanceled,
		ResourceProvisioningStateFailed,
		ResourceProvisioningStateSucceeded,
	}
}

// TaxonomyVersion - Valid taxonomy database versions
type TaxonomyVersion string

const (
	// TaxonomyVersionLatest - The latest version of the taxonomy database
	TaxonomyVersionLatest TaxonomyVersion = "Latest"
	// TaxonomyVersionV20200706 - Taxonomy database derived from NCBI and COL as of 2020-07-06
	TaxonomyVersionV20200706 TaxonomyVersion = "v2020_07_06"
)

// PossibleTaxonomyVersionValues returns the possible values for the TaxonomyVersion const type.
func PossibleTaxonomyVersionValues() []TaxonomyVersion {
	return []TaxonomyVersion{
		TaxonomyVersionLatest,
		TaxonomyVersionV20200706,
	}
}
