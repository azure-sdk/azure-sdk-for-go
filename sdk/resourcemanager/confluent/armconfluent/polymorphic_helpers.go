//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armconfluent

import "encoding/json"

func unmarshalConnectorServiceTypeInfoBaseClassification(rawMsg json.RawMessage) (ConnectorServiceTypeInfoBaseClassification, error) {
	if rawMsg == nil || string(rawMsg) == "null" {
		return nil, nil
	}
	var m map[string]any
	if err := json.Unmarshal(rawMsg, &m); err != nil {
		return nil, err
	}
	var b ConnectorServiceTypeInfoBaseClassification
	switch m["connectorServiceType"] {
	case string(ConnectorServiceTypeAzureBlobStorageSinkConnector):
		b = &AzureBlobStorageSinkConnectorServiceInfo{}
	case string(ConnectorServiceTypeAzureBlobStorageSourceConnector):
		b = &AzureBlobStorageSourceConnectorServiceInfo{}
	case string(ConnectorServiceTypeAzureCosmosDBSinkConnector):
		b = &AzureCosmosDBSinkConnectorServiceInfo{}
	case string(ConnectorServiceTypeAzureCosmosDBSourceConnector):
		b = &AzureCosmosDBSourceConnectorServiceInfo{}
	case string(ConnectorServiceTypeAzureSynapseAnalyticsSinkConnector):
		b = &AzureSynapseAnalyticsSinkConnectorServiceInfo{}
	default:
		b = &ConnectorServiceTypeInfoBase{}
	}
	if err := json.Unmarshal(rawMsg, b); err != nil {
		return nil, err
	}
	return b, nil
}

func unmarshalPartnerInfoBaseClassification(rawMsg json.RawMessage) (PartnerInfoBaseClassification, error) {
	if rawMsg == nil || string(rawMsg) == "null" {
		return nil, nil
	}
	var m map[string]any
	if err := json.Unmarshal(rawMsg, &m); err != nil {
		return nil, err
	}
	var b PartnerInfoBaseClassification
	switch m["partnerConnectorType"] {
	case string(PartnerConnectorTypeKafkaAzureBlobStorageSink):
		b = &KafkaAzureBlobStorageSinkConnectorInfo{}
	case string(PartnerConnectorTypeKafkaAzureBlobStorageSource):
		b = &KafkaAzureBlobStorageSourceConnectorInfo{}
	case string(PartnerConnectorTypeKafkaAzureCosmosDBSink):
		b = &KafkaAzureCosmosDBSinkConnectorInfo{}
	case string(PartnerConnectorTypeKafkaAzureCosmosDBSource):
		b = &KafkaAzureCosmosDBSourceConnectorInfo{}
	case string(PartnerConnectorTypeKafkaAzureSynapseAnalyticsSink):
		b = &KafkaAzureSynapseAnalyticsSinkConnectorInfo{}
	default:
		b = &PartnerInfoBase{}
	}
	if err := json.Unmarshal(rawMsg, b); err != nil {
		return nil, err
	}
	return b, nil
}
