//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armauthorization

import "time"

// Alert - The alert.
type Alert struct {
	// Alert properties.
	Properties *AlertProperties `json:"properties,omitempty"`

	// READ-ONLY; The alert ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The alert name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The alert type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AlertConfiguration - Alert configuration.
type AlertConfiguration struct {
	// Alert configuration properties.
	Properties AlertConfigurationPropertiesClassification `json:"properties,omitempty"`

	// READ-ONLY; The alert configuration ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The alert configuration name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The alert configuration type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AlertConfigurationListResult - Alert configuration list operation result.
type AlertConfigurationListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Alert configuration list
	Value []*AlertConfiguration `json:"value,omitempty"`
}

// AlertConfigurationPropertiesClassification provides polymorphic access to related types.
// Call the interface's GetAlertConfigurationProperties() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *AlertConfigurationProperties, *AzureRolesAssignedOutsidePimAlertConfigurationProperties, *DuplicateRoleCreatedAlertConfigurationProperties,
// - *TooManyOwnersAssignedToResourceAlertConfigurationProperties, *TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties
type AlertConfigurationPropertiesClassification interface {
	// GetAlertConfigurationProperties returns the AlertConfigurationProperties content of the underlying type.
	GetAlertConfigurationProperties() *AlertConfigurationProperties
}

// AlertConfigurationProperties - Alert configuration properties.
type AlertConfigurationProperties struct {
	// REQUIRED; The alert configuration type.
	AlertConfigurationType *string `json:"alertConfigurationType,omitempty"`

	// True if the alert is enabled, false will disable the scanning for the specific alert.
	IsEnabled *bool `json:"isEnabled,omitempty"`

	// READ-ONLY; The alert definition ID.
	AlertDefinitionID *string `json:"alertDefinitionId,omitempty" azure:"ro"`

	// READ-ONLY; The alert scope.
	Scope *string `json:"scope,omitempty" azure:"ro"`
}

// GetAlertConfigurationProperties implements the AlertConfigurationPropertiesClassification interface for type AlertConfigurationProperties.
func (a *AlertConfigurationProperties) GetAlertConfigurationProperties() *AlertConfigurationProperties {
	return a
}

// AlertConfigurationsClientGetOptions contains the optional parameters for the AlertConfigurationsClient.Get method.
type AlertConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AlertConfigurationsClientListForScopeOptions contains the optional parameters for the AlertConfigurationsClient.ListForScope
// method.
type AlertConfigurationsClientListForScopeOptions struct {
	// placeholder for future optional parameters
}

// AlertConfigurationsClientUpdateOptions contains the optional parameters for the AlertConfigurationsClient.Update method.
type AlertConfigurationsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// AlertDefinition - Alert definition
type AlertDefinition struct {
	// Alert definition properties.
	Properties *AlertDefinitionProperties `json:"properties,omitempty"`

	// READ-ONLY; The alert definition ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The alert definition name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The alert definition type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AlertDefinitionListResult - Alert definition list operation result.
type AlertDefinitionListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Alert definition list
	Value []*AlertDefinition `json:"value,omitempty"`
}

// AlertDefinitionProperties - Alert definition properties.
type AlertDefinitionProperties struct {
	// READ-ONLY; The alert description.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; The alert display name.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; The ways to prevent the alert.
	HowToPrevent *string `json:"howToPrevent,omitempty" azure:"ro"`

	// READ-ONLY; True if the alert configuration can be configured; false, otherwise.
	IsConfigurable *bool `json:"isConfigurable,omitempty" azure:"ro"`

	// READ-ONLY; True if the alert can be remediated; false, otherwise.
	IsRemediatable *bool `json:"isRemediatable,omitempty" azure:"ro"`

	// READ-ONLY; The methods to mitigate the alert.
	MitigationSteps *string `json:"mitigationSteps,omitempty" azure:"ro"`

	// READ-ONLY; The alert scope.
	Scope *string `json:"scope,omitempty" azure:"ro"`

	// READ-ONLY; Security impact of the alert.
	SecurityImpact *string `json:"securityImpact,omitempty" azure:"ro"`

	// READ-ONLY; Severity level of the alert.
	SeverityLevel *SeverityLevel `json:"severityLevel,omitempty" azure:"ro"`
}

// AlertDefinitionsClientGetOptions contains the optional parameters for the AlertDefinitionsClient.Get method.
type AlertDefinitionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AlertDefinitionsClientListForScopeOptions contains the optional parameters for the AlertDefinitionsClient.ListForScope
// method.
type AlertDefinitionsClientListForScopeOptions struct {
	// placeholder for future optional parameters
}

// AlertIncident - Alert incident
type AlertIncident struct {
	// Alert incident properties.
	Properties AlertIncidentPropertiesClassification `json:"properties,omitempty"`

	// READ-ONLY; The alert incident ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The alert incident name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The alert incident type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AlertIncidentListResult - Alert incident list operation result.
type AlertIncidentListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Alert incident list
	Value []*AlertIncident `json:"value,omitempty"`
}

// AlertIncidentPropertiesClassification provides polymorphic access to related types.
// Call the interface's GetAlertIncidentProperties() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *AlertIncidentProperties, *AzureRolesAssignedOutsidePimAlertIncidentProperties, *DuplicateRoleCreatedAlertIncidentProperties,
// - *TooManyOwnersAssignedToResourceAlertIncidentProperties, *TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties
type AlertIncidentPropertiesClassification interface {
	// GetAlertIncidentProperties returns the AlertIncidentProperties content of the underlying type.
	GetAlertIncidentProperties() *AlertIncidentProperties
}

// AlertIncidentProperties - Alert incident properties
type AlertIncidentProperties struct {
	// REQUIRED; The alert incident type.
	AlertIncidentType *string `json:"alertIncidentType,omitempty"`
}

// GetAlertIncidentProperties implements the AlertIncidentPropertiesClassification interface for type AlertIncidentProperties.
func (a *AlertIncidentProperties) GetAlertIncidentProperties() *AlertIncidentProperties { return a }

// AlertIncidentsClientGetOptions contains the optional parameters for the AlertIncidentsClient.Get method.
type AlertIncidentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AlertIncidentsClientListForScopeOptions contains the optional parameters for the AlertIncidentsClient.ListForScope method.
type AlertIncidentsClientListForScopeOptions struct {
	// placeholder for future optional parameters
}

// AlertIncidentsClientRemediateOptions contains the optional parameters for the AlertIncidentsClient.Remediate method.
type AlertIncidentsClientRemediateOptions struct {
	// placeholder for future optional parameters
}

// AlertListResult - Alert list operation result.
type AlertListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Alert list
	Value []*Alert `json:"value,omitempty"`
}

// AlertOperationClientGetOptions contains the optional parameters for the AlertOperationClient.Get method.
type AlertOperationClientGetOptions struct {
	// placeholder for future optional parameters
}

// AlertOperationClientListForScopeOptions contains the optional parameters for the AlertOperationClient.ListForScope method.
type AlertOperationClientListForScopeOptions struct {
	// placeholder for future optional parameters
}

// AlertOperationListResult - Alert operation list operation result.
type AlertOperationListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Alert operation list
	Value []*AlertOperationResult `json:"value,omitempty"`
}

// AlertOperationResult - Alert operation result
type AlertOperationResult struct {
	// READ-ONLY; The id of the alert operation.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The status of the alert operation.
	Status *string `json:"status,omitempty" azure:"ro"`
}

// AlertProperties - Alert properties.
type AlertProperties struct {
	// False by default; true if the alert is active.
	IsActive *bool `json:"isActive,omitempty"`

	// READ-ONLY; The alert configuration.
	AlertConfiguration *AlertConfiguration `json:"alertConfiguration,omitempty" azure:"ro"`

	// READ-ONLY; The alert definition.
	AlertDefinition *AlertDefinition `json:"alertDefinition,omitempty" azure:"ro"`

	// READ-ONLY; The alert incidents.
	AlertIncidents []*AlertIncident `json:"alertIncidents,omitempty" azure:"ro"`

	// READ-ONLY; The number of generated incidents of the alert.
	IncidentCount *int32 `json:"incidentCount,omitempty" azure:"ro"`

	// READ-ONLY; The date time when the alert configuration was updated or new incidents were generated.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty" azure:"ro"`

	// READ-ONLY; The date time when the alert was last scanned.
	LastScannedDateTime *time.Time `json:"lastScannedDateTime,omitempty" azure:"ro"`

	// READ-ONLY; The alert scope.
	Scope *string `json:"scope,omitempty" azure:"ro"`
}

// AlertsClientBeginRefreshAllOptions contains the optional parameters for the AlertsClient.BeginRefreshAll method.
type AlertsClientBeginRefreshAllOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AlertsClientBeginRefreshOptions contains the optional parameters for the AlertsClient.BeginRefresh method.
type AlertsClientBeginRefreshOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AlertsClientGetOptions contains the optional parameters for the AlertsClient.Get method.
type AlertsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AlertsClientListForScopeOptions contains the optional parameters for the AlertsClient.ListForScope method.
type AlertsClientListForScopeOptions struct {
	// placeholder for future optional parameters
}

// AlertsClientUpdateOptions contains the optional parameters for the AlertsClient.Update method.
type AlertsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// AzureRolesAssignedOutsidePimAlertConfigurationProperties - The Azure roles assigned outside PIM alert configuration properties.
type AzureRolesAssignedOutsidePimAlertConfigurationProperties struct {
	// REQUIRED; The alert configuration type.
	AlertConfigurationType *string `json:"alertConfigurationType,omitempty"`

	// True if the alert is enabled, false will disable the scanning for the specific alert.
	IsEnabled *bool `json:"isEnabled,omitempty"`

	// READ-ONLY; The alert definition ID.
	AlertDefinitionID *string `json:"alertDefinitionId,omitempty" azure:"ro"`

	// READ-ONLY; The alert scope.
	Scope *string `json:"scope,omitempty" azure:"ro"`
}

// GetAlertConfigurationProperties implements the AlertConfigurationPropertiesClassification interface for type AzureRolesAssignedOutsidePimAlertConfigurationProperties.
func (a *AzureRolesAssignedOutsidePimAlertConfigurationProperties) GetAlertConfigurationProperties() *AlertConfigurationProperties {
	return &AlertConfigurationProperties{
		AlertDefinitionID:      a.AlertDefinitionID,
		Scope:                  a.Scope,
		IsEnabled:              a.IsEnabled,
		AlertConfigurationType: a.AlertConfigurationType,
	}
}

// AzureRolesAssignedOutsidePimAlertIncidentProperties - Azure roles assigned outside PIM alert incident properties.
type AzureRolesAssignedOutsidePimAlertIncidentProperties struct {
	// REQUIRED; The alert incident type.
	AlertIncidentType *string `json:"alertIncidentType,omitempty"`

	// READ-ONLY; The assignee display name.
	AssigneeDisplayName *string `json:"assigneeDisplayName,omitempty" azure:"ro"`

	// READ-ONLY; The assignee ID.
	AssigneeID *string `json:"assigneeId,omitempty" azure:"ro"`

	// READ-ONLY; The assignee user principal name.
	AssigneeUserPrincipalName *string `json:"assigneeUserPrincipalName,omitempty" azure:"ro"`

	// READ-ONLY; The date the assignment was activated.
	AssignmentActivatedDate *time.Time `json:"assignmentActivatedDate,omitempty" azure:"ro"`

	// READ-ONLY; The requestor display name.
	RequestorDisplayName *string `json:"requestorDisplayName,omitempty" azure:"ro"`

	// READ-ONLY; The requestor ID.
	RequestorID *string `json:"requestorId,omitempty" azure:"ro"`

	// READ-ONLY; The requestor user principal name.
	RequestorUserPrincipalName *string `json:"requestorUserPrincipalName,omitempty" azure:"ro"`

	// READ-ONLY; The role definition ID.
	RoleDefinitionID *string `json:"roleDefinitionId,omitempty" azure:"ro"`

	// READ-ONLY; The role display name.
	RoleDisplayName *string `json:"roleDisplayName,omitempty" azure:"ro"`

	// READ-ONLY; The role template ID.
	RoleTemplateID *string `json:"roleTemplateId,omitempty" azure:"ro"`
}

// GetAlertIncidentProperties implements the AlertIncidentPropertiesClassification interface for type AzureRolesAssignedOutsidePimAlertIncidentProperties.
func (a *AzureRolesAssignedOutsidePimAlertIncidentProperties) GetAlertIncidentProperties() *AlertIncidentProperties {
	return &AlertIncidentProperties{
		AlertIncidentType: a.AlertIncidentType,
	}
}

// DuplicateRoleCreatedAlertConfigurationProperties - The duplicate role created alert configuration.
type DuplicateRoleCreatedAlertConfigurationProperties struct {
	// REQUIRED; The alert configuration type.
	AlertConfigurationType *string `json:"alertConfigurationType,omitempty"`

	// True if the alert is enabled, false will disable the scanning for the specific alert.
	IsEnabled *bool `json:"isEnabled,omitempty"`

	// READ-ONLY; The alert definition ID.
	AlertDefinitionID *string `json:"alertDefinitionId,omitempty" azure:"ro"`

	// READ-ONLY; The alert scope.
	Scope *string `json:"scope,omitempty" azure:"ro"`
}

// GetAlertConfigurationProperties implements the AlertConfigurationPropertiesClassification interface for type DuplicateRoleCreatedAlertConfigurationProperties.
func (d *DuplicateRoleCreatedAlertConfigurationProperties) GetAlertConfigurationProperties() *AlertConfigurationProperties {
	return &AlertConfigurationProperties{
		AlertDefinitionID:      d.AlertDefinitionID,
		Scope:                  d.Scope,
		IsEnabled:              d.IsEnabled,
		AlertConfigurationType: d.AlertConfigurationType,
	}
}

// DuplicateRoleCreatedAlertIncidentProperties - Duplicate role created alert incident properties.
type DuplicateRoleCreatedAlertIncidentProperties struct {
	// REQUIRED; The alert incident type.
	AlertIncidentType *string `json:"alertIncidentType,omitempty"`

	// READ-ONLY; The duplicate roles.
	DuplicateRoles *string `json:"duplicateRoles,omitempty" azure:"ro"`

	// READ-ONLY; The reason for the incident.
	Reason *string `json:"reason,omitempty" azure:"ro"`

	// READ-ONLY; The role name.
	RoleName *string `json:"roleName,omitempty" azure:"ro"`
}

// GetAlertIncidentProperties implements the AlertIncidentPropertiesClassification interface for type DuplicateRoleCreatedAlertIncidentProperties.
func (d *DuplicateRoleCreatedAlertIncidentProperties) GetAlertIncidentProperties() *AlertIncidentProperties {
	return &AlertIncidentProperties{
		AlertIncidentType: d.AlertIncidentType,
	}
}

// TooManyOwnersAssignedToResourceAlertConfigurationProperties - Too many owners assigned to resource alert configuration
// properties.
type TooManyOwnersAssignedToResourceAlertConfigurationProperties struct {
	// REQUIRED; The alert configuration type.
	AlertConfigurationType *string `json:"alertConfigurationType,omitempty"`

	// True if the alert is enabled, false will disable the scanning for the specific alert.
	IsEnabled *bool `json:"isEnabled,omitempty"`

	// The threshold number of owners.
	ThresholdNumberOfOwners *int32 `json:"thresholdNumberOfOwners,omitempty"`

	// The threshold percentage of owners out of all role members.
	ThresholdPercentageOfOwnersOutOfAllRoleMembers *int32 `json:"thresholdPercentageOfOwnersOutOfAllRoleMembers,omitempty"`

	// READ-ONLY; The alert definition ID.
	AlertDefinitionID *string `json:"alertDefinitionId,omitempty" azure:"ro"`

	// READ-ONLY; The alert scope.
	Scope *string `json:"scope,omitempty" azure:"ro"`
}

// GetAlertConfigurationProperties implements the AlertConfigurationPropertiesClassification interface for type TooManyOwnersAssignedToResourceAlertConfigurationProperties.
func (t *TooManyOwnersAssignedToResourceAlertConfigurationProperties) GetAlertConfigurationProperties() *AlertConfigurationProperties {
	return &AlertConfigurationProperties{
		AlertDefinitionID:      t.AlertDefinitionID,
		Scope:                  t.Scope,
		IsEnabled:              t.IsEnabled,
		AlertConfigurationType: t.AlertConfigurationType,
	}
}

// TooManyOwnersAssignedToResourceAlertIncidentProperties - Too many owners assigned to resource alert incident properties.
type TooManyOwnersAssignedToResourceAlertIncidentProperties struct {
	// REQUIRED; The alert incident type.
	AlertIncidentType *string `json:"alertIncidentType,omitempty"`

	// READ-ONLY; The assignee name.
	AssigneeName *string `json:"assigneeName,omitempty" azure:"ro"`

	// READ-ONLY; The assignee type.
	AssigneeType *string `json:"assigneeType,omitempty" azure:"ro"`
}

// GetAlertIncidentProperties implements the AlertIncidentPropertiesClassification interface for type TooManyOwnersAssignedToResourceAlertIncidentProperties.
func (t *TooManyOwnersAssignedToResourceAlertIncidentProperties) GetAlertIncidentProperties() *AlertIncidentProperties {
	return &AlertIncidentProperties{
		AlertIncidentType: t.AlertIncidentType,
	}
}

// TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties - Too many permanent owners assigned to resource alert
// configuration properties.
type TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties struct {
	// REQUIRED; The alert configuration type.
	AlertConfigurationType *string `json:"alertConfigurationType,omitempty"`

	// True if the alert is enabled, false will disable the scanning for the specific alert.
	IsEnabled *bool `json:"isEnabled,omitempty"`

	// The threshold number of permanent owners.
	ThresholdNumberOfPermanentOwners *int32 `json:"thresholdNumberOfPermanentOwners,omitempty"`

	// The threshold percentage of permanent owners out of all owners.
	ThresholdPercentageOfPermanentOwnersOutOfAllOwners *int32 `json:"thresholdPercentageOfPermanentOwnersOutOfAllOwners,omitempty"`

	// READ-ONLY; The alert definition ID.
	AlertDefinitionID *string `json:"alertDefinitionId,omitempty" azure:"ro"`

	// READ-ONLY; The alert scope.
	Scope *string `json:"scope,omitempty" azure:"ro"`
}

// GetAlertConfigurationProperties implements the AlertConfigurationPropertiesClassification interface for type TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties.
func (t *TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties) GetAlertConfigurationProperties() *AlertConfigurationProperties {
	return &AlertConfigurationProperties{
		AlertDefinitionID:      t.AlertDefinitionID,
		Scope:                  t.Scope,
		IsEnabled:              t.IsEnabled,
		AlertConfigurationType: t.AlertConfigurationType,
	}
}

// TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties - Too many permanent owners assigned to resource alert
// incident properties.
type TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties struct {
	// REQUIRED; The alert incident type.
	AlertIncidentType *string `json:"alertIncidentType,omitempty"`

	// READ-ONLY; The assignee name.
	AssigneeName *string `json:"assigneeName,omitempty" azure:"ro"`

	// READ-ONLY; The assignee type.
	AssigneeType *string `json:"assigneeType,omitempty" azure:"ro"`
}

// GetAlertIncidentProperties implements the AlertIncidentPropertiesClassification interface for type TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties.
func (t *TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties) GetAlertIncidentProperties() *AlertIncidentProperties {
	return &AlertIncidentProperties{
		AlertIncidentType: t.AlertIncidentType,
	}
}
