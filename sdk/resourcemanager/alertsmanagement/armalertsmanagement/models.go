//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armalertsmanagement

import "time"

// ActionClassification provides polymorphic access to related types.
// Call the interface's GetAction() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *Action, *AddActionGroups, *RemoveAllActionGroups
type ActionClassification interface {
	// GetAction returns the Action content of the underlying type.
	GetAction() *Action
}

// Action to be applied.
type Action struct {
	// REQUIRED; Action that should be applied.
	ActionType *ActionType `json:"actionType,omitempty"`
}

// GetAction implements the ActionClassification interface for type Action.
func (a *Action) GetAction() *Action { return a }

// ActionStatus - Action status
type ActionStatus struct {
	// Value indicating whether alert is suppressed.
	IsSuppressed *bool `json:"isSuppressed,omitempty"`
}

// AddActionGroups - Add action groups to alert processing rule.
type AddActionGroups struct {
	// REQUIRED; List of action group Ids to add to alert processing rule.
	ActionGroupIDs []*string `json:"actionGroupIds,omitempty"`

	// REQUIRED; Action that should be applied.
	ActionType *ActionType `json:"actionType,omitempty"`
}

// GetAction implements the ActionClassification interface for type AddActionGroups.
func (a *AddActionGroups) GetAction() *Action {
	return &Action{
		ActionType: a.ActionType,
	}
}

// Alert - An alert created in alert management service.
type Alert struct {
	// Alert property bag
	Properties *AlertProperties `json:"properties,omitempty"`

	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AlertModification - Alert Modification details
type AlertModification struct {
	// Properties of the alert modification item.
	Properties *AlertModificationProperties `json:"properties,omitempty"`

	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AlertModificationItem - Alert modification item.
type AlertModificationItem struct {
	// Modification comments
	Comments *string `json:"comments,omitempty"`

	// Description of the modification
	Description *string `json:"description,omitempty"`

	// Reason for the modification
	ModificationEvent *AlertModificationEvent `json:"modificationEvent,omitempty"`

	// Modified date and time
	ModifiedAt *string `json:"modifiedAt,omitempty"`

	// Modified user details (Principal client name)
	ModifiedBy *string `json:"modifiedBy,omitempty"`

	// New value
	NewValue *string `json:"newValue,omitempty"`

	// Old value
	OldValue *string `json:"oldValue,omitempty"`
}

// AlertModificationProperties - Properties of the alert modification item.
type AlertModificationProperties struct {
	// Modification details
	Modifications []*AlertModificationItem `json:"modifications,omitempty"`

	// READ-ONLY; Unique Id of the alert for which the history is being retrieved
	AlertID *string `json:"alertId,omitempty" azure:"ro"`
}

// AlertProcessingRule - Alert processing rule object containing target scopes, conditions and scheduling logic.
type AlertProcessingRule struct {
	// REQUIRED; Resource location
	Location *string `json:"location,omitempty"`

	// Alert processing rule properties.
	Properties *AlertProcessingRuleProperties `json:"properties,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Alert processing rule system data.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AlertProcessingRuleProperties - Alert processing rule properties defining scopes, conditions and scheduling logic for alert
// processing rule.
type AlertProcessingRuleProperties struct {
	// REQUIRED; Actions to be applied.
	Actions []ActionClassification `json:"actions,omitempty"`

	// REQUIRED; Scopes on which alert processing rule will apply.
	Scopes []*string `json:"scopes,omitempty"`

	// Conditions on which alerts will be filtered.
	Conditions []*Condition `json:"conditions,omitempty"`

	// Description of alert processing rule.
	Description *string `json:"description,omitempty"`

	// Indicates if the given alert processing rule is enabled or disabled.
	Enabled *bool `json:"enabled,omitempty"`

	// Scheduling for alert processing rule.
	Schedule *Schedule `json:"schedule,omitempty"`
}

// AlertProcessingRulesClientCreateOrUpdateOptions contains the optional parameters for the AlertProcessingRulesClient.CreateOrUpdate
// method.
type AlertProcessingRulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AlertProcessingRulesClientDeleteOptions contains the optional parameters for the AlertProcessingRulesClient.Delete method.
type AlertProcessingRulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// AlertProcessingRulesClientGetByNameOptions contains the optional parameters for the AlertProcessingRulesClient.GetByName
// method.
type AlertProcessingRulesClientGetByNameOptions struct {
	// placeholder for future optional parameters
}

// AlertProcessingRulesClientListByResourceGroupOptions contains the optional parameters for the AlertProcessingRulesClient.NewListByResourceGroupPager
// method.
type AlertProcessingRulesClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// AlertProcessingRulesClientListBySubscriptionOptions contains the optional parameters for the AlertProcessingRulesClient.NewListBySubscriptionPager
// method.
type AlertProcessingRulesClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// AlertProcessingRulesClientUpdateOptions contains the optional parameters for the AlertProcessingRulesClient.Update method.
type AlertProcessingRulesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// AlertProcessingRulesList - List of alert processing rules.
type AlertProcessingRulesList struct {
	// URL to fetch the next set of alert processing rules.
	NextLink *string `json:"nextLink,omitempty"`

	// List of alert processing rules.
	Value []*AlertProcessingRule `json:"value,omitempty"`
}

// AlertProperties - Alert property bag
type AlertProperties struct {
	// This object contains consistent fields across different monitor services.
	Essentials *Essentials `json:"essentials,omitempty"`

	// READ-ONLY; Information specific to the monitor service that gives more contextual details about the alert.
	Context any `json:"context,omitempty" azure:"ro"`

	// READ-ONLY; Config which would be used for displaying the data in portal.
	EgressConfig any `json:"egressConfig,omitempty" azure:"ro"`
}

// AlertRuleRecommendationProperties - Describes the format of Alert Rule Recommendations response.
type AlertRuleRecommendationProperties struct {
	// REQUIRED; The recommendation alert rule type.
	AlertRuleType *string `json:"alertRuleType,omitempty"`

	// REQUIRED; A dictionary that provides the display information for an alert rule recommendation.
	DisplayInformation map[string]*string `json:"displayInformation,omitempty"`

	// REQUIRED; A complete ARM template to deploy the alert rules.
	RuleArmTemplate *RuleArmTemplate `json:"ruleArmTemplate,omitempty"`
}

// AlertRuleRecommendationResource - A single alert rule recommendation resource.
type AlertRuleRecommendationResource struct {
	// REQUIRED; recommendation properties.
	Properties *AlertRuleRecommendationProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AlertRuleRecommendationsClientListByResourceOptions contains the optional parameters for the AlertRuleRecommendationsClient.NewListByResourcePager
// method.
type AlertRuleRecommendationsClientListByResourceOptions struct {
	// placeholder for future optional parameters
}

// AlertRuleRecommendationsClientListByTargetTypeOptions contains the optional parameters for the AlertRuleRecommendationsClient.NewListByTargetTypePager
// method.
type AlertRuleRecommendationsClientListByTargetTypeOptions struct {
	// placeholder for future optional parameters
}

// AlertRuleRecommendationsListResponse - List of alert rule recommendations.
type AlertRuleRecommendationsListResponse struct {
	// REQUIRED; the values for the alert rule recommendations.
	Value []*AlertRuleRecommendationResource `json:"value,omitempty"`

	// URL to fetch the next set of recommendations.
	NextLink *string `json:"nextLink,omitempty"`
}

// AlertsClientChangeStateOptions contains the optional parameters for the AlertsClient.ChangeState method.
type AlertsClientChangeStateOptions struct {
	// reason of change alert state
	Comment *Comments
}

// AlertsClientGetAllOptions contains the optional parameters for the AlertsClient.NewGetAllPager method.
type AlertsClientGetAllOptions struct {
	// Filter by specific alert rule. Default value is to select all.
	AlertRule *string
	// Filter by state of the alert instance. Default value is to select all.
	AlertState *AlertState
	// Filter by custom time range in the format / where time is in (ISO-8601 format)'. Permissible values is within 30 days from
	// query time. Either timeRange or customTimeRange could be used but not both.
	// Default is none.
	CustomTimeRange *string
	// Include context which has contextual data specific to the monitor service. Default value is false'
	IncludeContext *bool
	// Include egress config which would be used for displaying the content in portal. Default value is 'false'.
	IncludeEgressConfig *bool
	// Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all.
	MonitorCondition *MonitorCondition
	// Filter by monitor service which generates the alert instance. Default value is select all.
	MonitorService *MonitorService
	// Determines number of alerts returned per page in response. Permissible value is between 1 to 250. When the "includeContent"
	// filter is selected, maximum value allowed is 25. Default value is 25.
	PageCount *int64
	// This filter allows to selection of the fields(comma separated) which would be part of the essential section. This would
	// allow to project only the required fields rather than getting entire content.
	// Default is to fetch all the fields in the essentials section.
	Select *string
	// Filter by severity. Default value is select all.
	Severity *Severity
	// Filter the alerts list by the Smart Group Id. Default value is none.
	SmartGroupID *string
	// Sort the query results by input field, Default value is 'lastModifiedDateTime'.
	SortBy *AlertsSortByFields
	// Sort the query results order in either ascending or descending. Default value is 'desc' for time fields and 'asc' for others.
	SortOrder *SortOrder
	// Filter by target resource( which is full ARM ID) Default value is select all.
	TargetResource *string
	// Filter by target resource group name. Default value is select all.
	TargetResourceGroup *string
	// Filter by target resource type. Default value is select all.
	TargetResourceType *string
	// Filter by time range by below listed values. Default value is 1 day.
	TimeRange *TimeRange
}

// AlertsClientGetByIDOptions contains the optional parameters for the AlertsClient.GetByID method.
type AlertsClientGetByIDOptions struct {
	// placeholder for future optional parameters
}

// AlertsClientGetHistoryOptions contains the optional parameters for the AlertsClient.GetHistory method.
type AlertsClientGetHistoryOptions struct {
	// placeholder for future optional parameters
}

// AlertsClientGetSummaryOptions contains the optional parameters for the AlertsClient.GetSummary method.
type AlertsClientGetSummaryOptions struct {
	// Filter by specific alert rule. Default value is to select all.
	AlertRule *string
	// Filter by state of the alert instance. Default value is to select all.
	AlertState *AlertState
	// Filter by custom time range in the format / where time is in (ISO-8601 format)'. Permissible values is within 30 days from
	// query time. Either timeRange or customTimeRange could be used but not both.
	// Default is none.
	CustomTimeRange *string
	// Include count of the SmartGroups as part of the summary. Default value is 'false'.
	IncludeSmartGroupsCount *bool
	// Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all.
	MonitorCondition *MonitorCondition
	// Filter by monitor service which generates the alert instance. Default value is select all.
	MonitorService *MonitorService
	// Filter by severity. Default value is select all.
	Severity *Severity
	// Filter by target resource( which is full ARM ID) Default value is select all.
	TargetResource *string
	// Filter by target resource group name. Default value is select all.
	TargetResourceGroup *string
	// Filter by target resource type. Default value is select all.
	TargetResourceType *string
	// Filter by time range by below listed values. Default value is 1 day.
	TimeRange *TimeRange
}

// AlertsClientMetaDataOptions contains the optional parameters for the AlertsClient.MetaData method.
type AlertsClientMetaDataOptions struct {
	// placeholder for future optional parameters
}

// AlertsList - List the alerts.
type AlertsList struct {
	// URL to fetch the next set of alerts.
	NextLink *string `json:"nextLink,omitempty"`

	// List of alerts
	Value []*Alert `json:"value,omitempty"`
}

// AlertsMetaData - alert meta data information.
type AlertsMetaData struct {
	// alert meta data property bag
	Properties AlertsMetaDataPropertiesClassification `json:"properties,omitempty"`
}

// AlertsMetaDataPropertiesClassification provides polymorphic access to related types.
// Call the interface's GetAlertsMetaDataProperties() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *AlertsMetaDataProperties, *MonitorServiceList
type AlertsMetaDataPropertiesClassification interface {
	// GetAlertsMetaDataProperties returns the AlertsMetaDataProperties content of the underlying type.
	GetAlertsMetaDataProperties() *AlertsMetaDataProperties
}

// AlertsMetaDataProperties - alert meta data property bag
type AlertsMetaDataProperties struct {
	// REQUIRED; Identification of the information to be retrieved by API call
	MetadataIdentifier *MetadataIdentifier `json:"metadataIdentifier,omitempty"`
}

// GetAlertsMetaDataProperties implements the AlertsMetaDataPropertiesClassification interface for type AlertsMetaDataProperties.
func (a *AlertsMetaDataProperties) GetAlertsMetaDataProperties() *AlertsMetaDataProperties { return a }

// AlertsSummary - Summary of alerts based on the input filters and 'groupby' parameters.
type AlertsSummary struct {
	// Group the result set.
	Properties *AlertsSummaryGroup `json:"properties,omitempty"`

	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AlertsSummaryGroup - Group the result set.
type AlertsSummaryGroup struct {
	// Name of the field aggregated
	Groupedby *string `json:"groupedby,omitempty"`

	// Total count of the smart groups.
	SmartGroupsCount *int64 `json:"smartGroupsCount,omitempty"`

	// Total count of the result set.
	Total *int64 `json:"total,omitempty"`

	// List of the items
	Values []*AlertsSummaryGroupItem `json:"values,omitempty"`
}

// AlertsSummaryGroupItem - Alerts summary group item
type AlertsSummaryGroupItem struct {
	// Count of the aggregated field
	Count *int64 `json:"count,omitempty"`

	// Name of the field aggregated
	Groupedby *string `json:"groupedby,omitempty"`

	// Value of the aggregated field
	Name *string `json:"name,omitempty"`

	// List of the items
	Values []*AlertsSummaryGroupItem `json:"values,omitempty"`
}

// Comments - Change alert state reason
type Comments struct {
	Comments *string `json:"comments,omitempty"`
}

// Condition to trigger an alert processing rule.
type Condition struct {
	// Field for a given condition.
	Field *Field `json:"field,omitempty"`

	// Operator for a given condition.
	Operator *Operator `json:"operator,omitempty"`

	// List of values to match for a given condition.
	Values []*string `json:"values,omitempty"`
}

// DailyRecurrence - Daily recurrence object.
type DailyRecurrence struct {
	// REQUIRED; Specifies when the recurrence should be applied.
	RecurrenceType *RecurrenceType `json:"recurrenceType,omitempty"`

	// End time for recurrence.
	EndTime *string `json:"endTime,omitempty"`

	// Start time for recurrence.
	StartTime *string `json:"startTime,omitempty"`
}

// GetRecurrence implements the RecurrenceClassification interface for type DailyRecurrence.
func (d *DailyRecurrence) GetRecurrence() *Recurrence {
	return &Recurrence{
		RecurrenceType: d.RecurrenceType,
		StartTime:      d.StartTime,
		EndTime:        d.EndTime,
	}
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any `json:"info,omitempty" azure:"ro"`

	// READ-ONLY; The additional info type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo `json:"additionalInfo,omitempty" azure:"ro"`

	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The error details.
	Details []*ErrorDetail `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; The error target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail `json:"error,omitempty"`
}

// ErrorResponseAutoGenerated - An error response from the service.
type ErrorResponseAutoGenerated struct {
	// Details of error response.
	Error *ErrorResponseBody `json:"error,omitempty"`
}

// ErrorResponseAutoGenerated2 - An error response from the service.
type ErrorResponseAutoGenerated2 struct {
	// Details of error response.
	Error *ErrorResponseBodyAutoGenerated `json:"error,omitempty"`
}

// ErrorResponseAutoGenerated3 - An error response from the service.
type ErrorResponseAutoGenerated3 struct {
	// Details of error response.
	Error *ErrorResponseBodyAutoGenerated2 `json:"error,omitempty"`
}

// ErrorResponseBody - Details of error response.
type ErrorResponseBody struct {
	// Error code, intended to be consumed programmatically.
	Code *string `json:"code,omitempty"`

	// A list of additional details about the error.
	Details []*ErrorResponseBody `json:"details,omitempty"`

	// Description of the error, intended for display in user interface.
	Message *string `json:"message,omitempty"`

	// Target of the particular error, for example name of the property.
	Target *string `json:"target,omitempty"`
}

// ErrorResponseBodyAutoGenerated - Details of error response.
type ErrorResponseBodyAutoGenerated struct {
	// Error code, intended to be consumed programmatically.
	Code *string `json:"code,omitempty"`

	// A list of additional details about the error.
	Details []*ErrorResponseBodyAutoGenerated `json:"details,omitempty"`

	// Description of the error, intended for display in user interface.
	Message *string `json:"message,omitempty"`

	// Target of the particular error, for example name of the property.
	Target *string `json:"target,omitempty"`
}

// ErrorResponseBodyAutoGenerated2 - Details of error response.
type ErrorResponseBodyAutoGenerated2 struct {
	// Error code, intended to be consumed programmatically.
	Code *string `json:"code,omitempty"`

	// A list of additional details about the error.
	Details []*ErrorResponseBodyAutoGenerated2 `json:"details,omitempty"`

	// Description of the error, intended for display in user interface.
	Message *string `json:"message,omitempty"`

	// Target of the particular error, for example name of the property.
	Target *string `json:"target,omitempty"`
}

// Essentials - This object contains consistent fields across different monitor services.
type Essentials struct {
	// Action status
	ActionStatus *ActionStatus `json:"actionStatus,omitempty"`

	// Alert description.
	Description *string `json:"description,omitempty"`

	// Target ARM resource, on which alert got created.
	TargetResource *string `json:"targetResource,omitempty"`

	// Resource group of target ARM resource, on which alert got created.
	TargetResourceGroup *string `json:"targetResourceGroup,omitempty"`

	// Name of the target ARM resource name, on which alert got created.
	TargetResourceName *string `json:"targetResourceName,omitempty"`

	// Resource type of target ARM resource, on which alert got created.
	TargetResourceType *string `json:"targetResourceType,omitempty"`

	// READ-ONLY; Rule(monitor) which fired alert instance. Depending on the monitor service, this would be ARM id or name of
	// the rule.
	AlertRule *string `json:"alertRule,omitempty" azure:"ro"`

	// READ-ONLY; Alert object state, which can be modified by the user.
	AlertState *AlertState `json:"alertState,omitempty" azure:"ro"`

	// READ-ONLY; Last modification time(ISO-8601 format) of alert instance.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty" azure:"ro"`

	// READ-ONLY; User who last modified the alert, in case of monitor service updates user would be 'system', otherwise name
	// of the user.
	LastModifiedUserName *string `json:"lastModifiedUserName,omitempty" azure:"ro"`

	// READ-ONLY; Condition of the rule at the monitor service. It represents whether the underlying conditions have crossed the
	// defined alert rule thresholds.
	MonitorCondition *MonitorCondition `json:"monitorCondition,omitempty" azure:"ro"`

	// READ-ONLY; Resolved time(ISO-8601 format) of alert instance. This will be updated when monitor service resolves the alert
	// instance because the rule condition is no longer met.
	MonitorConditionResolvedDateTime *time.Time `json:"monitorConditionResolvedDateTime,omitempty" azure:"ro"`

	// READ-ONLY; Monitor service on which the rule(monitor) is set.
	MonitorService *MonitorService `json:"monitorService,omitempty" azure:"ro"`

	// READ-ONLY; Severity of alert Sev0 being highest and Sev4 being lowest.
	Severity *Severity `json:"severity,omitempty" azure:"ro"`

	// READ-ONLY; The type of signal the alert is based on, which could be metrics, logs or activity logs.
	SignalType *SignalType `json:"signalType,omitempty" azure:"ro"`

	// READ-ONLY; Unique Id of the smart group
	SmartGroupID *string `json:"smartGroupId,omitempty" azure:"ro"`

	// READ-ONLY; Verbose reason describing the reason why this alert instance is added to a smart group
	SmartGroupingReason *string `json:"smartGroupingReason,omitempty" azure:"ro"`

	// READ-ONLY; Unique Id created by monitor service for each alert instance. This could be used to track the issue at the monitor
	// service, in case of Nagios, Zabbix, SCOM etc.
	SourceCreatedID *string `json:"sourceCreatedId,omitempty" azure:"ro"`

	// READ-ONLY; Creation time(ISO-8601 format) of alert instance.
	StartDateTime *time.Time `json:"startDateTime,omitempty" azure:"ro"`
}

// ManagedResource - An azure managed resource object.
type ManagedResource struct {
	// REQUIRED; Resource location
	Location *string `json:"location,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MonitorServiceDetails - Details of a monitor service
type MonitorServiceDetails struct {
	// Monitor service display name
	DisplayName *string `json:"displayName,omitempty"`

	// Monitor service name
	Name *string `json:"name,omitempty"`
}

// MonitorServiceList - Monitor service details
type MonitorServiceList struct {
	// REQUIRED; Array of operations
	Data []*MonitorServiceDetails `json:"data,omitempty"`

	// REQUIRED; Identification of the information to be retrieved by API call
	MetadataIdentifier *MetadataIdentifier `json:"metadataIdentifier,omitempty"`
}

// GetAlertsMetaDataProperties implements the AlertsMetaDataPropertiesClassification interface for type MonitorServiceList.
func (m *MonitorServiceList) GetAlertsMetaDataProperties() *AlertsMetaDataProperties {
	return &AlertsMetaDataProperties{
		MetadataIdentifier: m.MetadataIdentifier,
	}
}

// MonthlyRecurrence - Monthly recurrence object.
type MonthlyRecurrence struct {
	// REQUIRED; Specifies the values for monthly recurrence pattern.
	DaysOfMonth []*int32 `json:"daysOfMonth,omitempty"`

	// REQUIRED; Specifies when the recurrence should be applied.
	RecurrenceType *RecurrenceType `json:"recurrenceType,omitempty"`

	// End time for recurrence.
	EndTime *string `json:"endTime,omitempty"`

	// Start time for recurrence.
	StartTime *string `json:"startTime,omitempty"`
}

// GetRecurrence implements the RecurrenceClassification interface for type MonthlyRecurrence.
func (m *MonthlyRecurrence) GetRecurrence() *Recurrence {
	return &Recurrence{
		RecurrenceType: m.RecurrenceType,
		StartTime:      m.StartTime,
		EndTime:        m.EndTime,
	}
}

// Operation provided by provider
type Operation struct {
	// Properties of the operation
	Display *OperationDisplay `json:"display,omitempty"`

	// Name of the operation
	Name *string `json:"name,omitempty"`

	// Origin of the operation
	Origin *string `json:"origin,omitempty"`
}

// OperationDisplay - Properties of the operation
type OperationDisplay struct {
	// Description of the operation
	Description *string `json:"description,omitempty"`

	// Operation name
	Operation *string `json:"operation,omitempty"`

	// Provider name
	Provider *string `json:"provider,omitempty"`

	// Resource name
	Resource *string `json:"resource,omitempty"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// OperationsList - Lists the operations available in the AlertsManagement RP.
type OperationsList struct {
	// REQUIRED; Array of operations
	Value []*Operation `json:"value,omitempty"`

	// URL to fetch the next set of alerts.
	NextLink *string `json:"nextLink,omitempty"`
}

// PatchObject - Data contract for patch.
type PatchObject struct {
	// Properties supported by patch operation.
	Properties *PatchProperties `json:"properties,omitempty"`

	// Tags to be updated.
	Tags map[string]*string `json:"tags,omitempty"`
}

// PatchProperties - Alert processing rule properties supported by patch.
type PatchProperties struct {
	// Indicates if the given alert processing rule is enabled or disabled.
	Enabled *bool `json:"enabled,omitempty"`
}

// PrometheusRule - An Azure Prometheus alerting or recording rule.
type PrometheusRule struct {
	// REQUIRED; The PromQL expression to evaluate. https://prometheus.io/docs/prometheus/latest/querying/basics/. Evaluated periodically
	// as given by 'interval', and the result recorded as a new set of time series
	// with the metric name as given by 'record'.
	Expression *string `json:"expression,omitempty"`

	// Actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
	Actions []*PrometheusRuleGroupAction `json:"actions,omitempty"`

	// Alert rule name.
	Alert *string `json:"alert,omitempty"`

	// The annotations clause specifies a set of informational labels that can be used to store longer additional information
	// such as alert descriptions or runbook links. The annotation values can be
	// templated.
	Annotations map[string]*string `json:"annotations,omitempty"`

	// Enable/disable rule.
	Enabled *bool `json:"enabled,omitempty"`

	// The amount of time alert must be active before firing.
	For *string `json:"for,omitempty"`

	// Labels to add or overwrite before storing the result.
	Labels map[string]*string `json:"labels,omitempty"`

	// Recorded metrics name.
	Record *string `json:"record,omitempty"`

	// Defines the configuration for resolving fired alerts. Only relevant for alerts.
	ResolveConfiguration *PrometheusRuleResolveConfiguration `json:"resolveConfiguration,omitempty"`

	// The severity of the alerts fired by the rule. Must be between 0 and 4.
	Severity *int32 `json:"severity,omitempty"`
}

// PrometheusRuleGroupAction - An alert action. Only relevant for alerts.
type PrometheusRuleGroupAction struct {
	// The resource id of the action group to use.
	ActionGroupID *string `json:"actionGroupId,omitempty"`

	// The properties of an action group object.
	ActionProperties map[string]*string `json:"actionProperties,omitempty"`
}

// PrometheusRuleGroupProperties - An Azure Prometheus rule group.
type PrometheusRuleGroupProperties struct {
	// REQUIRED; Defines the rules in the Prometheus rule group.
	Rules []*PrometheusRule `json:"rules,omitempty"`

	// REQUIRED; Target Azure Monitor workspaces resource ids. This api-version is currently limited to creating with one scope.
	// This may change in future.
	Scopes []*string `json:"scopes,omitempty"`

	// Apply rule to data from a specific cluster.
	ClusterName *string `json:"clusterName,omitempty"`

	// Rule group description.
	Description *string `json:"description,omitempty"`

	// Enable/disable rule group.
	Enabled *bool `json:"enabled,omitempty"`

	// The interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be between 1 and
	// 15 minutes
	Interval *string `json:"interval,omitempty"`
}

// PrometheusRuleGroupResource - The Prometheus rule group resource.
type PrometheusRuleGroupResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The Prometheus rule group properties of the resource.
	Properties *PrometheusRuleGroupProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PrometheusRuleGroupResourceCollection - Represents a collection of alert rule resources.
type PrometheusRuleGroupResourceCollection struct {
	// the values for the alert rule resources.
	Value []*PrometheusRuleGroupResource `json:"value,omitempty"`
}

// PrometheusRuleGroupResourcePatchParameters - The Prometheus rule group resource for patch operations.
type PrometheusRuleGroupResourcePatchParameters struct {
	Properties *PrometheusRuleGroupResourcePatchParametersProperties `json:"properties,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`
}

type PrometheusRuleGroupResourcePatchParametersProperties struct {
	// the flag that indicates whether the Prometheus rule group is enabled.
	Enabled *bool `json:"enabled,omitempty"`
}

// PrometheusRuleGroupsClientCreateOrUpdateOptions contains the optional parameters for the PrometheusRuleGroupsClient.CreateOrUpdate
// method.
type PrometheusRuleGroupsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PrometheusRuleGroupsClientDeleteOptions contains the optional parameters for the PrometheusRuleGroupsClient.Delete method.
type PrometheusRuleGroupsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PrometheusRuleGroupsClientGetOptions contains the optional parameters for the PrometheusRuleGroupsClient.Get method.
type PrometheusRuleGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrometheusRuleGroupsClientListByResourceGroupOptions contains the optional parameters for the PrometheusRuleGroupsClient.NewListByResourceGroupPager
// method.
type PrometheusRuleGroupsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// PrometheusRuleGroupsClientListBySubscriptionOptions contains the optional parameters for the PrometheusRuleGroupsClient.NewListBySubscriptionPager
// method.
type PrometheusRuleGroupsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// PrometheusRuleGroupsClientUpdateOptions contains the optional parameters for the PrometheusRuleGroupsClient.Update method.
type PrometheusRuleGroupsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// PrometheusRuleResolveConfiguration - Specifies the Prometheus alert rule configuration.
type PrometheusRuleResolveConfiguration struct {
	// Enable alert auto-resolution.
	AutoResolved *bool `json:"autoResolved,omitempty"`

	// Alert auto-resolution timeout.
	TimeToResolve *string `json:"timeToResolve,omitempty"`
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a
// location
type ProxyResource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RecurrenceClassification provides polymorphic access to related types.
// Call the interface's GetRecurrence() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *DailyRecurrence, *MonthlyRecurrence, *Recurrence, *WeeklyRecurrence
type RecurrenceClassification interface {
	// GetRecurrence returns the Recurrence content of the underlying type.
	GetRecurrence() *Recurrence
}

// Recurrence object.
type Recurrence struct {
	// REQUIRED; Specifies when the recurrence should be applied.
	RecurrenceType *RecurrenceType `json:"recurrenceType,omitempty"`

	// End time for recurrence.
	EndTime *string `json:"endTime,omitempty"`

	// Start time for recurrence.
	StartTime *string `json:"startTime,omitempty"`
}

// GetRecurrence implements the RecurrenceClassification interface for type Recurrence.
func (r *Recurrence) GetRecurrence() *Recurrence { return r }

// RemoveAllActionGroups - Indicates if all action groups should be removed.
type RemoveAllActionGroups struct {
	// REQUIRED; Action that should be applied.
	ActionType *ActionType `json:"actionType,omitempty"`
}

// GetAction implements the ActionClassification interface for type RemoveAllActionGroups.
func (r *RemoveAllActionGroups) GetAction() *Action {
	return &Action{
		ActionType: r.ActionType,
	}
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ResourceAutoGenerated - An azure resource object
type ResourceAutoGenerated struct {
	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RuleArmTemplate - A complete ARM template to deploy the alert rules.
type RuleArmTemplate struct {
	// REQUIRED; A 4 number format for the version number of this template file. For example, 1.0.0.0
	ContentVersion *string `json:"contentVersion,omitempty"`

	// REQUIRED; Input parameter definitions
	Parameters any `json:"parameters,omitempty"`

	// REQUIRED; Alert rule resource definitions
	Resources []any `json:"resources,omitempty"`

	// REQUIRED; JSON schema reference
	Schema *string `json:"$schema,omitempty"`

	// REQUIRED; Variable definitions
	Variables any `json:"variables,omitempty"`
}

// Schedule - Scheduling configuration for a given alert processing rule.
type Schedule struct {
	// Scheduling effective from time. Date-Time in ISO-8601 format without timezone suffix.
	EffectiveFrom *string `json:"effectiveFrom,omitempty"`

	// Scheduling effective until time. Date-Time in ISO-8601 format without timezone suffix.
	EffectiveUntil *string `json:"effectiveUntil,omitempty"`

	// List of recurrences.
	Recurrences []RecurrenceClassification `json:"recurrences,omitempty"`

	// Scheduling time zone.
	TimeZone *string `json:"timeZone,omitempty"`
}

// SmartGroup - Set of related alerts grouped together smartly by AMS.
type SmartGroup struct {
	// Properties of smart group.
	Properties *SmartGroupProperties `json:"properties,omitempty"`

	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SmartGroupAggregatedProperty - Aggregated property of each type
type SmartGroupAggregatedProperty struct {
	// Total number of items of type.
	Count *int64 `json:"count,omitempty"`

	// Name of the type.
	Name *string `json:"name,omitempty"`
}

// SmartGroupModification - Alert Modification details
type SmartGroupModification struct {
	// Properties of the smartGroup modification item.
	Properties *SmartGroupModificationProperties `json:"properties,omitempty"`

	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SmartGroupModificationItem - smartGroup modification item.
type SmartGroupModificationItem struct {
	// Modification comments
	Comments *string `json:"comments,omitempty"`

	// Description of the modification
	Description *string `json:"description,omitempty"`

	// Reason for the modification
	ModificationEvent *SmartGroupModificationEvent `json:"modificationEvent,omitempty"`

	// Modified date and time
	ModifiedAt *string `json:"modifiedAt,omitempty"`

	// Modified user details (Principal client name)
	ModifiedBy *string `json:"modifiedBy,omitempty"`

	// New value
	NewValue *string `json:"newValue,omitempty"`

	// Old value
	OldValue *string `json:"oldValue,omitempty"`
}

// SmartGroupModificationProperties - Properties of the smartGroup modification item.
type SmartGroupModificationProperties struct {
	// Modification details
	Modifications []*SmartGroupModificationItem `json:"modifications,omitempty"`

	// URL to fetch the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// READ-ONLY; Unique Id of the smartGroup for which the history is being retrieved
	SmartGroupID *string `json:"smartGroupId,omitempty" azure:"ro"`
}

// SmartGroupProperties - Properties of smart group.
type SmartGroupProperties struct {
	// Summary of alertSeverities in the smart group
	AlertSeverities []*SmartGroupAggregatedProperty `json:"alertSeverities,omitempty"`

	// Summary of alertStates in the smart group
	AlertStates []*SmartGroupAggregatedProperty `json:"alertStates,omitempty"`

	// Total number of alerts in smart group
	AlertsCount *int64 `json:"alertsCount,omitempty"`

	// Summary of monitorConditions in the smart group
	MonitorConditions []*SmartGroupAggregatedProperty `json:"monitorConditions,omitempty"`

	// Summary of monitorServices in the smart group
	MonitorServices []*SmartGroupAggregatedProperty `json:"monitorServices,omitempty"`

	// The URI to fetch the next page of alerts. Call ListNext() with this URI to fetch the next page alerts.
	NextLink *string `json:"nextLink,omitempty"`

	// Summary of target resource groups in the smart group
	ResourceGroups []*SmartGroupAggregatedProperty `json:"resourceGroups,omitempty"`

	// Summary of target resource types in the smart group
	ResourceTypes []*SmartGroupAggregatedProperty `json:"resourceTypes,omitempty"`

	// Summary of target resources in the smart group
	Resources []*SmartGroupAggregatedProperty `json:"resources,omitempty"`

	// READ-ONLY; Last updated time of smart group. Date-Time in ISO-8601 format.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty" azure:"ro"`

	// READ-ONLY; Last modified by user name.
	LastModifiedUserName *string `json:"lastModifiedUserName,omitempty" azure:"ro"`

	// READ-ONLY; Severity of smart group is the highest(Sev0 >… > Sev4) severity of all the alerts in the group.
	Severity *Severity `json:"severity,omitempty" azure:"ro"`

	// READ-ONLY; Smart group state
	SmartGroupState *State `json:"smartGroupState,omitempty" azure:"ro"`

	// READ-ONLY; Creation time of smart group. Date-Time in ISO-8601 format.
	StartDateTime *time.Time `json:"startDateTime,omitempty" azure:"ro"`
}

// SmartGroupsClientChangeStateOptions contains the optional parameters for the SmartGroupsClient.ChangeState method.
type SmartGroupsClientChangeStateOptions struct {
	// placeholder for future optional parameters
}

// SmartGroupsClientGetAllOptions contains the optional parameters for the SmartGroupsClient.NewGetAllPager method.
type SmartGroupsClientGetAllOptions struct {
	// Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all.
	MonitorCondition *MonitorCondition
	// Filter by monitor service which generates the alert instance. Default value is select all.
	MonitorService *MonitorService
	// Determines number of alerts returned per page in response. Permissible value is between 1 to 250. When the "includeContent"
	// filter is selected, maximum value allowed is 25. Default value is 25.
	PageCount *int64
	// Filter by severity. Default value is select all.
	Severity *Severity
	// Filter by state of the smart group. Default value is to select all.
	SmartGroupState *AlertState
	// Sort the query results by input field. Default value is sort by 'lastModifiedDateTime'.
	SortBy *SmartGroupsSortByFields
	// Sort the query results order in either ascending or descending. Default value is 'desc' for time fields and 'asc' for others.
	SortOrder *SortOrder
	// Filter by target resource( which is full ARM ID) Default value is select all.
	TargetResource *string
	// Filter by target resource group name. Default value is select all.
	TargetResourceGroup *string
	// Filter by target resource type. Default value is select all.
	TargetResourceType *string
	// Filter by time range by below listed values. Default value is 1 day.
	TimeRange *TimeRange
}

// SmartGroupsClientGetByIDOptions contains the optional parameters for the SmartGroupsClient.GetByID method.
type SmartGroupsClientGetByIDOptions struct {
	// placeholder for future optional parameters
}

// SmartGroupsClientGetHistoryOptions contains the optional parameters for the SmartGroupsClient.GetHistory method.
type SmartGroupsClientGetHistoryOptions struct {
	// placeholder for future optional parameters
}

// SmartGroupsList - List the alerts.
type SmartGroupsList struct {
	// URL to fetch the next set of alerts.
	NextLink *string `json:"nextLink,omitempty"`

	// List of alerts
	Value []*SmartGroup `json:"value,omitempty"`
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// WeeklyRecurrence - Weekly recurrence object.
type WeeklyRecurrence struct {
	// REQUIRED; Specifies the values for weekly recurrence pattern.
	DaysOfWeek []*DaysOfWeek `json:"daysOfWeek,omitempty"`

	// REQUIRED; Specifies when the recurrence should be applied.
	RecurrenceType *RecurrenceType `json:"recurrenceType,omitempty"`

	// End time for recurrence.
	EndTime *string `json:"endTime,omitempty"`

	// Start time for recurrence.
	StartTime *string `json:"startTime,omitempty"`
}

// GetRecurrence implements the RecurrenceClassification interface for type WeeklyRecurrence.
func (w *WeeklyRecurrence) GetRecurrence() *Recurrence {
	return &Recurrence{
		RecurrenceType: w.RecurrenceType,
		StartTime:      w.StartTime,
		EndTime:        w.EndTime,
	}
}
