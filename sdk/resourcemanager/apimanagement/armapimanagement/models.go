//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armapimanagement

import "time"

// APIClientCreateOrUpdateOptions contains the optional parameters for the APIClient.CreateOrUpdate method.
type APIClientCreateOrUpdateOptions struct {
	// ETag of the Api Entity. For Create Api Etag should not be specified. For Update Etag should match the existing Entity or
	// it can be * for unconditional update.
	IfMatch *string
}

// APIClientDeleteOptions contains the optional parameters for the APIClient.Delete method.
type APIClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIClientGetEntityTagOptions contains the optional parameters for the APIClient.GetEntityTag method.
type APIClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// APIClientGetOptions contains the optional parameters for the APIClient.Get method.
type APIClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIClientListByServiceOptions contains the optional parameters for the APIClient.ListByService method.
type APIClientListByServiceOptions struct {
	// Include full ApiVersionSet resource in response
	ExpandAPIVersionSet *bool
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// serviceUrl ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// path ge, le, eq, ne, gt, lt substringof, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIClientListByTagsOptions contains the optional parameters for the APIClient.ListByTags method.
type APIClientListByTagsOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// aid ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// apiRevision ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// path ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// serviceUrl ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// isCurrent eq substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIClientUpdateOptions contains the optional parameters for the APIClient.Update method.
type APIClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// APICollection - Paged Api list representation.
type APICollection struct {
	// READ-ONLY; Next page link if any.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Page values.
	Value []*APIContract `json:"value,omitempty" azure:"ro"`
}

// APIContract - API details.
type APIContract struct {
	// Api entity contract properties.
	Properties *APIContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// APIContractProperties - Api Entity Properties
type APIContractProperties struct {
	// REQUIRED; Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance.
	// It is appended to the API endpoint base URL specified during the service instance
	// creation to form a public URL for this API.
	Path *string `json:"path,omitempty"`

	// Describes the Revision of the Api. If no value is provided, default revision 1 is created
	APIRevision *string `json:"apiRevision,omitempty"`

	// Type of API.
	APIType *APIType `json:"type,omitempty"`

	// Indicates the Version identifier of the API if the API is versioned
	APIVersion *string `json:"apiVersion,omitempty"`

	// Api Version Set Contract details.
	APIVersionSet *APIVersionSetContract `json:"apiVersionSet,omitempty"`

	// A resource identifier for the related ApiVersionSet.
	APIVersionSetID *string `json:"apiVersionSetId,omitempty"`

	// Collection of authentication settings included into this API.
	AuthenticationSettings *AuthenticationSettingsContract `json:"authenticationSettings,omitempty"`

	// Description of the API. May include HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// API name.
	DisplayName *string `json:"displayName,omitempty"`

	// Describes on which protocols the operations in this API can be invoked.
	Protocols []*Protocol `json:"protocols,omitempty"`

	// Absolute URL of the backend service implementing this API.
	ServiceURL *string `json:"serviceUrl,omitempty"`

	// Protocols over which API is made available.
	SubscriptionKeyParameterNames *SubscriptionKeyParameterNamesContract `json:"subscriptionKeyParameterNames,omitempty"`

	// READ-ONLY; Indicates if API revision is current api revision.
	IsCurrent *bool `json:"isCurrent,omitempty" azure:"ro"`

	// READ-ONLY; Indicates if API revision is accessible via the gateway.
	IsOnline *bool `json:"isOnline,omitempty" azure:"ro"`
}

// APIContractUpdateProperties - API update contract properties.
type APIContractUpdateProperties struct {
	// Describes the Revision of the Api. If no value is provided, default revision 1 is created
	APIRevision *string `json:"apiRevision,omitempty"`

	// Type of API.
	APIType *APIType `json:"type,omitempty"`

	// Indicates the Version identifier of the API if the API is versioned
	APIVersion *string `json:"apiVersion,omitempty"`

	// A resource identifier for the related ApiVersionSet.
	APIVersionSetID *string `json:"apiVersionSetId,omitempty"`

	// Collection of authentication settings included into this API.
	AuthenticationSettings *AuthenticationSettingsContract `json:"authenticationSettings,omitempty"`

	// Description of the API. May include HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// API name.
	DisplayName *string `json:"displayName,omitempty"`

	// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It
	// is appended to the API endpoint base URL specified during the service instance
	// creation to form a public URL for this API.
	Path *string `json:"path,omitempty"`

	// Describes on which protocols the operations in this API can be invoked.
	Protocols []*Protocol `json:"protocols,omitempty"`

	// Absolute URL of the backend service implementing this API.
	ServiceURL *string `json:"serviceUrl,omitempty"`

	// Protocols over which API is made available.
	SubscriptionKeyParameterNames *SubscriptionKeyParameterNamesContract `json:"subscriptionKeyParameterNames,omitempty"`

	// READ-ONLY; Indicates if API revision is current api revision.
	IsCurrent *bool `json:"isCurrent,omitempty" azure:"ro"`

	// READ-ONLY; Indicates if API revision is accessible via the gateway.
	IsOnline *bool `json:"isOnline,omitempty" azure:"ro"`
}

// APICreateOrUpdateParameter - API Create or Update Parameters.
type APICreateOrUpdateParameter struct {
	// Api entity create of update properties.
	Properties *APICreateOrUpdateProperties `json:"properties,omitempty"`
}

// APICreateOrUpdateProperties - Api Create or Update Properties.
type APICreateOrUpdateProperties struct {
	// REQUIRED; Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance.
	// It is appended to the API endpoint base URL specified during the service instance
	// creation to form a public URL for this API.
	Path *string `json:"path,omitempty"`

	// Describes the Revision of the Api. If no value is provided, default revision 1 is created
	APIRevision *string `json:"apiRevision,omitempty"`

	// Type of API.
	APIType *APIType `json:"type,omitempty"`

	// Indicates the Version identifier of the API if the API is versioned
	APIVersion *string `json:"apiVersion,omitempty"`

	// Api Version Set Contract details.
	APIVersionSet *APIVersionSetContract `json:"apiVersionSet,omitempty"`

	// A resource identifier for the related ApiVersionSet.
	APIVersionSetID *string `json:"apiVersionSetId,omitempty"`

	// Collection of authentication settings included into this API.
	AuthenticationSettings *AuthenticationSettingsContract `json:"authenticationSettings,omitempty"`

	// Format of the Content in which the API is getting imported.
	ContentFormat *ContentFormat `json:"contentFormat,omitempty"`

	// Content value when Importing an API.
	ContentValue *string `json:"contentValue,omitempty"`

	// Description of the API. May include HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// API name.
	DisplayName *string `json:"displayName,omitempty"`

	// Describes on which protocols the operations in this API can be invoked.
	Protocols []*Protocol `json:"protocols,omitempty"`

	// Absolute URL of the backend service implementing this API.
	ServiceURL *string `json:"serviceUrl,omitempty"`

	// Protocols over which API is made available.
	SubscriptionKeyParameterNames *SubscriptionKeyParameterNamesContract `json:"subscriptionKeyParameterNames,omitempty"`

	// Criteria to limit import of WSDL to a subset of the document.
	WsdlSelector *APICreateOrUpdatePropertiesWsdlSelector `json:"wsdlSelector,omitempty"`

	// READ-ONLY; Indicates if API revision is current api revision.
	IsCurrent *bool `json:"isCurrent,omitempty" azure:"ro"`

	// READ-ONLY; Indicates if API revision is accessible via the gateway.
	IsOnline *bool `json:"isOnline,omitempty" azure:"ro"`
}

// APICreateOrUpdatePropertiesWsdlSelector - Criteria to limit import of WSDL to a subset of the document.
type APICreateOrUpdatePropertiesWsdlSelector struct {
	// Name of endpoint(port) to import from WSDL
	WsdlEndpointName *string `json:"wsdlEndpointName,omitempty"`

	// Name of service to import from WSDL
	WsdlServiceName *string `json:"wsdlServiceName,omitempty"`
}

// APIDiagnosticClientCreateOrUpdateOptions contains the optional parameters for the APIDiagnosticClient.CreateOrUpdate method.
type APIDiagnosticClientCreateOrUpdateOptions struct {
	// ETag of the Diagnostic Entity. ETag should match the current entity state from the header response of the GET request or
	// it should be * for unconditional update.
	IfMatch *string
}

// APIDiagnosticClientDeleteOptions contains the optional parameters for the APIDiagnosticClient.Delete method.
type APIDiagnosticClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIDiagnosticClientGetOptions contains the optional parameters for the APIDiagnosticClient.Get method.
type APIDiagnosticClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIDiagnosticClientHeadOptions contains the optional parameters for the APIDiagnosticClient.Head method.
type APIDiagnosticClientHeadOptions struct {
	// placeholder for future optional parameters
}

// APIDiagnosticClientListByServiceOptions contains the optional parameters for the APIDiagnosticClient.ListByService method.
type APIDiagnosticClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIDiagnosticClientUpdateOptions contains the optional parameters for the APIDiagnosticClient.Update method.
type APIDiagnosticClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// APIDiagnosticLoggerClientCheckEntityExistsOptions contains the optional parameters for the APIDiagnosticLoggerClient.CheckEntityExists
// method.
type APIDiagnosticLoggerClientCheckEntityExistsOptions struct {
	// placeholder for future optional parameters
}

// APIDiagnosticLoggerClientCreateOrUpdateOptions contains the optional parameters for the APIDiagnosticLoggerClient.CreateOrUpdate
// method.
type APIDiagnosticLoggerClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// APIDiagnosticLoggerClientDeleteOptions contains the optional parameters for the APIDiagnosticLoggerClient.Delete method.
type APIDiagnosticLoggerClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIDiagnosticLoggerClientListByServiceOptions contains the optional parameters for the APIDiagnosticLoggerClient.ListByService
// method.
type APIDiagnosticLoggerClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// type eq
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIEntityBaseContract - API base contract details.
type APIEntityBaseContract struct {
	// Describes the Revision of the Api. If no value is provided, default revision 1 is created
	APIRevision *string `json:"apiRevision,omitempty"`

	// Type of API.
	APIType *APIType `json:"type,omitempty"`

	// Indicates the Version identifier of the API if the API is versioned
	APIVersion *string `json:"apiVersion,omitempty"`

	// A resource identifier for the related ApiVersionSet.
	APIVersionSetID *string `json:"apiVersionSetId,omitempty"`

	// Collection of authentication settings included into this API.
	AuthenticationSettings *AuthenticationSettingsContract `json:"authenticationSettings,omitempty"`

	// Description of the API. May include HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// Protocols over which API is made available.
	SubscriptionKeyParameterNames *SubscriptionKeyParameterNamesContract `json:"subscriptionKeyParameterNames,omitempty"`

	// READ-ONLY; Indicates if API revision is current api revision.
	IsCurrent *bool `json:"isCurrent,omitempty" azure:"ro"`

	// READ-ONLY; Indicates if API revision is accessible via the gateway.
	IsOnline *bool `json:"isOnline,omitempty" azure:"ro"`
}

// APIExportClientGetOptions contains the optional parameters for the APIExportClient.Get method.
type APIExportClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIExportResult - API Export result Blob Uri.
type APIExportResult struct {
	// Link to the Storage Blob containing the result of the export operation. The Blob Uri is only valid for 5 minutes.
	Link *string `json:"link,omitempty"`
}

// APIIssuAttachmentClientHeadOptions contains the optional parameters for the APIIssuAttachmentClient.Head method.
type APIIssuAttachmentClientHeadOptions struct {
	// placeholder for future optional parameters
}

// APIIssuCommentClientHeadOptions contains the optional parameters for the APIIssuCommentClient.Head method.
type APIIssuCommentClientHeadOptions struct {
	// placeholder for future optional parameters
}

// APIIssueAttachmentClientCreateOrUpdateOptions contains the optional parameters for the APIIssueAttachmentClient.CreateOrUpdate
// method.
type APIIssueAttachmentClientCreateOrUpdateOptions struct {
	// ETag of the Issue Entity. ETag should match the current entity state from the header response of the GET request or it
	// should be * for unconditional update.
	IfMatch *string
}

// APIIssueAttachmentClientDeleteOptions contains the optional parameters for the APIIssueAttachmentClient.Delete method.
type APIIssueAttachmentClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIIssueAttachmentClientGetOptions contains the optional parameters for the APIIssueAttachmentClient.Get method.
type APIIssueAttachmentClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIIssueAttachmentsClientListByServiceOptions contains the optional parameters for the APIIssueAttachmentsClient.ListByService
// method.
type APIIssueAttachmentsClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// userId ge, le, eq, ne, gt, lt substringof, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIIssueClientCreateOrUpdateOptions contains the optional parameters for the APIIssueClient.CreateOrUpdate method.
type APIIssueClientCreateOrUpdateOptions struct {
	// ETag of the Issue Entity. ETag should match the current entity state from the header response of the GET request or it
	// should be * for unconditional update.
	IfMatch *string
}

// APIIssueClientDeleteOptions contains the optional parameters for the APIIssueClient.Delete method.
type APIIssueClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIIssueClientGetOptions contains the optional parameters for the APIIssueClient.Get method.
type APIIssueClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIIssueClientHeadOptions contains the optional parameters for the APIIssueClient.Head method.
type APIIssueClientHeadOptions struct {
	// placeholder for future optional parameters
}

// APIIssueCommentClientCreateOrUpdateOptions contains the optional parameters for the APIIssueCommentClient.CreateOrUpdate
// method.
type APIIssueCommentClientCreateOrUpdateOptions struct {
	// ETag of the Issue Entity. ETag should match the current entity state from the header response of the GET request or it
	// should be * for unconditional update.
	IfMatch *string
}

// APIIssueCommentClientDeleteOptions contains the optional parameters for the APIIssueCommentClient.Delete method.
type APIIssueCommentClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIIssueCommentClientGetOptions contains the optional parameters for the APIIssueCommentClient.Get method.
type APIIssueCommentClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIIssueCommentsClientListByServiceOptions contains the optional parameters for the APIIssueCommentsClient.ListByService
// method.
type APIIssueCommentsClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// userId ge, le, eq, ne, gt, lt substringof, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIIssuesClientListByServiceOptions contains the optional parameters for the APIIssuesClient.ListByService method.
type APIIssuesClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// state eq
	// userId ge, le, eq, ne, gt, lt substringof, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIOperationClientCreateOrUpdateOptions contains the optional parameters for the APIOperationClient.CreateOrUpdate method.
type APIOperationClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// APIOperationClientDeleteOptions contains the optional parameters for the APIOperationClient.Delete method.
type APIOperationClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIOperationClientGetEntityTagOptions contains the optional parameters for the APIOperationClient.GetEntityTag method.
type APIOperationClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// APIOperationClientGetOptions contains the optional parameters for the APIOperationClient.Get method.
type APIOperationClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIOperationClientListByAPIOptions contains the optional parameters for the APIOperationClient.ListByAPI method.
type APIOperationClientListByAPIOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// name ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// method ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// urlTemplate ge, le, eq, ne, gt, lt substringof, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIOperationClientUpdateOptions contains the optional parameters for the APIOperationClient.Update method.
type APIOperationClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// APIOperationPolicyClientCreateOrUpdateOptions contains the optional parameters for the APIOperationPolicyClient.CreateOrUpdate
// method.
type APIOperationPolicyClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// APIOperationPolicyClientDeleteOptions contains the optional parameters for the APIOperationPolicyClient.Delete method.
type APIOperationPolicyClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIOperationPolicyClientGetEntityTagOptions contains the optional parameters for the APIOperationPolicyClient.GetEntityTag
// method.
type APIOperationPolicyClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// APIOperationPolicyClientGetOptions contains the optional parameters for the APIOperationPolicyClient.Get method.
type APIOperationPolicyClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIOperationPolicyClientListByOperationOptions contains the optional parameters for the APIOperationPolicyClient.ListByOperation
// method.
type APIOperationPolicyClientListByOperationOptions struct {
	// placeholder for future optional parameters
}

// APIPolicyClientCreateOrUpdateOptions contains the optional parameters for the APIPolicyClient.CreateOrUpdate method.
type APIPolicyClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// APIPolicyClientDeleteOptions contains the optional parameters for the APIPolicyClient.Delete method.
type APIPolicyClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIPolicyClientGetEntityTagOptions contains the optional parameters for the APIPolicyClient.GetEntityTag method.
type APIPolicyClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// APIPolicyClientGetOptions contains the optional parameters for the APIPolicyClient.Get method.
type APIPolicyClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIPolicyClientListByAPIOptions contains the optional parameters for the APIPolicyClient.ListByAPI method.
type APIPolicyClientListByAPIOptions struct {
	// placeholder for future optional parameters
}

// APIProductClientListByApisOptions contains the optional parameters for the APIProductClient.ListByApis method.
type APIProductClientListByApisOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIReleaseClientCreateOptions contains the optional parameters for the APIReleaseClient.Create method.
type APIReleaseClientCreateOptions struct {
	// placeholder for future optional parameters
}

// APIReleaseClientDeleteOptions contains the optional parameters for the APIReleaseClient.Delete method.
type APIReleaseClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIReleaseClientGetOptions contains the optional parameters for the APIReleaseClient.Get method.
type APIReleaseClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIReleaseClientListOptions contains the optional parameters for the APIReleaseClient.List method.
type APIReleaseClientListOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// notes ge le eq ne gt lt substringof contains startswith endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIReleaseClientUpdateOptions contains the optional parameters for the APIReleaseClient.Update method.
type APIReleaseClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// APIReleaseCollection - Paged Api Revision list representation.
type APIReleaseCollection struct {
	// READ-ONLY; Next page link if any.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Page values.
	Value []*APIReleaseContract `json:"value,omitempty" azure:"ro"`
}

// APIReleaseContract - Api Release details.
type APIReleaseContract struct {
	// Properties of the Api Release Contract.
	Properties *APIReleaseContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// APIReleaseContractProperties - API Release details
type APIReleaseContractProperties struct {
	// Identifier of the API the release belongs to.
	APIID *string `json:"apiId,omitempty"`

	// Release Notes
	Notes *string `json:"notes,omitempty"`

	// READ-ONLY; The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified
	// by the ISO 8601 standard.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty" azure:"ro"`

	// READ-ONLY; The time the API release was updated.
	UpdatedDateTime *time.Time `json:"updatedDateTime,omitempty" azure:"ro"`
}

// APIRevisionCollection - Paged Api Revision list representation.
type APIRevisionCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*APIRevisionContract `json:"value,omitempty"`
}

// APIRevisionContract - Api Revision details.
type APIRevisionContract struct {
	// Properties of the Api Revision Contract.
	Properties *APIRevisionContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// APIRevisionContractProperties - Summary of revision metadata.
type APIRevisionContractProperties struct {
	// READ-ONLY; Identifier of the API Revision.
	APIID *string `json:"apiId,omitempty" azure:"ro"`

	// READ-ONLY; Revision number of API.
	APIRevision *string `json:"apiRevision,omitempty" azure:"ro"`

	// READ-ONLY; The time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified
	// by the ISO 8601 standard.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty" azure:"ro"`

	// READ-ONLY; Description of the API Revision.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; Indicates if API revision is accessible via the gateway.
	IsCurrent *bool `json:"isCurrent,omitempty" azure:"ro"`

	// READ-ONLY; Indicates if API revision is the current api revision.
	IsOnline *bool `json:"isOnline,omitempty" azure:"ro"`

	// READ-ONLY; Gateway URL for accessing the non-current API Revision.
	PrivateURL *string `json:"privateUrl,omitempty" azure:"ro"`

	// READ-ONLY; The time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified
	// by the ISO 8601 standard.
	UpdatedDateTime *time.Time `json:"updatedDateTime,omitempty" azure:"ro"`
}

// APIRevisionInfoContract - Object used to create an API Revision or Version based on an existing API Revision
type APIRevisionInfoContract struct {
	// Description of new API Revision.
	APIRevisionDescription *string `json:"apiRevisionDescription,omitempty"`

	// Version identifier for the new API Version.
	APIVersionName *string `json:"apiVersionName,omitempty"`

	// Version set details
	APIVersionSet *APIVersionSetContractProperties `json:"apiVersionSet,omitempty"`

	// Resource identifier of API to be used to create the revision from.
	SourceAPIID *string `json:"sourceApiId,omitempty"`
}

// APIRevisionsClientListOptions contains the optional parameters for the APIRevisionsClient.List method.
type APIRevisionsClientListOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// |apiRevision | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APISchemaClientCreateOrUpdateOptions contains the optional parameters for the APISchemaClient.CreateOrUpdate method.
type APISchemaClientCreateOrUpdateOptions struct {
	// The entity state (Etag) version of the Api Schema to update. A value of "*" can be used for If-Match to unconditionally
	// apply the operation.
	IfMatch *string
}

// APISchemaClientDeleteOptions contains the optional parameters for the APISchemaClient.Delete method.
type APISchemaClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APISchemaClientGetEntityTagOptions contains the optional parameters for the APISchemaClient.GetEntityTag method.
type APISchemaClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// APISchemaClientGetOptions contains the optional parameters for the APISchemaClient.Get method.
type APISchemaClientGetOptions struct {
	// placeholder for future optional parameters
}

// APISchemaClientListByAPIOptions contains the optional parameters for the APISchemaClient.ListByAPI method.
type APISchemaClientListByAPIOptions struct {
	// placeholder for future optional parameters
}

// APIUpdateContract - API update contract details.
type APIUpdateContract struct {
	// Properties of the API entity that can be updated.
	Properties *APIContractUpdateProperties `json:"properties,omitempty"`
}

// APIVersionSetClientCreateOrUpdateOptions contains the optional parameters for the APIVersionSetClient.CreateOrUpdate method.
type APIVersionSetClientCreateOrUpdateOptions struct {
	// The entity state (Etag) version of the user to update. A value of "*" can be used for If-Match to unconditionally apply
	// the operation.
	IfMatch *string
}

// APIVersionSetClientDeleteOptions contains the optional parameters for the APIVersionSetClient.Delete method.
type APIVersionSetClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIVersionSetClientGetEntityTagOptions contains the optional parameters for the APIVersionSetClient.GetEntityTag method.
type APIVersionSetClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// APIVersionSetClientGetOptions contains the optional parameters for the APIVersionSetClient.Get method.
type APIVersionSetClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIVersionSetClientListByServiceOptions contains the optional parameters for the APIVersionSetClient.ListByService method.
type APIVersionSetClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// firstName ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// lastName ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// email ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// state eq N/A
	// registrationDate ge, le, eq, ne, gt, lt N/A
	// note ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// APIVersionSetClientUpdateOptions contains the optional parameters for the APIVersionSetClient.Update method.
type APIVersionSetClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// APIVersionSetCollection - Paged Api Version Set list representation.
type APIVersionSetCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*APIVersionSetContract `json:"value,omitempty"`
}

// APIVersionSetContract - Api Version Set Contract details.
type APIVersionSetContract struct {
	// Properties of an API Version Set.
	Properties *APIVersionSetContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// APIVersionSetContractProperties - Properties of an API Version Set.
type APIVersionSetContractProperties struct {
	// REQUIRED; Name of API Version Set
	DisplayName *string `json:"displayName,omitempty"`

	// REQUIRED; An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme *VersioningScheme `json:"versioningScheme,omitempty"`

	// Description of API Version Set.
	Description *string `json:"description,omitempty"`

	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to header.
	VersionHeaderName *string `json:"versionHeaderName,omitempty"`

	// Name of query parameter that indicates the API Version if versioningScheme is set to query.
	VersionQueryName *string `json:"versionQueryName,omitempty"`
}

type APIVersionSetEntityBase struct {
	// Description of API Version Set.
	Description *string `json:"description,omitempty"`

	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to header.
	VersionHeaderName *string `json:"versionHeaderName,omitempty"`

	// Name of query parameter that indicates the API Version if versioningScheme is set to query.
	VersionQueryName *string `json:"versionQueryName,omitempty"`
}

// APIVersionSetUpdateParameters - Parameters to update or create an Api Version Set Contract.
type APIVersionSetUpdateParameters struct {
	// Parameters to update or create an Api Version Set Contract.
	Properties *APIVersionSetUpdateParametersProperties `json:"properties,omitempty"`
}

// APIVersionSetUpdateParametersProperties - Properties used to create or update an API Version Set.
type APIVersionSetUpdateParametersProperties struct {
	// Description of API Version Set.
	Description *string `json:"description,omitempty"`

	// Name of API Version Set
	DisplayName *string `json:"displayName,omitempty"`

	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to header.
	VersionHeaderName *string `json:"versionHeaderName,omitempty"`

	// Name of query parameter that indicates the API Version if versioningScheme is set to query.
	VersionQueryName *string `json:"versionQueryName,omitempty"`

	// An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme *VersioningScheme `json:"versioningScheme,omitempty"`
}

// AccessInformationContract - Tenant access information contract of the API Management service.
type AccessInformationContract struct {
	// Tenant access information of the API Management service.
	Enabled *bool `json:"enabled,omitempty"`

	// Identifier.
	ID *string `json:"id,omitempty"`

	// Primary access key.
	PrimaryKey *string `json:"primaryKey,omitempty"`

	// Secondary access key.
	SecondaryKey *string `json:"secondaryKey,omitempty"`
}

// AccessInformationUpdateParameters - Tenant access information update parameters of the API Management service.
type AccessInformationUpdateParameters struct {
	// Tenant access information of the API Management service.
	Enabled *bool `json:"enabled,omitempty"`
}

// AdditionalLocation - Description of an additional API Management resource location.
type AdditionalLocation struct {
	// REQUIRED; The location name of the additional region among Azure Data center regions.
	Location *string `json:"location,omitempty"`

	// REQUIRED; SKU properties of the API Management service.
	SKU *ServiceSKUProperties `json:"sku,omitempty"`

	// Virtual network configuration for the location.
	VirtualNetworkConfiguration *VirtualNetworkConfiguration `json:"virtualNetworkConfiguration,omitempty"`

	// READ-ONLY; Gateway URL of the API Management service in the Region.
	GatewayRegionalURL *string `json:"gatewayRegionalUrl,omitempty" azure:"ro"`

	// READ-ONLY; Static IP addresses of the location's virtual machines.
	StaticIPs []*string `json:"staticIps,omitempty" azure:"ro"`
}

// ApimResource - The Resource definition.
type ApimResource struct {
	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource is set to Microsoft.ApiManagement.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AuthenticationSettingsContract - API Authentication Settings.
type AuthenticationSettingsContract struct {
	// OAuth2 Authentication settings
	OAuth2 *OAuth2AuthenticationSettingsContract `json:"oAuth2,omitempty"`
}

// AuthorizationServerClientCreateOrUpdateOptions contains the optional parameters for the AuthorizationServerClient.CreateOrUpdate
// method.
type AuthorizationServerClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AuthorizationServerClientDeleteOptions contains the optional parameters for the AuthorizationServerClient.Delete method.
type AuthorizationServerClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// AuthorizationServerClientGetEntityTagOptions contains the optional parameters for the AuthorizationServerClient.GetEntityTag
// method.
type AuthorizationServerClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// AuthorizationServerClientGetOptions contains the optional parameters for the AuthorizationServerClient.Get method.
type AuthorizationServerClientGetOptions struct {
	// placeholder for future optional parameters
}

// AuthorizationServerClientListByServiceOptions contains the optional parameters for the AuthorizationServerClient.ListByService
// method.
type AuthorizationServerClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// AuthorizationServerClientUpdateOptions contains the optional parameters for the AuthorizationServerClient.Update method.
type AuthorizationServerClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// AuthorizationServerCollection - Paged OAuth2 Authorization Servers list representation.
type AuthorizationServerCollection struct {
	// Total record count number across all pages.
	Count *int64 `json:"count,omitempty"`

	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*AuthorizationServerContract `json:"value,omitempty"`
}

// AuthorizationServerContract - External OAuth authorization server settings.
type AuthorizationServerContract struct {
	// Properties of the External OAuth authorization server Contract.
	Properties *AuthorizationServerContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AuthorizationServerContractBaseProperties - External OAuth authorization server Update settings contract.
type AuthorizationServerContractBaseProperties struct {
	// HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
	AuthorizationMethods []*AuthorizationMethod `json:"authorizationMethods,omitempty"`

	// Specifies the mechanism by which access token is passed to the API.
	BearerTokenSendingMethods []*BearerTokenSendingMethod `json:"bearerTokenSendingMethods,omitempty"`

	// Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or
	// Body. When Body is specified, client credentials and other parameters are passed
	// within the request body in the application/x-www-form-urlencoded format.
	ClientAuthenticationMethod []*ClientAuthenticationMethod `json:"clientAuthenticationMethod,omitempty"`

	// Client or app secret registered with this authorization server.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in
	// the form of a string containing space-delimited values.
	DefaultScope *string `json:"defaultScope,omitempty"`

	// Description of the authorization server. Can contain HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default
	// resource owner password.
	ResourceOwnerPassword *string `json:"resourceOwnerPassword,omitempty"`

	// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default
	// resource owner username.
	ResourceOwnerUsername *string `json:"resourceOwnerUsername,omitempty"`

	// If true, authorization server will include state parameter from the authorization request to its response. Client may use
	// state parameter to raise protocol security.
	SupportState *bool `json:"supportState,omitempty"`

	// Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects
	// with name and value string properties, i.e. {"name" : "name value", "value":
	// "a value"}.
	TokenBodyParameters []*TokenBodyParameterContract `json:"tokenBodyParameters,omitempty"`

	// OAuth token endpoint. Contains absolute URI to entity being referenced.
	TokenEndpoint *string `json:"tokenEndpoint,omitempty"`
}

// AuthorizationServerContractProperties - External OAuth authorization server settings Properties.
type AuthorizationServerContractProperties struct {
	// REQUIRED; OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
	AuthorizationEndpoint *string `json:"authorizationEndpoint,omitempty"`

	// REQUIRED; Client or app id registered with this authorization server.
	ClientID *string `json:"clientId,omitempty"`

	// REQUIRED; Optional reference to a page where client or app registration for this authorization server is performed. Contains
	// absolute URL to entity being referenced.
	ClientRegistrationEndpoint *string `json:"clientRegistrationEndpoint,omitempty"`

	// REQUIRED; User-friendly authorization server name.
	DisplayName *string `json:"displayName,omitempty"`

	// REQUIRED; Form of an authorization grant, which the client uses to request the access token.
	GrantTypes []*GrantType `json:"grantTypes,omitempty"`

	// HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
	AuthorizationMethods []*AuthorizationMethod `json:"authorizationMethods,omitempty"`

	// Specifies the mechanism by which access token is passed to the API.
	BearerTokenSendingMethods []*BearerTokenSendingMethod `json:"bearerTokenSendingMethods,omitempty"`

	// Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or
	// Body. When Body is specified, client credentials and other parameters are passed
	// within the request body in the application/x-www-form-urlencoded format.
	ClientAuthenticationMethod []*ClientAuthenticationMethod `json:"clientAuthenticationMethod,omitempty"`

	// Client or app secret registered with this authorization server.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in
	// the form of a string containing space-delimited values.
	DefaultScope *string `json:"defaultScope,omitempty"`

	// Description of the authorization server. Can contain HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default
	// resource owner password.
	ResourceOwnerPassword *string `json:"resourceOwnerPassword,omitempty"`

	// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default
	// resource owner username.
	ResourceOwnerUsername *string `json:"resourceOwnerUsername,omitempty"`

	// If true, authorization server will include state parameter from the authorization request to its response. Client may use
	// state parameter to raise protocol security.
	SupportState *bool `json:"supportState,omitempty"`

	// Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects
	// with name and value string properties, i.e. {"name" : "name value", "value":
	// "a value"}.
	TokenBodyParameters []*TokenBodyParameterContract `json:"tokenBodyParameters,omitempty"`

	// OAuth token endpoint. Contains absolute URI to entity being referenced.
	TokenEndpoint *string `json:"tokenEndpoint,omitempty"`
}

// AuthorizationServerUpdateContract - External OAuth authorization server settings.
type AuthorizationServerUpdateContract struct {
	// Properties of the External OAuth authorization server update Contract.
	Properties *AuthorizationServerUpdateContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AuthorizationServerUpdateContractProperties - External OAuth authorization server Update settings contract.
type AuthorizationServerUpdateContractProperties struct {
	// OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
	AuthorizationEndpoint *string `json:"authorizationEndpoint,omitempty"`

	// HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
	AuthorizationMethods []*AuthorizationMethod `json:"authorizationMethods,omitempty"`

	// Specifies the mechanism by which access token is passed to the API.
	BearerTokenSendingMethods []*BearerTokenSendingMethod `json:"bearerTokenSendingMethods,omitempty"`

	// Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or
	// Body. When Body is specified, client credentials and other parameters are passed
	// within the request body in the application/x-www-form-urlencoded format.
	ClientAuthenticationMethod []*ClientAuthenticationMethod `json:"clientAuthenticationMethod,omitempty"`

	// Client or app id registered with this authorization server.
	ClientID *string `json:"clientId,omitempty"`

	// Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute
	// URL to entity being referenced.
	ClientRegistrationEndpoint *string `json:"clientRegistrationEndpoint,omitempty"`

	// Client or app secret registered with this authorization server.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in
	// the form of a string containing space-delimited values.
	DefaultScope *string `json:"defaultScope,omitempty"`

	// Description of the authorization server. Can contain HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// User-friendly authorization server name.
	DisplayName *string `json:"displayName,omitempty"`

	// Form of an authorization grant, which the client uses to request the access token.
	GrantTypes []*GrantType `json:"grantTypes,omitempty"`

	// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default
	// resource owner password.
	ResourceOwnerPassword *string `json:"resourceOwnerPassword,omitempty"`

	// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default
	// resource owner username.
	ResourceOwnerUsername *string `json:"resourceOwnerUsername,omitempty"`

	// If true, authorization server will include state parameter from the authorization request to its response. Client may use
	// state parameter to raise protocol security.
	SupportState *bool `json:"supportState,omitempty"`

	// Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects
	// with name and value string properties, i.e. {"name" : "name value", "value":
	// "a value"}.
	TokenBodyParameters []*TokenBodyParameterContract `json:"tokenBodyParameters,omitempty"`

	// OAuth token endpoint. Contains absolute URI to entity being referenced.
	TokenEndpoint *string `json:"tokenEndpoint,omitempty"`
}

// BackendAuthorizationHeaderCredentials - Authorization header information.
type BackendAuthorizationHeaderCredentials struct {
	// REQUIRED; Authentication Parameter value.
	Parameter *string `json:"parameter,omitempty"`

	// REQUIRED; Authentication Scheme name.
	Scheme *string `json:"scheme,omitempty"`
}

// BackendBaseParameters - Backend entity base Parameter set.
type BackendBaseParameters struct {
	// Backend Credentials Contract Properties
	Credentials *BackendCredentialsContract `json:"credentials,omitempty"`

	// Backend Description.
	Description *string `json:"description,omitempty"`

	// Backend Properties contract
	Properties *BackendProperties `json:"properties,omitempty"`

	// Backend Proxy Contract Properties
	Proxy *BackendProxyContract `json:"proxy,omitempty"`

	// Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or
	// Api Apps.
	ResourceID *string `json:"resourceId,omitempty"`

	// Backend TLS Properties
	TLS *BackendTLSProperties `json:"tls,omitempty"`

	// Backend Title.
	Title *string `json:"title,omitempty"`
}

// BackendClientCreateOrUpdateOptions contains the optional parameters for the BackendClient.CreateOrUpdate method.
type BackendClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// BackendClientDeleteOptions contains the optional parameters for the BackendClient.Delete method.
type BackendClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// BackendClientGetEntityTagOptions contains the optional parameters for the BackendClient.GetEntityTag method.
type BackendClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// BackendClientGetOptions contains the optional parameters for the BackendClient.Get method.
type BackendClientGetOptions struct {
	// placeholder for future optional parameters
}

// BackendClientListByServiceOptions contains the optional parameters for the BackendClient.ListByService method.
type BackendClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// host ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// BackendClientReconnectOptions contains the optional parameters for the BackendClient.Reconnect method.
type BackendClientReconnectOptions struct {
	// Reconnect request parameters.
	Parameters *BackendReconnectContract
}

// BackendClientUpdateOptions contains the optional parameters for the BackendClient.Update method.
type BackendClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// BackendCollection - Paged Backend list representation.
type BackendCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Backend values.
	Value []*BackendContract `json:"value,omitempty"`
}

// BackendContract - Backend details.
type BackendContract struct {
	// Backend entity contract properties.
	Properties *BackendContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// BackendContractProperties - Parameters supplied to the Create Backend operation.
type BackendContractProperties struct {
	// REQUIRED; Backend communication protocol.
	Protocol *BackendProtocol `json:"protocol,omitempty"`

	// REQUIRED; Runtime Url of the Backend.
	URL *string `json:"url,omitempty"`

	// Backend Credentials Contract Properties
	Credentials *BackendCredentialsContract `json:"credentials,omitempty"`

	// Backend Description.
	Description *string `json:"description,omitempty"`

	// Backend Properties contract
	Properties *BackendProperties `json:"properties,omitempty"`

	// Backend Proxy Contract Properties
	Proxy *BackendProxyContract `json:"proxy,omitempty"`

	// Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or
	// Api Apps.
	ResourceID *string `json:"resourceId,omitempty"`

	// Backend TLS Properties
	TLS *BackendTLSProperties `json:"tls,omitempty"`

	// Backend Title.
	Title *string `json:"title,omitempty"`
}

// BackendCredentialsContract - Details of the Credentials used to connect to Backend.
type BackendCredentialsContract struct {
	// Authorization header authentication
	Authorization *BackendAuthorizationHeaderCredentials `json:"authorization,omitempty"`

	// List of Client Certificate Thumbprint.
	Certificate []*string `json:"certificate,omitempty"`

	// Header Parameter description.
	Header map[string][]*string `json:"header,omitempty"`

	// Query Parameter description.
	Query map[string][]*string `json:"query,omitempty"`
}

// BackendProperties - Properties specific to the Backend Type.
type BackendProperties struct {
	// Backend Service Fabric Cluster Properties
	ServiceFabricCluster *BackendServiceFabricClusterProperties `json:"serviceFabricCluster,omitempty"`
}

// BackendProxyContract - Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContract struct {
	// REQUIRED; WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all
	// fragments and query strings.
	URL *string `json:"url,omitempty"`

	// Password to connect to the WebProxy Server
	Password *string `json:"password,omitempty"`

	// Username to connect to the WebProxy server
	Username *string `json:"username,omitempty"`
}

// BackendReconnectContract - Reconnect request parameters.
type BackendReconnectContract struct {
	// Reconnect request properties.
	Properties *BackendReconnectProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// BackendReconnectProperties - Properties to control reconnect requests.
type BackendReconnectProperties struct {
	// Duration in ISO8601 format after which reconnect will be initiated.
	After *string `json:"after,omitempty"`
}

// BackendServiceFabricClusterProperties - Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterProperties struct {
	// REQUIRED; The client certificate thumbprint for the management endpoint.
	ClientCertificatethumbprint *string `json:"clientCertificatethumbprint,omitempty"`

	// REQUIRED; The cluster management endpoint.
	ManagementEndpoints []*string `json:"managementEndpoints,omitempty"`

	// Maximum number of retries while attempting resolve the partition.
	MaxPartitionResolutionRetries *int32 `json:"maxPartitionResolutionRetries,omitempty"`

	// Thumbprints of certificates cluster management service uses for tls communication
	ServerCertificateThumbprints []*string `json:"serverCertificateThumbprints,omitempty"`

	// Server X509 Certificate Names Collection
	ServerX509Names []*X509CertificateName `json:"serverX509Names,omitempty"`
}

// BackendTLSProperties - Properties controlling TLS Certificate Validation.
type BackendTLSProperties struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend
	// host.
	ValidateCertificateChain *bool `json:"validateCertificateChain,omitempty"`

	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend
	// host.
	ValidateCertificateName *bool `json:"validateCertificateName,omitempty"`
}

// BackendUpdateParameterProperties - Parameters supplied to the Update Backend operation.
type BackendUpdateParameterProperties struct {
	// Backend Credentials Contract Properties
	Credentials *BackendCredentialsContract `json:"credentials,omitempty"`

	// Backend Description.
	Description *string `json:"description,omitempty"`

	// Backend Properties contract
	Properties *BackendProperties `json:"properties,omitempty"`

	// Backend communication protocol.
	Protocol *BackendProtocol `json:"protocol,omitempty"`

	// Backend Proxy Contract Properties
	Proxy *BackendProxyContract `json:"proxy,omitempty"`

	// Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or
	// Api Apps.
	ResourceID *string `json:"resourceId,omitempty"`

	// Backend TLS Properties
	TLS *BackendTLSProperties `json:"tls,omitempty"`

	// Backend Title.
	Title *string `json:"title,omitempty"`

	// Runtime Url of the Backend.
	URL *string `json:"url,omitempty"`
}

// BackendUpdateParameters - Backend update parameters.
type BackendUpdateParameters struct {
	// Backend entity update contract properties.
	Properties *BackendUpdateParameterProperties `json:"properties,omitempty"`
}

// CertificateClientCreateOrUpdateOptions contains the optional parameters for the CertificateClient.CreateOrUpdate method.
type CertificateClientCreateOrUpdateOptions struct {
	// The entity state (Etag) version of the certificate to update. A value of "*" can be used for If-Match to unconditionally
	// apply the operation..
	IfMatch *string
}

// CertificateClientDeleteOptions contains the optional parameters for the CertificateClient.Delete method.
type CertificateClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// CertificateClientGetEntityTagOptions contains the optional parameters for the CertificateClient.GetEntityTag method.
type CertificateClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// CertificateClientGetOptions contains the optional parameters for the CertificateClient.Get method.
type CertificateClientGetOptions struct {
	// placeholder for future optional parameters
}

// CertificateClientListByServiceOptions contains the optional parameters for the CertificateClient.ListByService method.
type CertificateClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// subject ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// thumbprint ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// expirationDate ge, le, eq, ne, gt, lt N/A
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// CertificateCollection - Paged Certificates list representation.
type CertificateCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*CertificateContract `json:"value,omitempty"`
}

// CertificateConfiguration - Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfiguration struct {
	// REQUIRED; The local certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName *CertificateConfigurationStoreName `json:"storeName,omitempty"`

	// Certificate Password.
	CertificatePassword *string `json:"certificatePassword,omitempty"`

	// Base64 Encoded certificate.
	EncodedCertificate *string `json:"encodedCertificate,omitempty"`

	// READ-ONLY; Certificate information.
	Certificate *CertificateInformation `json:"certificate,omitempty" azure:"ro"`
}

// CertificateContract - Certificate details.
type CertificateContract struct {
	// Certificate properties details.
	Properties *CertificateContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// CertificateContractProperties - Properties of the Certificate contract.
type CertificateContractProperties struct {
	// REQUIRED; Expiration date of the certificate. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified
	// by the ISO 8601 standard.
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`

	// REQUIRED; Subject attribute of the certificate.
	Subject *string `json:"subject,omitempty"`

	// REQUIRED; Thumbprint of the certificate.
	Thumbprint *string `json:"thumbprint,omitempty"`
}

// CertificateCreateOrUpdateParameters - Certificate create or update details.
type CertificateCreateOrUpdateParameters struct {
	// Certificate create or update properties details.
	Properties *CertificateCreateOrUpdateProperties `json:"properties,omitempty"`
}

// CertificateCreateOrUpdateProperties - Parameters supplied to the CreateOrUpdate certificate operation.
type CertificateCreateOrUpdateProperties struct {
	// REQUIRED; Base 64 encoded certificate using the application/x-pkcs12 representation.
	Data *string `json:"data,omitempty"`

	// REQUIRED; Password for the Certificate
	Password *string `json:"password,omitempty"`
}

// CertificateInformation - SSL certificate information.
type CertificateInformation struct {
	// REQUIRED; Expiration date of the certificate. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified
	// by the ISO 8601 standard.
	Expiry *time.Time `json:"expiry,omitempty"`

	// REQUIRED; Subject of the certificate.
	Subject *string `json:"subject,omitempty"`

	// REQUIRED; Thumbprint of the certificate.
	Thumbprint *string `json:"thumbprint,omitempty"`
}

// ConnectivityStatusContract - Details about connectivity to a resource.
type ConnectivityStatusContract struct {
	// REQUIRED; The date when the resource connectivity status last Changed from success to failure or vice-versa. The date conforms
	// to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601
	// standard.
	LastStatusChange *time.Time `json:"lastStatusChange,omitempty"`

	// REQUIRED; The date when the resource connectivity status was last updated. This status should be updated every 15 minutes.
	// If this status has not been updated, then it means that the service has lost network
	// connectivity to the resource, from inside the Virtual Network.The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
	// as specified by the ISO 8601 standard.
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`

	// REQUIRED; The hostname of the resource which the service depends on. This can be the database, storage or any other azure
	// resource on which the service depends upon.
	Name *string `json:"name,omitempty"`

	// REQUIRED; Resource Connectivity Status Type identifier.
	Status *ConnectivityStatusType `json:"status,omitempty"`

	// Error details of the connectivity to the resource.
	Error *string `json:"error,omitempty"`
}

// DelegationSettingsClientCreateOrUpdateOptions contains the optional parameters for the DelegationSettingsClient.CreateOrUpdate
// method.
type DelegationSettingsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DelegationSettingsClientGetOptions contains the optional parameters for the DelegationSettingsClient.Get method.
type DelegationSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DelegationSettingsClientHeadOptions contains the optional parameters for the DelegationSettingsClient.Head method.
type DelegationSettingsClientHeadOptions struct {
	// placeholder for future optional parameters
}

// DelegationSettingsClientUpdateOptions contains the optional parameters for the DelegationSettingsClient.Update method.
type DelegationSettingsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DeployConfigurationParameters - Parameters supplied to the Deploy Configuration operation.
type DeployConfigurationParameters struct {
	// REQUIRED; The name of the Git branch from which the configuration is to be deployed to the configuration database.
	Branch *string `json:"branch,omitempty"`

	// The value enforcing deleting subscriptions to products that are deleted in this update.
	Force *bool `json:"force,omitempty"`
}

// DiagnosticClientCreateOrUpdateOptions contains the optional parameters for the DiagnosticClient.CreateOrUpdate method.
type DiagnosticClientCreateOrUpdateOptions struct {
	// ETag of the Diagnostic Entity. ETag should match the current entity state from the header response of the GET request or
	// it should be * for unconditional update.
	IfMatch *string
}

// DiagnosticClientDeleteOptions contains the optional parameters for the DiagnosticClient.Delete method.
type DiagnosticClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticClientGetOptions contains the optional parameters for the DiagnosticClient.Get method.
type DiagnosticClientGetOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticClientHeadOptions contains the optional parameters for the DiagnosticClient.Head method.
type DiagnosticClientHeadOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticClientListByServiceOptions contains the optional parameters for the DiagnosticClient.ListByService method.
type DiagnosticClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// DiagnosticClientUpdateOptions contains the optional parameters for the DiagnosticClient.Update method.
type DiagnosticClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticCollection - Paged Diagnostic list representation.
type DiagnosticCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*DiagnosticContract `json:"value,omitempty"`
}

// DiagnosticContract - Diagnostic details.
type DiagnosticContract struct {
	// Diagnostic entity contract properties.
	Properties *DiagnosticContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// DiagnosticContractProperties - Diagnostic Entity Properties
type DiagnosticContractProperties struct {
	// REQUIRED; Indicates whether a diagnostic should receive data or not.
	Enabled *bool `json:"enabled,omitempty"`
}

// DiagnosticLoggerClientCheckEntityExistsOptions contains the optional parameters for the DiagnosticLoggerClient.CheckEntityExists
// method.
type DiagnosticLoggerClientCheckEntityExistsOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticLoggerClientCreateOrUpdateOptions contains the optional parameters for the DiagnosticLoggerClient.CreateOrUpdate
// method.
type DiagnosticLoggerClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticLoggerClientDeleteOptions contains the optional parameters for the DiagnosticLoggerClient.Delete method.
type DiagnosticLoggerClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticLoggerClientListByServiceOptions contains the optional parameters for the DiagnosticLoggerClient.ListByService
// method.
type DiagnosticLoggerClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, startswith, endswith
	// type eq
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// EmailTemplateClientCreateOrUpdateOptions contains the optional parameters for the EmailTemplateClient.CreateOrUpdate method.
type EmailTemplateClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// EmailTemplateClientDeleteOptions contains the optional parameters for the EmailTemplateClient.Delete method.
type EmailTemplateClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// EmailTemplateClientGetEntityTagOptions contains the optional parameters for the EmailTemplateClient.GetEntityTag method.
type EmailTemplateClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// EmailTemplateClientGetOptions contains the optional parameters for the EmailTemplateClient.Get method.
type EmailTemplateClientGetOptions struct {
	// placeholder for future optional parameters
}

// EmailTemplateClientListByServiceOptions contains the optional parameters for the EmailTemplateClient.ListByService method.
type EmailTemplateClientListByServiceOptions struct {
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// EmailTemplateClientUpdateOptions contains the optional parameters for the EmailTemplateClient.Update method.
type EmailTemplateClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// EmailTemplateCollection - Paged email template list representation.
type EmailTemplateCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*EmailTemplateContract `json:"value,omitempty"`
}

// EmailTemplateContract - Email Template details.
type EmailTemplateContract struct {
	// Email Template entity contract properties.
	Properties *EmailTemplateContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// EmailTemplateContractProperties - Email Template Contract properties.
type EmailTemplateContractProperties struct {
	// REQUIRED; Email Template Body. This should be a valid XDocument
	Body *string `json:"body,omitempty"`

	// REQUIRED; Subject of the Template.
	Subject *string `json:"subject,omitempty"`

	// Description of the Email Template.
	Description *string `json:"description,omitempty"`

	// Email Template Parameter values.
	Parameters []*EmailTemplateParametersContractProperties `json:"parameters,omitempty"`

	// Title of the Template.
	Title *string `json:"title,omitempty"`

	// READ-ONLY; Whether the template is the default template provided by Api Management or has been edited.
	IsDefault *bool `json:"isDefault,omitempty" azure:"ro"`
}

// EmailTemplateParametersContractProperties - Email Template Parameter contract.
type EmailTemplateParametersContractProperties struct {
	// Template parameter description.
	Description *string `json:"description,omitempty"`

	// Template parameter name.
	Name *string `json:"name,omitempty"`

	// Template parameter title.
	Title *string `json:"title,omitempty"`
}

// EmailTemplateUpdateParameterProperties - Email Template Update Contract properties.
type EmailTemplateUpdateParameterProperties struct {
	// Email Template Body. This should be a valid XDocument
	Body *string `json:"body,omitempty"`

	// Description of the Email Template.
	Description *string `json:"description,omitempty"`

	// Email Template Parameter values.
	Parameters []*EmailTemplateParametersContractProperties `json:"parameters,omitempty"`

	// Subject of the Template.
	Subject *string `json:"subject,omitempty"`

	// Title of the Template.
	Title *string `json:"title,omitempty"`
}

// EmailTemplateUpdateParameters - Email Template update Parameters.
type EmailTemplateUpdateParameters struct {
	// Email Template Update contract properties.
	Properties *EmailTemplateUpdateParameterProperties `json:"properties,omitempty"`
}

// ErrorFieldContract - Error Field contract.
type ErrorFieldContract struct {
	// Property level error code.
	Code *string `json:"code,omitempty"`

	// Human-readable representation of property-level error.
	Message *string `json:"message,omitempty"`

	// Property name.
	Target *string `json:"target,omitempty"`
}

// ErrorResponse - Error Body contract.
type ErrorResponse struct {
	// Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
	Code *string `json:"code,omitempty"`

	// The list of invalid fields send in request, in case of validation error.
	Details []*ErrorFieldContract `json:"details,omitempty"`

	// Human-readable representation of the error.
	Message *string `json:"message,omitempty"`
}

// GenerateSsoURLResult - Generate SSO Url operations response details.
type GenerateSsoURLResult struct {
	// Redirect Url containing the SSO URL value.
	Value *string `json:"value,omitempty"`
}

// GroupClientCreateOrUpdateOptions contains the optional parameters for the GroupClient.CreateOrUpdate method.
type GroupClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// GroupClientDeleteOptions contains the optional parameters for the GroupClient.Delete method.
type GroupClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// GroupClientGetEntityTagOptions contains the optional parameters for the GroupClient.GetEntityTag method.
type GroupClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// GroupClientGetOptions contains the optional parameters for the GroupClient.Get method.
type GroupClientGetOptions struct {
	// placeholder for future optional parameters
}

// GroupClientListByServiceOptions contains the optional parameters for the GroupClient.ListByService method.
type GroupClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// type eq, ne N/A
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// GroupClientUpdateOptions contains the optional parameters for the GroupClient.Update method.
type GroupClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// GroupCollection - Paged Group list representation.
type GroupCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*GroupContract `json:"value,omitempty"`
}

// GroupContract - Contract details.
type GroupContract struct {
	// Group entity contract properties.
	Properties *GroupContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// GroupContractProperties - Group contract Properties.
type GroupContractProperties struct {
	// REQUIRED; Group name.
	DisplayName *string `json:"displayName,omitempty"`

	// Group description. Can contain HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active
	// Directory aad://.onmicrosoft.com/groups/; otherwise the value is null.
	ExternalID *string `json:"externalId,omitempty"`

	// Group type.
	Type *GroupType `json:"type,omitempty"`

	// READ-ONLY; true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
	BuiltIn *bool `json:"builtIn,omitempty" azure:"ro"`
}

// GroupCreateParameters - Parameters supplied to the Create Group operation.
type GroupCreateParameters struct {
	// Properties supplied to Create Group operation.
	Properties *GroupCreateParametersProperties `json:"properties,omitempty"`
}

// GroupCreateParametersProperties - Parameters supplied to the Create Group operation.
type GroupCreateParametersProperties struct {
	// REQUIRED; Group name.
	DisplayName *string `json:"displayName,omitempty"`

	// Group description.
	Description *string `json:"description,omitempty"`

	// Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g.
	// for Azure Active Directory aad://.onmicrosoft.com/groups/; otherwise the value
	// is null.
	ExternalID *string `json:"externalId,omitempty"`

	// Group type.
	Type *GroupType `json:"type,omitempty"`
}

// GroupUpdateParameters - Parameters supplied to the Update Group operation.
type GroupUpdateParameters struct {
	// Group entity update contract properties.
	Properties *GroupUpdateParametersProperties `json:"properties,omitempty"`
}

// GroupUpdateParametersProperties - Parameters supplied to the Update Group operation.
type GroupUpdateParametersProperties struct {
	// Group description.
	Description *string `json:"description,omitempty"`

	// Group name.
	DisplayName *string `json:"displayName,omitempty"`

	// Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g.
	// for Azure Active Directory aad://.onmicrosoft.com/groups/; otherwise the value
	// is null.
	ExternalID *string `json:"externalId,omitempty"`

	// Group type.
	Type *GroupType `json:"type,omitempty"`
}

// GroupUserClientCheckEntityExistsOptions contains the optional parameters for the GroupUserClient.CheckEntityExists method.
type GroupUserClientCheckEntityExistsOptions struct {
	// placeholder for future optional parameters
}

// GroupUserClientCreateOptions contains the optional parameters for the GroupUserClient.Create method.
type GroupUserClientCreateOptions struct {
	// placeholder for future optional parameters
}

// GroupUserClientDeleteOptions contains the optional parameters for the GroupUserClient.Delete method.
type GroupUserClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// GroupUserClientListOptions contains the optional parameters for the GroupUserClient.List method.
type GroupUserClientListOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// firstName ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// lastName ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// email ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// state eq N/A
	// registrationDate ge, le, eq, ne, gt, lt N/A
	// note ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// HostnameConfiguration - Custom hostname configuration.
type HostnameConfiguration struct {
	// REQUIRED; Hostname to configure on the Api Management service.
	HostName *string `json:"hostName,omitempty"`

	// REQUIRED; Hostname type.
	Type *HostnameType `json:"type,omitempty"`

	// Certificate Password.
	CertificatePassword *string `json:"certificatePassword,omitempty"`

	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not
	// send the SNI header, then this will be the certificate that will be challenged.
	// The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate.
	// The setting only applied to Proxy Hostname Type.
	DefaultSSLBinding *bool `json:"defaultSslBinding,omitempty"`

	// Base64 Encoded certificate.
	EncodedCertificate *string `json:"encodedCertificate,omitempty"`

	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update
	// of ssl certificate will not work. This requires Api Management service to be
	// configured with MSI. The secret should be of type application/x-pkcs12
	KeyVaultID *string `json:"keyVaultId,omitempty"`

	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate *bool `json:"negotiateClientCertificate,omitempty"`

	// READ-ONLY; Certificate information.
	Certificate *CertificateInformation `json:"certificate,omitempty" azure:"ro"`
}

// HostnameConfigurationOld - Custom hostname configuration.
type HostnameConfigurationOld struct {
	// REQUIRED; Certificate information.
	Certificate *CertificateInformation `json:"certificate,omitempty"`

	// REQUIRED; Hostname to configure.
	Hostname *string `json:"hostname,omitempty"`

	// REQUIRED; Hostname type.
	Type *HostnameType `json:"type,omitempty"`
}

// IdentityProviderBaseParameters - Identity Provider Base Parameter Properties.
type IdentityProviderBaseParameters struct {
	// List of Allowed Tenants when configuring Azure Active Directory login.
	AllowedTenants []*string `json:"allowedTenants,omitempty"`

	// Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
	PasswordResetPolicyName *string `json:"passwordResetPolicyName,omitempty"`

	// Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
	ProfileEditingPolicyName *string `json:"profileEditingPolicyName,omitempty"`

	// Signin Policy Name. Only applies to AAD B2C Identity Provider.
	SigninPolicyName *string `json:"signinPolicyName,omitempty"`

	// Signup Policy Name. Only applies to AAD B2C Identity Provider.
	SignupPolicyName *string `json:"signupPolicyName,omitempty"`

	// Identity Provider Type identifier.
	Type *IdentityProviderType `json:"type,omitempty"`
}

// IdentityProviderClientCreateOrUpdateOptions contains the optional parameters for the IdentityProviderClient.CreateOrUpdate
// method.
type IdentityProviderClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IdentityProviderClientDeleteOptions contains the optional parameters for the IdentityProviderClient.Delete method.
type IdentityProviderClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IdentityProviderClientGetEntityTagOptions contains the optional parameters for the IdentityProviderClient.GetEntityTag
// method.
type IdentityProviderClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// IdentityProviderClientGetOptions contains the optional parameters for the IdentityProviderClient.Get method.
type IdentityProviderClientGetOptions struct {
	// placeholder for future optional parameters
}

// IdentityProviderClientListByServiceOptions contains the optional parameters for the IdentityProviderClient.ListByService
// method.
type IdentityProviderClientListByServiceOptions struct {
	// placeholder for future optional parameters
}

// IdentityProviderClientUpdateOptions contains the optional parameters for the IdentityProviderClient.Update method.
type IdentityProviderClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// IdentityProviderContract - Identity Provider details.
type IdentityProviderContract struct {
	// Identity Provider contract properties.
	Properties *IdentityProviderContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// IdentityProviderContractProperties - The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure
// Active Directory which can be used to enable access to the API Management service developer portal for all users.
type IdentityProviderContractProperties struct {
	// REQUIRED; Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for
	// Google login, App ID for Microsoft.
	ClientID *string `json:"clientId,omitempty"`

	// REQUIRED; Client secret of the Application in external Identity Provider, used to authenticate login request. For example,
	// it is App Secret for Facebook login, API Key for Google login, Public Key for
	// Microsoft.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// List of Allowed Tenants when configuring Azure Active Directory login.
	AllowedTenants []*string `json:"allowedTenants,omitempty"`

	// Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
	PasswordResetPolicyName *string `json:"passwordResetPolicyName,omitempty"`

	// Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
	ProfileEditingPolicyName *string `json:"profileEditingPolicyName,omitempty"`

	// Signin Policy Name. Only applies to AAD B2C Identity Provider.
	SigninPolicyName *string `json:"signinPolicyName,omitempty"`

	// Signup Policy Name. Only applies to AAD B2C Identity Provider.
	SignupPolicyName *string `json:"signupPolicyName,omitempty"`

	// Identity Provider Type identifier.
	Type *IdentityProviderType `json:"type,omitempty"`
}

// IdentityProviderList - List of all the Identity Providers configured on the service instance.
type IdentityProviderList struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Identity Provider configuration values.
	Value []*IdentityProviderContract `json:"value,omitempty"`
}

// IdentityProviderUpdateParameters - Parameters supplied to update Identity Provider
type IdentityProviderUpdateParameters struct {
	// Identity Provider update properties.
	Properties *IdentityProviderUpdateProperties `json:"properties,omitempty"`
}

// IdentityProviderUpdateProperties - Parameters supplied to the Update Identity Provider operation.
type IdentityProviderUpdateProperties struct {
	// List of Allowed Tenants when configuring Azure Active Directory login.
	AllowedTenants []*string `json:"allowedTenants,omitempty"`

	// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login,
	// App ID for Microsoft.
	ClientID *string `json:"clientId,omitempty"`

	// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is
	// App Secret for Facebook login, API Key for Google login, Public Key for
	// Microsoft.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
	PasswordResetPolicyName *string `json:"passwordResetPolicyName,omitempty"`

	// Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
	ProfileEditingPolicyName *string `json:"profileEditingPolicyName,omitempty"`

	// Signin Policy Name. Only applies to AAD B2C Identity Provider.
	SigninPolicyName *string `json:"signinPolicyName,omitempty"`

	// Signup Policy Name. Only applies to AAD B2C Identity Provider.
	SignupPolicyName *string `json:"signupPolicyName,omitempty"`

	// Identity Provider Type identifier.
	Type *IdentityProviderType `json:"type,omitempty"`
}

// IssueAttachmentCollection - Paged Issue Attachment list representation.
type IssueAttachmentCollection struct {
	// READ-ONLY; Next page link if any.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Issue Attachment values.
	Value []*IssueAttachmentContract `json:"value,omitempty" azure:"ro"`
}

// IssueAttachmentContract - Issue Attachment Contract details.
type IssueAttachmentContract struct {
	// Properties of the Issue Attachment.
	Properties *IssueAttachmentContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// IssueAttachmentContractProperties - Issue Attachment contract Properties.
type IssueAttachmentContractProperties struct {
	// REQUIRED; An HTTP link or Base64-encoded binary data.
	Content *string `json:"content,omitempty"`

	// REQUIRED; Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided
	// in the 'content' property.
	ContentFormat *string `json:"contentFormat,omitempty"`

	// REQUIRED; Filename by which the binary data will be saved.
	Title *string `json:"title,omitempty"`
}

// IssueCollection - Paged Issue list representation.
type IssueCollection struct {
	// READ-ONLY; Next page link if any.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Issue values.
	Value []*IssueContract `json:"value,omitempty" azure:"ro"`
}

// IssueCommentCollection - Paged Issue Comment list representation.
type IssueCommentCollection struct {
	// READ-ONLY; Next page link if any.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Issue Comment values.
	Value []*IssueCommentContract `json:"value,omitempty" azure:"ro"`
}

// IssueCommentContract - Issue Comment Contract details.
type IssueCommentContract struct {
	// Properties of the Issue Comment.
	Properties *IssueCommentContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// IssueCommentContractProperties - Issue Comment contract Properties.
type IssueCommentContractProperties struct {
	// REQUIRED; Comment text.
	Text *string `json:"text,omitempty"`

	// REQUIRED; A resource identifier for the user who left the comment.
	UserID *string `json:"userId,omitempty"`

	// Date and time when the comment was created.
	CreatedDate *time.Time `json:"createdDate,omitempty"`
}

// IssueContract - Issue Contract details.
type IssueContract struct {
	// Properties of the Issue.
	Properties *IssueContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// IssueContractProperties - Issue contract Properties.
type IssueContractProperties struct {
	// REQUIRED; Text describing the issue.
	Description *string `json:"description,omitempty"`

	// REQUIRED; The issue title.
	Title *string `json:"title,omitempty"`

	// REQUIRED; A resource identifier for the user created the issue.
	UserID *string `json:"userId,omitempty"`

	// A resource identifier for the API the issue was created for.
	APIID *string `json:"apiId,omitempty"`

	// Date and time when the issue was created.
	CreatedDate *time.Time `json:"createdDate,omitempty"`

	// Status of the issue.
	State *State `json:"state,omitempty"`
}

// LoggerClientCreateOrUpdateOptions contains the optional parameters for the LoggerClient.CreateOrUpdate method.
type LoggerClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// LoggerClientDeleteOptions contains the optional parameters for the LoggerClient.Delete method.
type LoggerClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// LoggerClientGetEntityTagOptions contains the optional parameters for the LoggerClient.GetEntityTag method.
type LoggerClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// LoggerClientGetOptions contains the optional parameters for the LoggerClient.Get method.
type LoggerClientGetOptions struct {
	// placeholder for future optional parameters
}

// LoggerClientListByServiceOptions contains the optional parameters for the LoggerClient.ListByService method.
type LoggerClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// type eq
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// LoggerClientUpdateOptions contains the optional parameters for the LoggerClient.Update method.
type LoggerClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// LoggerCollection - Paged Logger list representation.
type LoggerCollection struct {
	// Total record count number across all pages.
	Count *int64 `json:"count,omitempty"`

	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Logger values.
	Value []*LoggerContract `json:"value,omitempty"`
}

// LoggerContract - Logger details.
type LoggerContract struct {
	// Logger entity contract properties.
	Properties *LoggerContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// LoggerContractProperties - The Logger entity in API Management represents an event sink that you can use to log API Management
// events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.
type LoggerContractProperties struct {
	// REQUIRED; The name and SendRule connection string of the event hub for azureEventHub logger. Instrumentation key for applicationInsights
	// logger.
	Credentials map[string]*string `json:"credentials,omitempty"`

	// REQUIRED; Logger type.
	LoggerType *LoggerType `json:"loggerType,omitempty"`

	// Logger description.
	Description *string `json:"description,omitempty"`

	// Whether records are buffered in the logger before publishing. Default is assumed to be true.
	IsBuffered *bool `json:"isBuffered,omitempty"`

	// Sampling settings for an ApplicationInsights logger.
	Sampling *LoggerSamplingContract `json:"sampling,omitempty"`
}

// LoggerSamplingContract - Sampling settings contract.
type LoggerSamplingContract struct {
	// Sampling settings entity contract properties.
	Properties *LoggerSamplingProperties `json:"properties,omitempty"`
}

// LoggerSamplingProperties - Sampling settings for an ApplicationInsights logger.
type LoggerSamplingProperties struct {
	// Rate re-evaluation interval in ISO8601 format.
	EvaluationInterval *string `json:"evaluationInterval,omitempty"`

	// Initial sampling rate.
	InitialPercentage *float64 `json:"initialPercentage,omitempty"`

	// Maximum allowed rate of sampling.
	MaxPercentage *float64 `json:"maxPercentage,omitempty"`

	// Target rate of telemetry items per second.
	MaxTelemetryItemsPerSecond *int32 `json:"maxTelemetryItemsPerSecond,omitempty"`

	// Minimum allowed rate of sampling.
	MinPercentage *float64 `json:"minPercentage,omitempty"`

	// Moving average ration assigned to most recent value.
	MovingAverageRatio *float64 `json:"movingAverageRatio,omitempty"`

	// Rate of sampling for fixed-rate sampling.
	Percentage *float64 `json:"percentage,omitempty"`

	// Duration in ISO8601 format after which it's allowed to lower the sampling rate.
	PercentageDecreaseTimeout *string `json:"percentageDecreaseTimeout,omitempty"`

	// Duration in ISO8601 format after which it's allowed to increase the sampling rate.
	PercentageIncreaseTimeout *string `json:"percentageIncreaseTimeout,omitempty"`

	// Sampling type.
	SamplingType *SamplingType `json:"samplingType,omitempty"`
}

// LoggerUpdateContract - Logger update contract.
type LoggerUpdateContract struct {
	// Logger entity update contract properties.
	Properties *LoggerUpdateParameters `json:"properties,omitempty"`
}

// LoggerUpdateParameters - Parameters supplied to the Update Logger operation.
type LoggerUpdateParameters struct {
	// Logger credentials.
	Credentials map[string]*string `json:"credentials,omitempty"`

	// Logger description.
	Description *string `json:"description,omitempty"`

	// Whether records are buffered in the logger before publishing. Default is assumed to be true.
	IsBuffered *bool `json:"isBuffered,omitempty"`

	// Logger type.
	LoggerType *LoggerType `json:"loggerType,omitempty"`
}

// NetworkStatusClientListByLocationOptions contains the optional parameters for the NetworkStatusClient.ListByLocation method.
type NetworkStatusClientListByLocationOptions struct {
	// placeholder for future optional parameters
}

// NetworkStatusClientListByServiceOptions contains the optional parameters for the NetworkStatusClient.ListByService method.
type NetworkStatusClientListByServiceOptions struct {
	// placeholder for future optional parameters
}

// NetworkStatusContract - Network Status details.
type NetworkStatusContract struct {
	// REQUIRED; Gets the list of Connectivity Status to the Resources on which the service depends upon.
	ConnectivityStatus []*ConnectivityStatusContract `json:"connectivityStatus,omitempty"`

	// REQUIRED; Gets the list of DNS servers IPV4 addresses.
	DNSServers []*string `json:"dnsServers,omitempty"`
}

// NotificationClientCreateOrUpdateOptions contains the optional parameters for the NotificationClient.CreateOrUpdate method.
type NotificationClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// NotificationClientGetOptions contains the optional parameters for the NotificationClient.Get method.
type NotificationClientGetOptions struct {
	// placeholder for future optional parameters
}

// NotificationClientListByServiceOptions contains the optional parameters for the NotificationClient.ListByService method.
type NotificationClientListByServiceOptions struct {
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// NotificationCollection - Paged Notification list representation.
type NotificationCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*NotificationContract `json:"value,omitempty"`
}

// NotificationContract - Notification details.
type NotificationContract struct {
	// Notification entity contract properties.
	Properties *NotificationContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// NotificationContractProperties - Notification Contract properties.
type NotificationContractProperties struct {
	// REQUIRED; Title of the Notification.
	Title *string `json:"title,omitempty"`

	// Description of the Notification.
	Description *string `json:"description,omitempty"`

	// Recipient Parameter values.
	Recipients *RecipientsContractProperties `json:"recipients,omitempty"`
}

// NotificationRecipientEmailClientCreateOrUpdateOptions contains the optional parameters for the NotificationRecipientEmailClient.CreateOrUpdate
// method.
type NotificationRecipientEmailClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// NotificationRecipientEmailClientDeleteOptions contains the optional parameters for the NotificationRecipientEmailClient.Delete
// method.
type NotificationRecipientEmailClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// NotificationRecipientEmailClientGetOptions contains the optional parameters for the NotificationRecipientEmailClient.Get
// method.
type NotificationRecipientEmailClientGetOptions struct {
	// placeholder for future optional parameters
}

// NotificationRecipientEmailClientListByNotificationOptions contains the optional parameters for the NotificationRecipientEmailClient.ListByNotification
// method.
type NotificationRecipientEmailClientListByNotificationOptions struct {
	// placeholder for future optional parameters
}

// NotificationRecipientUserClientCreateOrUpdateOptions contains the optional parameters for the NotificationRecipientUserClient.CreateOrUpdate
// method.
type NotificationRecipientUserClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// NotificationRecipientUserClientDeleteOptions contains the optional parameters for the NotificationRecipientUserClient.Delete
// method.
type NotificationRecipientUserClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// NotificationRecipientUserClientGetOptions contains the optional parameters for the NotificationRecipientUserClient.Get
// method.
type NotificationRecipientUserClientGetOptions struct {
	// placeholder for future optional parameters
}

// NotificationRecipientUserClientListByNotificationOptions contains the optional parameters for the NotificationRecipientUserClient.ListByNotification
// method.
type NotificationRecipientUserClientListByNotificationOptions struct {
	// placeholder for future optional parameters
}

// OAuth2AuthenticationSettingsContract - API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContract struct {
	// OAuth authorization server identifier.
	AuthorizationServerID *string `json:"authorizationServerId,omitempty"`

	// operations scope.
	Scope *string `json:"scope,omitempty"`
}

// OpenIDConnectProviderClientCreateOrUpdateOptions contains the optional parameters for the OpenIDConnectProviderClient.CreateOrUpdate
// method.
type OpenIDConnectProviderClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// OpenIDConnectProviderClientDeleteOptions contains the optional parameters for the OpenIDConnectProviderClient.Delete method.
type OpenIDConnectProviderClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// OpenIDConnectProviderClientGetEntityTagOptions contains the optional parameters for the OpenIDConnectProviderClient.GetEntityTag
// method.
type OpenIDConnectProviderClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// OpenIDConnectProviderClientGetOptions contains the optional parameters for the OpenIDConnectProviderClient.Get method.
type OpenIDConnectProviderClientGetOptions struct {
	// placeholder for future optional parameters
}

// OpenIDConnectProviderClientListByServiceOptions contains the optional parameters for the OpenIDConnectProviderClient.ListByService
// method.
type OpenIDConnectProviderClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// OpenIDConnectProviderClientUpdateOptions contains the optional parameters for the OpenIDConnectProviderClient.Update method.
type OpenIDConnectProviderClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// OpenIDConnectProviderCollection - Paged OpenIdProviders list representation.
type OpenIDConnectProviderCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*OpenidConnectProviderContract `json:"value,omitempty"`
}

// OpenidConnectProviderContract - OpenId Connect Provider details.
type OpenidConnectProviderContract struct {
	// OpenId Connect Provider contract properties.
	Properties *OpenidConnectProviderContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// OpenidConnectProviderContractProperties - OpenID Connect Providers Contract.
type OpenidConnectProviderContractProperties struct {
	// REQUIRED; Client ID of developer console which is the client application.
	ClientID *string `json:"clientId,omitempty"`

	// REQUIRED; User-friendly OpenID Connect Provider name.
	DisplayName *string `json:"displayName,omitempty"`

	// REQUIRED; Metadata endpoint URI.
	MetadataEndpoint *string `json:"metadataEndpoint,omitempty"`

	// Client Secret of developer console which is the client application.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// User-friendly description of OpenID Connect Provider.
	Description *string `json:"description,omitempty"`
}

// OpenidConnectProviderUpdateContract - Parameters supplied to the Update OpenID Connect Provider operation.
type OpenidConnectProviderUpdateContract struct {
	// OpenId Connect Provider Update contract properties.
	Properties *OpenidConnectProviderUpdateContractProperties `json:"properties,omitempty"`
}

// OpenidConnectProviderUpdateContractProperties - Parameters supplied to the Update OpenID Connect Provider operation.
type OpenidConnectProviderUpdateContractProperties struct {
	// Client ID of developer console which is the client application.
	ClientID *string `json:"clientId,omitempty"`

	// Client Secret of developer console which is the client application.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// User-friendly description of OpenID Connect Provider.
	Description *string `json:"description,omitempty"`

	// User-friendly OpenID Connect Provider name.
	DisplayName *string `json:"displayName,omitempty"`

	// Metadata endpoint URI.
	MetadataEndpoint *string `json:"metadataEndpoint,omitempty"`
}

// Operation - REST API operation
type Operation struct {
	// The object that describes the operation.
	Display *OperationDisplay `json:"display,omitempty"`

	// Operation name: {provider}/{resource}/{operation}
	Name *string `json:"name,omitempty"`

	// The operation origin.
	Origin *string `json:"origin,omitempty"`

	// The operation properties.
	Properties interface{} `json:"properties,omitempty"`
}

// OperationClientListByTagsOptions contains the optional parameters for the OperationClient.ListByTags method.
type OperationClientListByTagsOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// apiName ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// method ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// urlTemplate ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// OperationCollection - Paged Operation list representation.
type OperationCollection struct {
	// READ-ONLY; Next page link if any.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Page values.
	Value []*OperationContract `json:"value,omitempty" azure:"ro"`
}

// OperationContract - Api Operation details.
type OperationContract struct {
	// Properties of the Operation Contract.
	Properties *OperationContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// OperationContractProperties - Operation Contract Properties
type OperationContractProperties struct {
	// REQUIRED; Operation Name.
	DisplayName *string `json:"displayName,omitempty"`

	// REQUIRED; A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
	Method *string `json:"method,omitempty"`

	// REQUIRED; Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
	URLTemplate *string `json:"urlTemplate,omitempty"`

	// Description of the operation. May include HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// Operation Policies
	Policies *string `json:"policies,omitempty"`

	// An entity containing request details.
	Request *RequestContract `json:"request,omitempty"`

	// Array of Operation responses.
	Responses []*ResponseContract `json:"responses,omitempty"`

	// Collection of URL template parameters.
	TemplateParameters []*ParameterContract `json:"templateParameters,omitempty"`
}

// OperationDisplay - The object that describes the operation.
type OperationDisplay struct {
	// Friendly name of the operation
	Description *string `json:"description,omitempty"`

	// Operation type: read, write, delete, listKeys/action, etc.
	Operation *string `json:"operation,omitempty"`

	// Friendly name of the resource provider
	Provider *string `json:"provider,omitempty"`

	// Resource type on which the operation is performed.
	Resource *string `json:"resource,omitempty"`
}

// OperationEntityBaseContract - Api Operation Entity Base Contract details.
type OperationEntityBaseContract struct {
	// Description of the operation. May include HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// Operation Policies
	Policies *string `json:"policies,omitempty"`

	// An entity containing request details.
	Request *RequestContract `json:"request,omitempty"`

	// Array of Operation responses.
	Responses []*ResponseContract `json:"responses,omitempty"`

	// Collection of URL template parameters.
	TemplateParameters []*ParameterContract `json:"templateParameters,omitempty"`
}

// OperationEntityContract - Operation Entity Contract Properties.
type OperationEntityContract struct {
	// Operation entity contract properties.
	Properties *OperationEntityContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// OperationEntityContractProperties - Operation Entity contract Properties.
type OperationEntityContractProperties struct {
	// READ-ONLY; Api Name.
	APIName *string `json:"apiName,omitempty" azure:"ro"`

	// READ-ONLY; Api Revision.
	APIRevision *string `json:"apiRevision,omitempty" azure:"ro"`

	// READ-ONLY; Api Version.
	APIVersion *string `json:"apiVersion,omitempty" azure:"ro"`

	// READ-ONLY; Operation Description.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; Operation name.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
	Method *string `json:"method,omitempty" azure:"ro"`

	// READ-ONLY; Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
	URLTemplate *string `json:"urlTemplate,omitempty" azure:"ro"`
}

// OperationListResult - Result of the request to list REST API operations. It contains a list of operations and a URL nextLink
// to get the next set of results.
type OperationListResult struct {
	// URL to get the next set of operation list results if there are any.
	NextLink *string `json:"nextLink,omitempty"`

	// List of operations supported by the resource provider.
	Value []*Operation `json:"value,omitempty"`
}

// OperationResultContract - Operation Result.
type OperationResultContract struct {
	// Error Body Contract
	Error *ErrorResponse `json:"error,omitempty"`

	// Operation result identifier.
	ID *string `json:"id,omitempty"`

	// Optional result info.
	ResultInfo *string `json:"resultInfo,omitempty"`

	// Start time of an async operation. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO
	// 8601 standard.
	Started *time.Time `json:"started,omitempty"`

	// Status of an async operation.
	Status *AsyncOperationStatus `json:"status,omitempty"`

	// Last update time of an async operation. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by
	// the ISO 8601 standard.
	Updated *time.Time `json:"updated,omitempty"`

	// READ-ONLY; This property if only provided as part of the TenantConfigurationValidate operation. It contains the log the
	// entities which will be updated/created/deleted as part of the TenantConfigurationDeploy
	// operation.
	ActionLog []*OperationResultLogItemContract `json:"actionLog,omitempty" azure:"ro"`
}

// OperationResultLogItemContract - Log of the entity being created, updated or deleted.
type OperationResultLogItemContract struct {
	// Action like create/update/delete.
	Action *string `json:"action,omitempty"`

	// Identifier of the entity being created/updated/deleted.
	ObjectKey *string `json:"objectKey,omitempty"`

	// The type of entity contract.
	ObjectType *string `json:"objectType,omitempty"`
}

// OperationUpdateContract - Api Operation Update Contract details.
type OperationUpdateContract struct {
	// Properties of the API Operation entity that can be updated.
	Properties *OperationUpdateContractProperties `json:"properties,omitempty"`
}

// OperationUpdateContractProperties - Operation Update Contract Properties.
type OperationUpdateContractProperties struct {
	// Description of the operation. May include HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// Operation Name.
	DisplayName *string `json:"displayName,omitempty"`

	// A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
	Method *string `json:"method,omitempty"`

	// Operation Policies
	Policies *string `json:"policies,omitempty"`

	// An entity containing request details.
	Request *RequestContract `json:"request,omitempty"`

	// Array of Operation responses.
	Responses []*ResponseContract `json:"responses,omitempty"`

	// Collection of URL template parameters.
	TemplateParameters []*ParameterContract `json:"templateParameters,omitempty"`

	// Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
	URLTemplate *string `json:"urlTemplate,omitempty"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// ParameterContract - Operation parameters details.
type ParameterContract struct {
	// REQUIRED; Parameter name.
	Name *string `json:"name,omitempty"`

	// REQUIRED; Parameter type.
	Type *string `json:"type,omitempty"`

	// Default parameter value.
	DefaultValue *string `json:"defaultValue,omitempty"`

	// Parameter description.
	Description *string `json:"description,omitempty"`

	// whether parameter is required or not.
	Required *bool `json:"required,omitempty"`

	// Parameter values.
	Values []*string `json:"values,omitempty"`
}

// PolicyClientCreateOrUpdateOptions contains the optional parameters for the PolicyClient.CreateOrUpdate method.
type PolicyClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PolicyClientDeleteOptions contains the optional parameters for the PolicyClient.Delete method.
type PolicyClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PolicyClientGetOptions contains the optional parameters for the PolicyClient.Get method.
type PolicyClientGetOptions struct {
	// placeholder for future optional parameters
}

// PolicyClientListByServiceOptions contains the optional parameters for the PolicyClient.ListByService method.
type PolicyClientListByServiceOptions struct {
	// Policy scope.
	Scope *PolicyScopeContract
}

// PolicyCollection - The response of the list policy operation.
type PolicyCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Policy Contract value.
	Value []*PolicyContract `json:"value,omitempty"`
}

// PolicyContract - Policy Contract details.
type PolicyContract struct {
	// Properties of the Policy.
	Properties *PolicyContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PolicyContractProperties - Policy contract Properties.
type PolicyContractProperties struct {
	// REQUIRED; Json escaped Xml Encoded contents of the Policy.
	PolicyContent *string `json:"policyContent,omitempty"`
}

// PolicySnippetContract - Policy snippet.
type PolicySnippetContract struct {
	// READ-ONLY; Snippet content.
	Content *string `json:"content,omitempty" azure:"ro"`

	// READ-ONLY; Snippet name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Binary OR value of the Snippet scope.
	Scope *int32 `json:"scope,omitempty" azure:"ro"`

	// READ-ONLY; Snippet toolTip.
	ToolTip *string `json:"toolTip,omitempty" azure:"ro"`
}

// PolicySnippetsClientListByServiceOptions contains the optional parameters for the PolicySnippetsClient.ListByService method.
type PolicySnippetsClientListByServiceOptions struct {
	// Policy scope.
	Scope *PolicyScopeContract
}

// PolicySnippetsCollection - The response of the list policy snippets operation.
type PolicySnippetsCollection struct {
	// Policy snippet value.
	Value []*PolicySnippetContract `json:"value,omitempty"`
}

// PortalDelegationSettings - Delegation settings for a developer portal.
type PortalDelegationSettings struct {
	// Delegation settings contract properties.
	Properties *PortalDelegationSettingsProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PortalDelegationSettingsProperties - Delegation settings contract properties.
type PortalDelegationSettingsProperties struct {
	// Subscriptions delegation settings.
	Subscriptions *SubscriptionsDelegationSettingsProperties `json:"subscriptions,omitempty"`

	// A delegation Url.
	URL *string `json:"url,omitempty"`

	// User registration delegation settings.
	UserRegistration *RegistrationDelegationSettingsProperties `json:"userRegistration,omitempty"`

	// A base64-encoded validation key to validate, that a request is coming from Azure API Management.
	ValidationKey *string `json:"validationKey,omitempty"`
}

// PortalSigninSettingProperties - Sign-in settings contract properties.
type PortalSigninSettingProperties struct {
	// Redirect Anonymous users to the Sign-In page.
	Enabled *bool `json:"enabled,omitempty"`
}

// PortalSigninSettings - Sign-In settings for the Developer Portal.
type PortalSigninSettings struct {
	// Sign-in settings contract properties.
	Properties *PortalSigninSettingProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PortalSignupSettings - Sign-Up settings for a developer portal.
type PortalSignupSettings struct {
	// Sign-up settings contract properties.
	Properties *PortalSignupSettingsProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PortalSignupSettingsProperties - Sign-up settings contract properties.
type PortalSignupSettingsProperties struct {
	// Allow users to sign up on a developer portal.
	Enabled *bool `json:"enabled,omitempty"`

	// Terms of service contract properties.
	TermsOfService *TermsOfServiceProperties `json:"termsOfService,omitempty"`
}

// ProductAPIClientCheckEntityExistsOptions contains the optional parameters for the ProductAPIClient.CheckEntityExists method.
type ProductAPIClientCheckEntityExistsOptions struct {
	// placeholder for future optional parameters
}

// ProductAPIClientCreateOrUpdateOptions contains the optional parameters for the ProductAPIClient.CreateOrUpdate method.
type ProductAPIClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ProductAPIClientDeleteOptions contains the optional parameters for the ProductAPIClient.Delete method.
type ProductAPIClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ProductAPIClientListByProductOptions contains the optional parameters for the ProductAPIClient.ListByProduct method.
type ProductAPIClientListByProductOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// serviceUrl ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// path ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ProductClientCreateOrUpdateOptions contains the optional parameters for the ProductClient.CreateOrUpdate method.
type ProductClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ProductClientDeleteOptions contains the optional parameters for the ProductClient.Delete method.
type ProductClientDeleteOptions struct {
	// Delete existing subscriptions to the product or not.
	DeleteSubscriptions *bool
}

// ProductClientGetEntityTagOptions contains the optional parameters for the ProductClient.GetEntityTag method.
type ProductClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// ProductClientGetOptions contains the optional parameters for the ProductClient.Get method.
type ProductClientGetOptions struct {
	// placeholder for future optional parameters
}

// ProductClientListByServiceOptions contains the optional parameters for the ProductClient.ListByService method.
type ProductClientListByServiceOptions struct {
	// When set to true, the response contains an array of groups that have visibility to the product. The default is false.
	ExpandGroups *bool
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// terms ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// state eq
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ProductClientUpdateOptions contains the optional parameters for the ProductClient.Update method.
type ProductClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ProductCollection - Paged Products list representation.
type ProductCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*ProductContract `json:"value,omitempty"`
}

// ProductContract - Product details.
type ProductContract struct {
	// Product entity contract properties.
	Properties *ProductContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ProductContractProperties - Product profile.
type ProductContractProperties struct {
	// REQUIRED; Product name.
	DisplayName *string `json:"displayName,omitempty"`

	// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers
	// to call the product’s APIs immediately after subscribing. If true,
	// administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present
	// only if subscriptionRequired property is present and has a value of true.
	ApprovalRequired *bool `json:"approvalRequired,omitempty"`

	// Product description. May include HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// whether product is published or not. Published products are discoverable by users of developer portal. Non published products
	// are visible only to administrators. Default state of Product is
	// notPublished.
	State *ProductState `json:"state,omitempty"`

	// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred
	// to as "protected" and a valid subscription key is required for a request to an
	// API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included
	// in the product can be made without a subscription key. If property is omitted
	// when creating a new product it's value is assumed to be true.
	SubscriptionRequired *bool `json:"subscriptionRequired,omitempty"`

	// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited
	// per user subscriptions. Can be present only if subscriptionRequired
	// property is present and has a value of true.
	SubscriptionsLimit *int32 `json:"subscriptionsLimit,omitempty"`

	// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms
	// before they can complete the subscription process.
	Terms *string `json:"terms,omitempty"`
}

// ProductEntityBaseParameters - Product Entity Base Parameters
type ProductEntityBaseParameters struct {
	// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers
	// to call the product’s APIs immediately after subscribing. If true,
	// administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present
	// only if subscriptionRequired property is present and has a value of true.
	ApprovalRequired *bool `json:"approvalRequired,omitempty"`

	// Product description. May include HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// whether product is published or not. Published products are discoverable by users of developer portal. Non published products
	// are visible only to administrators. Default state of Product is
	// notPublished.
	State *ProductState `json:"state,omitempty"`

	// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred
	// to as "protected" and a valid subscription key is required for a request to an
	// API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included
	// in the product can be made without a subscription key. If property is omitted
	// when creating a new product it's value is assumed to be true.
	SubscriptionRequired *bool `json:"subscriptionRequired,omitempty"`

	// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited
	// per user subscriptions. Can be present only if subscriptionRequired
	// property is present and has a value of true.
	SubscriptionsLimit *int32 `json:"subscriptionsLimit,omitempty"`

	// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms
	// before they can complete the subscription process.
	Terms *string `json:"terms,omitempty"`
}

// ProductGroupClientCheckEntityExistsOptions contains the optional parameters for the ProductGroupClient.CheckEntityExists
// method.
type ProductGroupClientCheckEntityExistsOptions struct {
	// placeholder for future optional parameters
}

// ProductGroupClientCreateOrUpdateOptions contains the optional parameters for the ProductGroupClient.CreateOrUpdate method.
type ProductGroupClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ProductGroupClientDeleteOptions contains the optional parameters for the ProductGroupClient.Delete method.
type ProductGroupClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ProductGroupClientListByProductOptions contains the optional parameters for the ProductGroupClient.ListByProduct method.
type ProductGroupClientListByProductOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// type eq, ne N/A
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ProductPolicyClientCreateOrUpdateOptions contains the optional parameters for the ProductPolicyClient.CreateOrUpdate method.
type ProductPolicyClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ProductPolicyClientDeleteOptions contains the optional parameters for the ProductPolicyClient.Delete method.
type ProductPolicyClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ProductPolicyClientGetOptions contains the optional parameters for the ProductPolicyClient.Get method.
type ProductPolicyClientGetOptions struct {
	// placeholder for future optional parameters
}

// ProductPolicyClientListByProductOptions contains the optional parameters for the ProductPolicyClient.ListByProduct method.
type ProductPolicyClientListByProductOptions struct {
	// placeholder for future optional parameters
}

// ProductSubscriptionsClientListOptions contains the optional parameters for the ProductSubscriptionsClient.List method.
type ProductSubscriptionsClientListOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// stateComment ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// userId ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// productId ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// state eq
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ProductUpdateParameters - Product Update parameters.
type ProductUpdateParameters struct {
	// Product entity Update contract properties.
	Properties *ProductUpdateProperties `json:"properties,omitempty"`
}

// ProductUpdateProperties - Parameters supplied to the Update Product operation.
type ProductUpdateProperties struct {
	// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers
	// to call the product’s APIs immediately after subscribing. If true,
	// administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present
	// only if subscriptionRequired property is present and has a value of true.
	ApprovalRequired *bool `json:"approvalRequired,omitempty"`

	// Product description. May include HTML formatting tags.
	Description *string `json:"description,omitempty"`

	// Product name.
	DisplayName *string `json:"displayName,omitempty"`

	// whether product is published or not. Published products are discoverable by users of developer portal. Non published products
	// are visible only to administrators. Default state of Product is
	// notPublished.
	State *ProductState `json:"state,omitempty"`

	// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred
	// to as "protected" and a valid subscription key is required for a request to an
	// API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included
	// in the product can be made without a subscription key. If property is omitted
	// when creating a new product it's value is assumed to be true.
	SubscriptionRequired *bool `json:"subscriptionRequired,omitempty"`

	// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited
	// per user subscriptions. Can be present only if subscriptionRequired
	// property is present and has a value of true.
	SubscriptionsLimit *int32 `json:"subscriptionsLimit,omitempty"`

	// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms
	// before they can complete the subscription process.
	Terms *string `json:"terms,omitempty"`
}

// PropertyClientCreateOrUpdateOptions contains the optional parameters for the PropertyClient.CreateOrUpdate method.
type PropertyClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PropertyClientDeleteOptions contains the optional parameters for the PropertyClient.Delete method.
type PropertyClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PropertyClientGetEntityTagOptions contains the optional parameters for the PropertyClient.GetEntityTag method.
type PropertyClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// PropertyClientGetOptions contains the optional parameters for the PropertyClient.Get method.
type PropertyClientGetOptions struct {
	// placeholder for future optional parameters
}

// PropertyClientListByServiceOptions contains the optional parameters for the PropertyClient.ListByService method.
type PropertyClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// tags ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith, any, all
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// PropertyClientUpdateOptions contains the optional parameters for the PropertyClient.Update method.
type PropertyClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// PropertyCollection - Paged Property list representation.
type PropertyCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*PropertyContract `json:"value,omitempty"`
}

// PropertyContract - Property details.
type PropertyContract struct {
	// Property entity contract properties.
	Properties *PropertyContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PropertyContractProperties - Property Contract properties.
type PropertyContractProperties struct {
	// REQUIRED; Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.
	DisplayName *string `json:"displayName,omitempty"`

	// REQUIRED; Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.
	Value *string `json:"value,omitempty"`

	// Determines whether the value is a secret and should be encrypted or not. Default value is false.
	Secret *bool `json:"secret,omitempty"`

	// Optional tags that when provided can be used to filter the property list.
	Tags []*string `json:"tags,omitempty"`
}

// PropertyEntityBaseParameters - Property Entity Base Parameters set.
type PropertyEntityBaseParameters struct {
	// Determines whether the value is a secret and should be encrypted or not. Default value is false.
	Secret *bool `json:"secret,omitempty"`

	// Optional tags that when provided can be used to filter the property list.
	Tags []*string `json:"tags,omitempty"`
}

// PropertyUpdateParameterProperties - Property Contract properties.
type PropertyUpdateParameterProperties struct {
	// Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.
	DisplayName *string `json:"displayName,omitempty"`

	// Determines whether the value is a secret and should be encrypted or not. Default value is false.
	Secret *bool `json:"secret,omitempty"`

	// Optional tags that when provided can be used to filter the property list.
	Tags []*string `json:"tags,omitempty"`

	// Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.
	Value *string `json:"value,omitempty"`
}

// PropertyUpdateParameters - Property update Parameters.
type PropertyUpdateParameters struct {
	// Property entity Update contract properties.
	Properties *PropertyUpdateParameterProperties `json:"properties,omitempty"`
}

// QuotaByCounterKeysClientListByServiceOptions contains the optional parameters for the QuotaByCounterKeysClient.ListByService
// method.
type QuotaByCounterKeysClientListByServiceOptions struct {
	// placeholder for future optional parameters
}

// QuotaByCounterKeysClientUpdateOptions contains the optional parameters for the QuotaByCounterKeysClient.Update method.
type QuotaByCounterKeysClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// QuotaByPeriodKeysClientGetOptions contains the optional parameters for the QuotaByPeriodKeysClient.Get method.
type QuotaByPeriodKeysClientGetOptions struct {
	// placeholder for future optional parameters
}

// QuotaByPeriodKeysClientUpdateOptions contains the optional parameters for the QuotaByPeriodKeysClient.Update method.
type QuotaByPeriodKeysClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// QuotaCounterCollection - Paged Quota Counter list representation.
type QuotaCounterCollection struct {
	// Total record count number across all pages.
	Count *int64 `json:"count,omitempty"`

	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Quota counter values.
	Value []*QuotaCounterContract `json:"value,omitempty"`
}

// QuotaCounterContract - Quota counter details.
type QuotaCounterContract struct {
	// REQUIRED; The Key value of the Counter. Must not be empty.
	CounterKey *string `json:"counterKey,omitempty"`

	// REQUIRED; The date of the end of Counter Period. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified
	// by the ISO 8601 standard.
	PeriodEndTime *time.Time `json:"periodEndTime,omitempty"`

	// REQUIRED; Identifier of the Period for which the counter was collected. Must not be empty.
	PeriodKey *string `json:"periodKey,omitempty"`

	// REQUIRED; The date of the start of Counter Period. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified
	// by the ISO 8601 standard.
	PeriodStartTime *time.Time `json:"periodStartTime,omitempty"`

	// Quota Value Properties
	Value *QuotaCounterValueContractProperties `json:"Value,omitempty"`
}

// QuotaCounterValueContract - Quota counter value details.
type QuotaCounterValueContract struct {
	// Quota counter Value Properties.
	Value *QuotaCounterValueContractProperties `json:"value,omitempty"`
}

// QuotaCounterValueContractProperties - Quota counter value details.
type QuotaCounterValueContractProperties struct {
	// Number of times Counter was called.
	CallsCount *int32 `json:"callsCount,omitempty"`

	// Data Transferred in KiloBytes.
	KbTransferred *float64 `json:"kbTransferred,omitempty"`
}

// RecipientEmailCollection - Paged Recipient User list representation.
type RecipientEmailCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*RecipientEmailContract `json:"value,omitempty"`
}

// RecipientEmailContract - Recipient Email details.
type RecipientEmailContract struct {
	// Recipient Email contract properties.
	Properties *RecipientEmailContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RecipientEmailContractProperties - Recipient Email Contract Properties.
type RecipientEmailContractProperties struct {
	// User Email subscribed to notification.
	Email *string `json:"email,omitempty"`
}

// RecipientUserCollection - Paged Recipient User list representation.
type RecipientUserCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*RecipientUserContract `json:"value,omitempty"`
}

// RecipientUserContract - Recipient User details.
type RecipientUserContract struct {
	// Recipient User entity contract properties.
	Properties *RecipientUsersContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RecipientUsersContractProperties - Recipient User Contract Properties.
type RecipientUsersContractProperties struct {
	// API Management UserId subscribed to notification.
	UserID *string `json:"userId,omitempty"`
}

// RecipientsContractProperties - Notification Parameter contract.
type RecipientsContractProperties struct {
	// List of Emails subscribed for the notification.
	Emails []*string `json:"emails,omitempty"`

	// List of Users subscribed for the notification.
	Users []*string `json:"users,omitempty"`
}

// RegionContract - Region profile.
type RegionContract struct {
	// whether Region is deleted.
	IsDeleted *bool `json:"isDeleted,omitempty"`

	// whether Region is the master region.
	IsMasterRegion *bool `json:"isMasterRegion,omitempty"`

	// READ-ONLY; Region name.
	Name *string `json:"name,omitempty" azure:"ro"`
}

// RegionListResult - Lists Regions operation response details.
type RegionListResult struct {
	// Total record count number across all pages.
	Count *int64 `json:"count,omitempty"`

	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Lists of Regions.
	Value []*RegionContract `json:"value,omitempty"`
}

// RegionsClientListByServiceOptions contains the optional parameters for the RegionsClient.ListByService method.
type RegionsClientListByServiceOptions struct {
	// placeholder for future optional parameters
}

// RegistrationDelegationSettingsProperties - User registration delegation settings properties.
type RegistrationDelegationSettingsProperties struct {
	// Enable or disable delegation for user registration.
	Enabled *bool `json:"enabled,omitempty"`
}

// ReportCollection - Paged Report records list representation.
type ReportCollection struct {
	// Total record count number across all pages.
	Count *int64 `json:"count,omitempty"`

	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*ReportRecordContract `json:"value,omitempty"`
}

// ReportRecordContract - Report data.
type ReportRecordContract struct {
	// API identifier path. /apis/{apiId}
	APIID *string `json:"apiId,omitempty"`

	// API region identifier.
	APIRegion *string `json:"apiRegion,omitempty"`

	// Average time it took to process request.
	APITimeAvg *float64 `json:"apiTimeAvg,omitempty"`

	// Maximum time it took to process request.
	APITimeMax *float64 `json:"apiTimeMax,omitempty"`

	// Minimum time it took to process request.
	APITimeMin *float64 `json:"apiTimeMin,omitempty"`

	// Bandwidth consumed.
	Bandwidth *int64 `json:"bandwidth,omitempty"`

	// Number of times when content was served from cache policy.
	CacheHitCount *int32 `json:"cacheHitCount,omitempty"`

	// Number of times content was fetched from backend.
	CacheMissCount *int32 `json:"cacheMissCount,omitempty"`

	// Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden
	// and HttpStatusCode.TooManyRequests
	CallCountBlocked *int32 `json:"callCountBlocked,omitempty"`

	// Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and
	// any Code between HttpStatusCode.InternalServerError (500) and 600
	CallCountFailed *int32 `json:"callCountFailed,omitempty"`

	// Number of other calls.
	CallCountOther *int32 `json:"callCountOther,omitempty"`

	// Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect
	CallCountSuccess *int32 `json:"callCountSuccess,omitempty"`

	// Total number of calls.
	CallCountTotal *int32 `json:"callCountTotal,omitempty"`

	// Country to which this record data is related.
	Country *string `json:"country,omitempty"`

	// Length of aggregation period. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601
	// format (http://en.wikipedia.org/wiki/ISO_8601#Durations).
	Interval *string `json:"interval,omitempty"`

	// Name depending on report endpoint specifies product, API, operation or developer name.
	Name *string `json:"name,omitempty"`

	// Operation identifier path. /apis/{apiId}/operations/{operationId}
	OperationID *string `json:"operationId,omitempty"`

	// Country region to which this record data is related.
	Region *string `json:"region,omitempty"`

	// Average time it took to process request on backend.
	ServiceTimeAvg *float64 `json:"serviceTimeAvg,omitempty"`

	// Maximum time it took to process request on backend.
	ServiceTimeMax *float64 `json:"serviceTimeMax,omitempty"`

	// Minimum time it took to process request on backend.
	ServiceTimeMin *float64 `json:"serviceTimeMin,omitempty"`

	// Subscription identifier path. /subscriptions/{subscriptionId}
	SubscriptionID *string `json:"subscriptionId,omitempty"`

	// Start of aggregation period. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601
	// standard.
	Timestamp *time.Time `json:"timestamp,omitempty"`

	// Zip code to which this record data is related.
	Zip *string `json:"zip,omitempty"`

	// READ-ONLY; Product identifier path. /products/{productId}
	ProductID *string `json:"productId,omitempty" azure:"ro"`

	// READ-ONLY; User identifier path. /users/{userId}
	UserID *string `json:"userId,omitempty" azure:"ro"`
}

// ReportsClientListByAPIOptions contains the optional parameters for the ReportsClient.ListByAPI method.
type ReportsClientListByAPIOptions struct {
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ReportsClientListByGeoOptions contains the optional parameters for the ReportsClient.ListByGeo method.
type ReportsClientListByGeoOptions struct {
	// The filter to apply on the operation.
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ReportsClientListByOperationOptions contains the optional parameters for the ReportsClient.ListByOperation method.
type ReportsClientListByOperationOptions struct {
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ReportsClientListByProductOptions contains the optional parameters for the ReportsClient.ListByProduct method.
type ReportsClientListByProductOptions struct {
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ReportsClientListByRequestOptions contains the optional parameters for the ReportsClient.ListByRequest method.
type ReportsClientListByRequestOptions struct {
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ReportsClientListBySubscriptionOptions contains the optional parameters for the ReportsClient.ListBySubscription method.
type ReportsClientListBySubscriptionOptions struct {
	// The filter to apply on the operation.
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ReportsClientListByTimeOptions contains the optional parameters for the ReportsClient.ListByTime method.
type ReportsClientListByTimeOptions struct {
	// The filter to apply on the operation.
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// ReportsClientListByUserOptions contains the optional parameters for the ReportsClient.ListByUser method.
type ReportsClientListByUserOptions struct {
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// RepresentationContract - Operation request/response representation details.
type RepresentationContract struct {
	// REQUIRED; Specifies a registered or custom content type for this representation, e.g. application/xml.
	ContentType *string `json:"contentType,omitempty"`

	// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
	FormParameters []*ParameterContract `json:"formParameters,omitempty"`

	// An example of the representation.
	Sample *string `json:"sample,omitempty"`

	// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	SchemaID *string `json:"schemaId,omitempty"`

	// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded'
	// nor 'multipart/form-data'.
	TypeName *string `json:"typeName,omitempty"`
}

// RequestContract - Operation request details.
type RequestContract struct {
	// Operation request description.
	Description *string `json:"description,omitempty"`

	// Collection of operation request headers.
	Headers []*ParameterContract `json:"headers,omitempty"`

	// Collection of operation request query parameters.
	QueryParameters []*ParameterContract `json:"queryParameters,omitempty"`

	// Collection of operation request representations.
	Representations []*RepresentationContract `json:"representations,omitempty"`
}

// RequestReportCollection - Paged Report records list representation.
type RequestReportCollection struct {
	// Total record count number across all pages.
	Count *int64 `json:"count,omitempty"`

	// Page values.
	Value []*RequestReportRecordContract `json:"value,omitempty"`
}

// RequestReportRecordContract - Request Report data.
type RequestReportRecordContract struct {
	// API identifier path. /apis/{apiId}
	APIID *string `json:"apiId,omitempty"`

	// Azure region where the gateway that processed this request is located.
	APIRegion *string `json:"apiRegion,omitempty"`

	// The total time it took to process this request.
	APITime *float64 `json:"apiTime,omitempty"`

	// The HTTP status code received by the gateway as a result of forwarding this request to the backend.
	BackendResponseCode *string `json:"backendResponseCode,omitempty"`

	// Specifies if response cache was involved in generating the response. If the value is none, the cache was not used. If the
	// value is hit, cached response was returned. If the value is miss, the cache
	// was used but lookup resulted in a miss and request was fulfilled by the backend.
	Cache *string `json:"cache,omitempty"`

	// The client IP address associated with this request.
	IPAddress *string `json:"ipAddress,omitempty"`

	// The HTTP method associated with this request..
	Method *string `json:"method,omitempty"`

	// Operation identifier path. /apis/{apiId}/operations/{operationId}
	OperationID *string `json:"operationId,omitempty"`

	// Request Identifier.
	RequestID *string `json:"requestId,omitempty"`

	// The size of this request..
	RequestSize *int32 `json:"requestSize,omitempty"`

	// The HTTP status code returned by the gateway.
	ResponseCode *int32 `json:"responseCode,omitempty"`

	// The size of the response returned by the gateway.
	ResponseSize *int32 `json:"responseSize,omitempty"`

	// he time it took to forward this request to the backend and get the response back.
	ServiceTime *float64 `json:"serviceTime,omitempty"`

	// Subscription identifier path. /subscriptions/{subscriptionId}
	SubscriptionID *string `json:"subscriptionId,omitempty"`

	// The date and time when this request was received by the gateway in ISO 8601 format.
	Timestamp *time.Time `json:"timestamp,omitempty"`

	// The full URL associated with this request.
	URL *string `json:"url,omitempty"`

	// READ-ONLY; Product identifier path. /products/{productId}
	ProductID *string `json:"productId,omitempty" azure:"ro"`

	// READ-ONLY; User identifier path. /users/{userId}
	UserID *string `json:"userId,omitempty" azure:"ro"`
}

// Resource - The Resource definition.
type Resource struct {
	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ResponseContract - Operation response details.
type ResponseContract struct {
	// REQUIRED; Operation response HTTP status code.
	StatusCode *int32 `json:"statusCode,omitempty"`

	// Operation response description.
	Description *string `json:"description,omitempty"`

	// Collection of operation response headers.
	Headers []*ParameterContract `json:"headers,omitempty"`

	// Collection of operation response representations.
	Representations []*RepresentationContract `json:"representations,omitempty"`
}

// SaveConfigurationParameter - Parameters supplied to the Save Tenant Configuration operation.
type SaveConfigurationParameter struct {
	// REQUIRED; The name of the Git branch in which to commit the current configuration snapshot.
	Branch *string `json:"branch,omitempty"`

	// The value if true, the current configuration database is committed to the Git repository, even if the Git repository has
	// newer changes that would be overwritten.
	Force *bool `json:"force,omitempty"`
}

// SchemaCollection - The response of the list schema operation.
type SchemaCollection struct {
	// READ-ONLY; Next page link if any.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Api Schema Contract value.
	Value []*SchemaContract `json:"value,omitempty" azure:"ro"`
}

// SchemaContract - Schema Contract details.
type SchemaContract struct {
	// Properties of the Schema.
	Properties *SchemaContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SchemaContractProperties - Schema contract Properties.
type SchemaContractProperties struct {
	// REQUIRED; Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema
	// document (e.g. application/json, application/xml).
	ContentType *string `json:"contentType,omitempty"`

	// Properties of the Schema Document.
	Document *SchemaDocumentProperties `json:"document,omitempty"`
}

// SchemaDocumentProperties - Schema Document Properties.
type SchemaDocumentProperties struct {
	// Json escaped string defining the document representing the Schema.
	Value *string `json:"value,omitempty"`
}

// ServiceApplyNetworkConfigurationParameters - Parameter supplied to the Apply Network configuration operation.
type ServiceApplyNetworkConfigurationParameters struct {
	// Location of the Api Management service to update for a multi-region service. For a service deployed in a single region,
	// this parameter is not required.
	Location *string `json:"location,omitempty"`
}

// ServiceBackupRestoreParameters - Parameters supplied to the Backup/Restore of an API Management service operation.
type ServiceBackupRestoreParameters struct {
	// REQUIRED; Azure Cloud Storage account (used to place/retrieve the backup) access key.
	AccessKey *string `json:"accessKey,omitempty"`

	// REQUIRED; The name of the backup file to create.
	BackupName *string `json:"backupName,omitempty"`

	// REQUIRED; Azure Cloud Storage blob container name used to place/retrieve the backup.
	ContainerName *string `json:"containerName,omitempty"`

	// REQUIRED; Azure Cloud Storage account (used to place/retrieve the backup) name.
	StorageAccount *string `json:"storageAccount,omitempty"`
}

// ServiceBaseProperties - Base Properties of an API Management service resource description.
type ServiceBaseProperties struct {
	// Additional datacenter locations of the API Management service.
	AdditionalLocations []*AdditionalLocation `json:"additionalLocations,omitempty"`

	// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed
	// is 10.
	Certificates []*CertificateConfiguration `json:"certificates,omitempty"`

	// Custom properties of the API Management service. Setting Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168
	// will disable the cipher TLSRSAWITH3DESEDECBCSHA for all TLS(1.0, 1.1
	// and 1.2). Setting Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11 can be used to disable just TLS
	// 1.1 and setting
	// Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10 can be used to disable TLS 1.0 on an API Management
	// service.
	CustomProperties map[string]*string `json:"customProperties,omitempty"`

	// Custom hostname configuration of the API Management service.
	HostnameConfigurations []*HostnameConfiguration `json:"hostnameConfigurations,omitempty"`

	// Email address from which the notification will be sent.
	NotificationSenderEmail *string `json:"notificationSenderEmail,omitempty"`

	// Virtual network configuration of the API Management service.
	VirtualNetworkConfiguration *VirtualNetworkConfiguration `json:"virtualNetworkConfiguration,omitempty"`

	// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management
	// service is not part of any Virtual Network, External means the API Management
	// deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management
	// deployment is setup inside a Virtual Network having an Intranet Facing Endpoint
	// only.
	VirtualNetworkType *VirtualNetworkType `json:"virtualNetworkType,omitempty"`

	// READ-ONLY; Creation UTC date of the API Management service.The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
	// as specified by the ISO 8601 standard.
	CreatedAtUTC *time.Time `json:"createdAtUtc,omitempty" azure:"ro"`

	// READ-ONLY; Gateway URL of the API Management service in the Default Region.
	GatewayRegionalURL *string `json:"gatewayRegionalUrl,omitempty" azure:"ro"`

	// READ-ONLY; Gateway URL of the API Management service.
	GatewayURL *string `json:"gatewayUrl,omitempty" azure:"ro"`

	// READ-ONLY; Management API endpoint URL of the API Management service.
	ManagementAPIURL *string `json:"managementApiUrl,omitempty" azure:"ro"`

	// READ-ONLY; Publisher portal endpoint Url of the API Management service.
	PortalURL *string `json:"portalUrl,omitempty" azure:"ro"`

	// READ-ONLY; The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; SCM endpoint URL of the API Management service.
	ScmURL *string `json:"scmUrl,omitempty" azure:"ro"`

	// READ-ONLY; Static IP addresses of the API Management service virtual machines. Available only for Standard and Premium
	// SKU.
	StaticIPs []*string `json:"staticIps,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning state of the API Management service, which is targeted by the long running operation started
	// on the service.
	TargetProvisioningState *string `json:"targetProvisioningState,omitempty" azure:"ro"`
}

// ServiceCheckNameAvailabilityParameters - Parameters supplied to the CheckNameAvailability operation.
type ServiceCheckNameAvailabilityParameters struct {
	// REQUIRED; The name to check for availability.
	Name *string `json:"name,omitempty"`
}

// ServiceClientBeginApplyNetworkConfigurationUpdatesOptions contains the optional parameters for the ServiceClient.BeginApplyNetworkConfigurationUpdates
// method.
type ServiceClientBeginApplyNetworkConfigurationUpdatesOptions struct {
	// Parameters supplied to the Apply Network Configuration operation. If the parameters are empty, all the regions in which
	// the Api Management service is deployed will be updated sequentially without
	// incurring downtime in the region.
	Parameters *ServiceApplyNetworkConfigurationParameters
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceClientBeginBackupOptions contains the optional parameters for the ServiceClient.BeginBackup method.
type ServiceClientBeginBackupOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceClientBeginCreateOrUpdateOptions contains the optional parameters for the ServiceClient.BeginCreateOrUpdate method.
type ServiceClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceClientBeginRestoreOptions contains the optional parameters for the ServiceClient.BeginRestore method.
type ServiceClientBeginRestoreOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceClientBeginUpdateHostnameOptions contains the optional parameters for the ServiceClient.BeginUpdateHostname method.
type ServiceClientBeginUpdateHostnameOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceClientBeginUpdateOptions contains the optional parameters for the ServiceClient.BeginUpdate method.
type ServiceClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceClientCheckNameAvailabilityOptions contains the optional parameters for the ServiceClient.CheckNameAvailability
// method.
type ServiceClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// ServiceClientDeleteOptions contains the optional parameters for the ServiceClient.Delete method.
type ServiceClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ServiceClientGetOptions contains the optional parameters for the ServiceClient.Get method.
type ServiceClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServiceClientGetSsoTokenOptions contains the optional parameters for the ServiceClient.GetSsoToken method.
type ServiceClientGetSsoTokenOptions struct {
	// placeholder for future optional parameters
}

// ServiceClientListByResourceGroupOptions contains the optional parameters for the ServiceClient.ListByResourceGroup method.
type ServiceClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ServiceClientListOptions contains the optional parameters for the ServiceClient.List method.
type ServiceClientListOptions struct {
	// placeholder for future optional parameters
}

// ServiceClientUploadCertificateOptions contains the optional parameters for the ServiceClient.UploadCertificate method.
type ServiceClientUploadCertificateOptions struct {
	// placeholder for future optional parameters
}

// ServiceGetSsoTokenResult - The response of the GetSsoToken operation.
type ServiceGetSsoTokenResult struct {
	// Redirect URL to the Publisher Portal containing the SSO token.
	RedirectURI *string `json:"redirectUri,omitempty"`
}

// ServiceIdentity - Identity properties of the Api Management service resource.
type ServiceIdentity struct {
	// REQUIRED; The identity type. Currently the only supported type is 'SystemAssigned'.
	Type *ApimIdentityType `json:"type,omitempty"`

	// READ-ONLY; The principal id of the identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The client tenant id of the identity.
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

// ServiceListResult - The response of the List API Management services operation.
type ServiceListResult struct {
	// REQUIRED; Result of the List API Management services operation.
	Value []*ServiceResource `json:"value,omitempty"`

	// Link to the next set of results. Not empty if Value contains incomplete list of API Management services.
	NextLink *string `json:"nextLink,omitempty"`
}

// ServiceNameAvailabilityResult - Response of the CheckNameAvailability operation.
type ServiceNameAvailabilityResult struct {
	// Invalid indicates the name provided does not match the resource provider’s naming requirements (incorrect length, unsupported
	// characters, etc.) AlreadyExists indicates that the name is already in use
	// and is therefore unavailable.
	Reason *NameAvailabilityReason `json:"reason,omitempty"`

	// READ-ONLY; If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource
	// naming requirements so that the user can select a valid name. If reason == AlreadyExists,
	// explain that is already in use, and direct them to select a different name.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; True if the name is available and can be used to create a new API Management service; otherwise false.
	NameAvailable *bool `json:"nameAvailable,omitempty" azure:"ro"`
}

// ServiceProperties - Properties of an API Management service resource description.
type ServiceProperties struct {
	// REQUIRED; Publisher email.
	PublisherEmail *string `json:"publisherEmail,omitempty"`

	// REQUIRED; Publisher name.
	PublisherName *string `json:"publisherName,omitempty"`

	// Additional datacenter locations of the API Management service.
	AdditionalLocations []*AdditionalLocation `json:"additionalLocations,omitempty"`

	// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed
	// is 10.
	Certificates []*CertificateConfiguration `json:"certificates,omitempty"`

	// Custom properties of the API Management service. Setting Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168
	// will disable the cipher TLSRSAWITH3DESEDECBCSHA for all TLS(1.0, 1.1
	// and 1.2). Setting Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11 can be used to disable just TLS
	// 1.1 and setting
	// Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10 can be used to disable TLS 1.0 on an API Management
	// service.
	CustomProperties map[string]*string `json:"customProperties,omitempty"`

	// Custom hostname configuration of the API Management service.
	HostnameConfigurations []*HostnameConfiguration `json:"hostnameConfigurations,omitempty"`

	// Email address from which the notification will be sent.
	NotificationSenderEmail *string `json:"notificationSenderEmail,omitempty"`

	// Virtual network configuration of the API Management service.
	VirtualNetworkConfiguration *VirtualNetworkConfiguration `json:"virtualNetworkConfiguration,omitempty"`

	// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management
	// service is not part of any Virtual Network, External means the API Management
	// deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management
	// deployment is setup inside a Virtual Network having an Intranet Facing Endpoint
	// only.
	VirtualNetworkType *VirtualNetworkType `json:"virtualNetworkType,omitempty"`

	// READ-ONLY; Creation UTC date of the API Management service.The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
	// as specified by the ISO 8601 standard.
	CreatedAtUTC *time.Time `json:"createdAtUtc,omitempty" azure:"ro"`

	// READ-ONLY; Gateway URL of the API Management service in the Default Region.
	GatewayRegionalURL *string `json:"gatewayRegionalUrl,omitempty" azure:"ro"`

	// READ-ONLY; Gateway URL of the API Management service.
	GatewayURL *string `json:"gatewayUrl,omitempty" azure:"ro"`

	// READ-ONLY; Management API endpoint URL of the API Management service.
	ManagementAPIURL *string `json:"managementApiUrl,omitempty" azure:"ro"`

	// READ-ONLY; Publisher portal endpoint Url of the API Management service.
	PortalURL *string `json:"portalUrl,omitempty" azure:"ro"`

	// READ-ONLY; The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; SCM endpoint URL of the API Management service.
	ScmURL *string `json:"scmUrl,omitempty" azure:"ro"`

	// READ-ONLY; Static IP addresses of the API Management service virtual machines. Available only for Standard and Premium
	// SKU.
	StaticIPs []*string `json:"staticIps,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning state of the API Management service, which is targeted by the long running operation started
	// on the service.
	TargetProvisioningState *string `json:"targetProvisioningState,omitempty" azure:"ro"`
}

// ServiceResource - A single API Management service resource in List or Get response.
type ServiceResource struct {
	// REQUIRED; Resource location.
	Location *string `json:"location,omitempty"`

	// REQUIRED; Properties of the API Management service.
	Properties *ServiceProperties `json:"properties,omitempty"`

	// REQUIRED; SKU properties of the API Management service.
	SKU *ServiceSKUProperties `json:"sku,omitempty"`

	// Managed service identity of the Api Management service.
	Identity *ServiceIdentity `json:"identity,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; ETag of the resource.
	Etag *string `json:"etag,omitempty" azure:"ro"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource is set to Microsoft.ApiManagement.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ServiceSKUProperties - API Management service resource SKU properties.
type ServiceSKUProperties struct {
	// REQUIRED; Name of the Sku.
	Name *SKUType `json:"name,omitempty"`

	// Capacity of the SKU (number of deployed units of the SKU). The default value is 1.
	Capacity *int32 `json:"capacity,omitempty"`
}

// ServiceUpdateHostnameParameters - Parameters supplied to the UpdateHostname operation.
type ServiceUpdateHostnameParameters struct {
	// Hostnames types to delete.
	Delete []*HostnameType `json:"delete,omitempty"`

	// Hostnames to create or update.
	Update []*HostnameConfigurationOld `json:"update,omitempty"`
}

// ServiceUpdateParameters - Parameter supplied to Update Api Management Service.
type ServiceUpdateParameters struct {
	// Managed service identity of the Api Management service.
	Identity *ServiceIdentity `json:"identity,omitempty"`

	// Properties of the API Management service.
	Properties *ServiceUpdateProperties `json:"properties,omitempty"`

	// SKU properties of the API Management service.
	SKU *ServiceSKUProperties `json:"sku,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; ETag of the resource.
	Etag *string `json:"etag,omitempty" azure:"ro"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource is set to Microsoft.ApiManagement.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ServiceUpdateProperties - Properties of an API Management service resource description.
type ServiceUpdateProperties struct {
	// Additional datacenter locations of the API Management service.
	AdditionalLocations []*AdditionalLocation `json:"additionalLocations,omitempty"`

	// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed
	// is 10.
	Certificates []*CertificateConfiguration `json:"certificates,omitempty"`

	// Custom properties of the API Management service. Setting Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168
	// will disable the cipher TLSRSAWITH3DESEDECBCSHA for all TLS(1.0, 1.1
	// and 1.2). Setting Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11 can be used to disable just TLS
	// 1.1 and setting
	// Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10 can be used to disable TLS 1.0 on an API Management
	// service.
	CustomProperties map[string]*string `json:"customProperties,omitempty"`

	// Custom hostname configuration of the API Management service.
	HostnameConfigurations []*HostnameConfiguration `json:"hostnameConfigurations,omitempty"`

	// Email address from which the notification will be sent.
	NotificationSenderEmail *string `json:"notificationSenderEmail,omitempty"`

	// Publisher email.
	PublisherEmail *string `json:"publisherEmail,omitempty"`

	// Publisher name.
	PublisherName *string `json:"publisherName,omitempty"`

	// Virtual network configuration of the API Management service.
	VirtualNetworkConfiguration *VirtualNetworkConfiguration `json:"virtualNetworkConfiguration,omitempty"`

	// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management
	// service is not part of any Virtual Network, External means the API Management
	// deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management
	// deployment is setup inside a Virtual Network having an Intranet Facing Endpoint
	// only.
	VirtualNetworkType *VirtualNetworkType `json:"virtualNetworkType,omitempty"`

	// READ-ONLY; Creation UTC date of the API Management service.The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
	// as specified by the ISO 8601 standard.
	CreatedAtUTC *time.Time `json:"createdAtUtc,omitempty" azure:"ro"`

	// READ-ONLY; Gateway URL of the API Management service in the Default Region.
	GatewayRegionalURL *string `json:"gatewayRegionalUrl,omitempty" azure:"ro"`

	// READ-ONLY; Gateway URL of the API Management service.
	GatewayURL *string `json:"gatewayUrl,omitempty" azure:"ro"`

	// READ-ONLY; Management API endpoint URL of the API Management service.
	ManagementAPIURL *string `json:"managementApiUrl,omitempty" azure:"ro"`

	// READ-ONLY; Publisher portal endpoint Url of the API Management service.
	PortalURL *string `json:"portalUrl,omitempty" azure:"ro"`

	// READ-ONLY; The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; SCM endpoint URL of the API Management service.
	ScmURL *string `json:"scmUrl,omitempty" azure:"ro"`

	// READ-ONLY; Static IP addresses of the API Management service virtual machines. Available only for Standard and Premium
	// SKU.
	StaticIPs []*string `json:"staticIps,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning state of the API Management service, which is targeted by the long running operation started
	// on the service.
	TargetProvisioningState *string `json:"targetProvisioningState,omitempty" azure:"ro"`
}

// ServiceUploadCertificateParameters - Parameters supplied to the Upload SSL certificate for an API Management service operation.
type ServiceUploadCertificateParameters struct {
	// REQUIRED; Base64 Encoded certificate.
	Certificate *string `json:"certificate,omitempty"`

	// REQUIRED; Certificate password.
	CertificatePassword *string `json:"certificate_password,omitempty"`

	// REQUIRED; Hostname type.
	Type *HostnameType `json:"type,omitempty"`
}

// SignInSettingsClientCreateOrUpdateOptions contains the optional parameters for the SignInSettingsClient.CreateOrUpdate
// method.
type SignInSettingsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SignInSettingsClientGetOptions contains the optional parameters for the SignInSettingsClient.Get method.
type SignInSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// SignInSettingsClientHeadOptions contains the optional parameters for the SignInSettingsClient.Head method.
type SignInSettingsClientHeadOptions struct {
	// placeholder for future optional parameters
}

// SignInSettingsClientUpdateOptions contains the optional parameters for the SignInSettingsClient.Update method.
type SignInSettingsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SignUpSettingsClientCreateOrUpdateOptions contains the optional parameters for the SignUpSettingsClient.CreateOrUpdate
// method.
type SignUpSettingsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SignUpSettingsClientGetOptions contains the optional parameters for the SignUpSettingsClient.Get method.
type SignUpSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// SignUpSettingsClientHeadOptions contains the optional parameters for the SignUpSettingsClient.Head method.
type SignUpSettingsClientHeadOptions struct {
	// placeholder for future optional parameters
}

// SignUpSettingsClientUpdateOptions contains the optional parameters for the SignUpSettingsClient.Update method.
type SignUpSettingsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionClientCreateOrUpdateOptions contains the optional parameters for the SubscriptionClient.CreateOrUpdate method.
type SubscriptionClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionClientDeleteOptions contains the optional parameters for the SubscriptionClient.Delete method.
type SubscriptionClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionClientGetEntityTagOptions contains the optional parameters for the SubscriptionClient.GetEntityTag method.
type SubscriptionClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionClientGetOptions contains the optional parameters for the SubscriptionClient.Get method.
type SubscriptionClientGetOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionClientListOptions contains the optional parameters for the SubscriptionClient.List method.
type SubscriptionClientListOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// stateComment ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// userId ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// productId ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// state eq
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// SubscriptionClientRegeneratePrimaryKeyOptions contains the optional parameters for the SubscriptionClient.RegeneratePrimaryKey
// method.
type SubscriptionClientRegeneratePrimaryKeyOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionClientRegenerateSecondaryKeyOptions contains the optional parameters for the SubscriptionClient.RegenerateSecondaryKey
// method.
type SubscriptionClientRegenerateSecondaryKeyOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionClientUpdateOptions contains the optional parameters for the SubscriptionClient.Update method.
type SubscriptionClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionCollection - Paged Subscriptions list representation.
type SubscriptionCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*SubscriptionContract `json:"value,omitempty"`
}

// SubscriptionContract - Subscription details.
type SubscriptionContract struct {
	// Subscription contract properties.
	Properties *SubscriptionContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SubscriptionContractProperties - Subscription details.
type SubscriptionContractProperties struct {
	// REQUIRED; Subscription primary key.
	PrimaryKey *string `json:"primaryKey,omitempty"`

	// REQUIRED; The product resource identifier of the subscribed product. The value is a valid relative URL in the format of
	// /products/{productId} where {productId} is a product identifier.
	ProductID *string `json:"productId,omitempty"`

	// REQUIRED; Subscription secondary key.
	SecondaryKey *string `json:"secondaryKey,omitempty"`

	// REQUIRED; Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription
	// is blocked, and the subscriber cannot call any APIs of the product, * submitted – the
	// subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription
	// request has been denied by an administrator, * cancelled – the
	// subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration
	// date and was deactivated.
	State *SubscriptionState `json:"state,omitempty"`

	// REQUIRED; The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{uid}
	// where {uid} is a user identifier.
	UserID *string `json:"userId,omitempty"`

	// The name of the subscription, or null if the subscription has no name.
	DisplayName *string `json:"displayName,omitempty"`

	// Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically
	// cancelled. The subscription lifecycle can be managed by using the
	// state property. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
	EndDate *time.Time `json:"endDate,omitempty"`

	// Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired.
	// The subscription lifecycle can be managed by using the state property. The date
	// conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`

	// Upcoming subscription expiration notification date. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as
	// specified by the ISO 8601 standard.
	NotificationDate *time.Time `json:"notificationDate,omitempty"`

	// Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated.
	// The subscription lifecycle can be managed by using the state property. The
	// date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
	StartDate *time.Time `json:"startDate,omitempty"`

	// Optional subscription comment added by an administrator.
	StateComment *string `json:"stateComment,omitempty"`

	// READ-ONLY; Subscription creation date. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by
	// the ISO 8601 standard.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`
}

// SubscriptionCreateParameterProperties - Parameters supplied to the Create subscription operation.
type SubscriptionCreateParameterProperties struct {
	// REQUIRED; Subscription name.
	DisplayName *string `json:"displayName,omitempty"`

	// REQUIRED; Product (product id path) for which subscription is being created in form /products/{productId}
	ProductID *string `json:"productId,omitempty"`

	// REQUIRED; User (user id path) for whom subscription is being created in form /users/{uid}
	UserID *string `json:"userId,omitempty"`

	// Primary subscription key. If not specified during request key will be generated automatically.
	PrimaryKey *string `json:"primaryKey,omitempty"`

	// Secondary subscription key. If not specified during request key will be generated automatically.
	SecondaryKey *string `json:"secondaryKey,omitempty"`

	// Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are
	// * active – the subscription is active, * suspended – the subscription is
	// blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by
	// the developer, but has not yet been approved or rejected, * rejected – the
	// subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer
	// or administrator, * expired – the subscription reached its expiration date
	// and was deactivated.
	State *SubscriptionState `json:"state,omitempty"`
}

// SubscriptionCreateParameters - Subscription create details.
type SubscriptionCreateParameters struct {
	// Subscription contract properties.
	Properties *SubscriptionCreateParameterProperties `json:"properties,omitempty"`
}

// SubscriptionKeyParameterNamesContract - Subscription key parameter names details.
type SubscriptionKeyParameterNamesContract struct {
	// Subscription key header name.
	Header *string `json:"header,omitempty"`

	// Subscription key query string parameter name.
	Query *string `json:"query,omitempty"`
}

// SubscriptionUpdateParameterProperties - Parameters supplied to the Update subscription operation.
type SubscriptionUpdateParameterProperties struct {
	// Subscription name.
	DisplayName *string `json:"displayName,omitempty"`

	// Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired.
	// The subscription lifecycle can be managed by using the state property. The date
	// conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`

	// Primary subscription key.
	PrimaryKey *string `json:"primaryKey,omitempty"`

	// Product identifier path: /products/{productId}
	ProductID *string `json:"productId,omitempty"`

	// Secondary subscription key.
	SecondaryKey *string `json:"secondaryKey,omitempty"`

	// Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked,
	// and the subscriber cannot call any APIs of the product, * submitted – the
	// subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription
	// request has been denied by an administrator, * cancelled – the
	// subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration
	// date and was deactivated.
	State *SubscriptionState `json:"state,omitempty"`

	// Comments describing subscription state change by the administrator.
	StateComment *string `json:"stateComment,omitempty"`

	// User identifier path: /users/{uid}
	UserID *string `json:"userId,omitempty"`
}

// SubscriptionUpdateParameters - Subscription update details.
type SubscriptionUpdateParameters struct {
	// Subscription Update contract properties.
	Properties *SubscriptionUpdateParameterProperties `json:"properties,omitempty"`
}

// SubscriptionsDelegationSettingsProperties - Subscriptions delegation settings properties.
type SubscriptionsDelegationSettingsProperties struct {
	// Enable or disable delegation for subscriptions.
	Enabled *bool `json:"enabled,omitempty"`
}

// TagClientAssignToAPIOptions contains the optional parameters for the TagClient.AssignToAPI method.
type TagClientAssignToAPIOptions struct {
	// The entity state (Etag) version of the Tag to update. A value of "*" can be used for If-Match to unconditionally apply
	// the operation.
	IfMatch *string
}

// TagClientAssignToOperationOptions contains the optional parameters for the TagClient.AssignToOperation method.
type TagClientAssignToOperationOptions struct {
	// The entity state (Etag) version of the Tag to update. A value of "*" can be used for If-Match to unconditionally apply
	// the operation.
	IfMatch *string
}

// TagClientAssignToProductOptions contains the optional parameters for the TagClient.AssignToProduct method.
type TagClientAssignToProductOptions struct {
	// The entity state (Etag) version of the Tag to update. A value of "*" can be used for If-Match to unconditionally apply
	// the operation.
	IfMatch *string
}

// TagClientCreateOrUpdateOptions contains the optional parameters for the TagClient.CreateOrUpdate method.
type TagClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// TagClientDeleteOptions contains the optional parameters for the TagClient.Delete method.
type TagClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// TagClientDetachFromAPIOptions contains the optional parameters for the TagClient.DetachFromAPI method.
type TagClientDetachFromAPIOptions struct {
	// placeholder for future optional parameters
}

// TagClientDetachFromOperationOptions contains the optional parameters for the TagClient.DetachFromOperation method.
type TagClientDetachFromOperationOptions struct {
	// placeholder for future optional parameters
}

// TagClientDetachFromProductOptions contains the optional parameters for the TagClient.DetachFromProduct method.
type TagClientDetachFromProductOptions struct {
	// placeholder for future optional parameters
}

// TagClientGetByAPIOptions contains the optional parameters for the TagClient.GetByAPI method.
type TagClientGetByAPIOptions struct {
	// placeholder for future optional parameters
}

// TagClientGetByOperationOptions contains the optional parameters for the TagClient.GetByOperation method.
type TagClientGetByOperationOptions struct {
	// placeholder for future optional parameters
}

// TagClientGetByProductOptions contains the optional parameters for the TagClient.GetByProduct method.
type TagClientGetByProductOptions struct {
	// placeholder for future optional parameters
}

// TagClientGetEntityStateByAPIOptions contains the optional parameters for the TagClient.GetEntityStateByAPI method.
type TagClientGetEntityStateByAPIOptions struct {
	// placeholder for future optional parameters
}

// TagClientGetEntityStateByOperationOptions contains the optional parameters for the TagClient.GetEntityStateByOperation
// method.
type TagClientGetEntityStateByOperationOptions struct {
	// placeholder for future optional parameters
}

// TagClientGetEntityStateByProductOptions contains the optional parameters for the TagClient.GetEntityStateByProduct method.
type TagClientGetEntityStateByProductOptions struct {
	// placeholder for future optional parameters
}

// TagClientGetEntityStateOptions contains the optional parameters for the TagClient.GetEntityState method.
type TagClientGetEntityStateOptions struct {
	// placeholder for future optional parameters
}

// TagClientGetOptions contains the optional parameters for the TagClient.Get method.
type TagClientGetOptions struct {
	// placeholder for future optional parameters
}

// TagClientListByAPIOptions contains the optional parameters for the TagClient.ListByAPI method.
type TagClientListByAPIOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// TagClientListByOperationOptions contains the optional parameters for the TagClient.ListByOperation method.
type TagClientListByOperationOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// method ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// urlTemplate ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// TagClientListByProductOptions contains the optional parameters for the TagClient.ListByProduct method.
type TagClientListByProductOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// TagClientListByServiceOptions contains the optional parameters for the TagClient.ListByService method.
type TagClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// TagClientUpdateOptions contains the optional parameters for the TagClient.Update method.
type TagClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// TagCollection - Paged Tag list representation.
type TagCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*TagContract `json:"value,omitempty"`
}

// TagContract - Tag Contract details.
type TagContract struct {
	// Tag entity contract properties.
	Properties *TagContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// TagContractProperties - Tag contract Properties.
type TagContractProperties struct {
	// REQUIRED; Tag name.
	DisplayName *string `json:"displayName,omitempty"`
}

// TagCreateUpdateParameters - Parameters supplied to Create/Update Tag operations.
type TagCreateUpdateParameters struct {
	// Properties supplied to Create Tag operation.
	Properties *TagContractProperties `json:"properties,omitempty"`
}

// TagDescriptionBaseProperties - Parameters supplied to the Create TagDescription operation.
type TagDescriptionBaseProperties struct {
	// Description of the Tag.
	Description *string `json:"description,omitempty"`

	// Description of the external resources describing the tag.
	ExternalDocsDescription *string `json:"externalDocsDescription,omitempty"`

	// Absolute URL of external resources describing the tag.
	ExternalDocsURL *string `json:"externalDocsUrl,omitempty"`
}

// TagDescriptionClientCreateOrUpdateOptions contains the optional parameters for the TagDescriptionClient.CreateOrUpdate
// method.
type TagDescriptionClientCreateOrUpdateOptions struct {
	// The entity state (Etag) version of the Tag to update. A value of "*" can be used for If-Match to unconditionally apply
	// the operation.
	IfMatch *string
}

// TagDescriptionClientDeleteOptions contains the optional parameters for the TagDescriptionClient.Delete method.
type TagDescriptionClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// TagDescriptionClientGetEntityStateOptions contains the optional parameters for the TagDescriptionClient.GetEntityState
// method.
type TagDescriptionClientGetEntityStateOptions struct {
	// placeholder for future optional parameters
}

// TagDescriptionClientGetOptions contains the optional parameters for the TagDescriptionClient.Get method.
type TagDescriptionClientGetOptions struct {
	// placeholder for future optional parameters
}

// TagDescriptionClientListByAPIOptions contains the optional parameters for the TagDescriptionClient.ListByAPI method.
type TagDescriptionClientListByAPIOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// TagDescriptionCollection - Paged TagDescription list representation.
type TagDescriptionCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*TagDescriptionContract `json:"value,omitempty"`
}

// TagDescriptionContract - Contract details.
type TagDescriptionContract struct {
	// TagDescription entity contract properties.
	Properties *TagDescriptionContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// TagDescriptionContractProperties - TagDescription contract Properties.
type TagDescriptionContractProperties struct {
	// Description of the Tag.
	Description *string `json:"description,omitempty"`

	// Tag name.
	DisplayName *string `json:"displayName,omitempty"`

	// Description of the external resources describing the tag.
	ExternalDocsDescription *string `json:"externalDocsDescription,omitempty"`

	// Absolute URL of external resources describing the tag.
	ExternalDocsURL *string `json:"externalDocsUrl,omitempty"`
}

// TagDescriptionCreateParameters - Parameters supplied to the Create TagDescription operation.
type TagDescriptionCreateParameters struct {
	// Properties supplied to Create TagDescription operation.
	Properties *TagDescriptionBaseProperties `json:"properties,omitempty"`
}

// TagResourceClientListByServiceOptions contains the optional parameters for the TagResourceClient.ListByService method.
type TagResourceClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// aid ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// apiName ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// apiRevision ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// path ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// serviceUrl ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// method ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// urlTemplate ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// terms ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// state ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// isCurrent ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// TagResourceCollection - Paged Tag list representation.
type TagResourceCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*TagResourceContract `json:"value,omitempty"`
}

// TagResourceContract - Contract details.
type TagResourceContract struct {
	// TagResource entity contract properties.
	Properties *TagResourceContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// TagResourceContractProperties - TagResource contract properties.
type TagResourceContractProperties struct {
	// Api associated with the tag.
	API *APIContract `json:"api,omitempty"`

	// Api associated with the tag.
	Operation *OperationEntityContract `json:"operation,omitempty"`

	// Product associated with the tag.
	Product *ProductContract `json:"product,omitempty"`

	// Tag associated with the resource.
	Tag *TagContract `json:"tag,omitempty"`
}

// TenantAccessClientGetOptions contains the optional parameters for the TenantAccessClient.Get method.
type TenantAccessClientGetOptions struct {
	// placeholder for future optional parameters
}

// TenantAccessClientRegeneratePrimaryKeyOptions contains the optional parameters for the TenantAccessClient.RegeneratePrimaryKey
// method.
type TenantAccessClientRegeneratePrimaryKeyOptions struct {
	// placeholder for future optional parameters
}

// TenantAccessClientRegenerateSecondaryKeyOptions contains the optional parameters for the TenantAccessClient.RegenerateSecondaryKey
// method.
type TenantAccessClientRegenerateSecondaryKeyOptions struct {
	// placeholder for future optional parameters
}

// TenantAccessClientUpdateOptions contains the optional parameters for the TenantAccessClient.Update method.
type TenantAccessClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// TenantAccessGitClientGetOptions contains the optional parameters for the TenantAccessGitClient.Get method.
type TenantAccessGitClientGetOptions struct {
	// placeholder for future optional parameters
}

// TenantAccessGitClientRegeneratePrimaryKeyOptions contains the optional parameters for the TenantAccessGitClient.RegeneratePrimaryKey
// method.
type TenantAccessGitClientRegeneratePrimaryKeyOptions struct {
	// placeholder for future optional parameters
}

// TenantAccessGitClientRegenerateSecondaryKeyOptions contains the optional parameters for the TenantAccessGitClient.RegenerateSecondaryKey
// method.
type TenantAccessGitClientRegenerateSecondaryKeyOptions struct {
	// placeholder for future optional parameters
}

// TenantConfigurationClientBeginDeployOptions contains the optional parameters for the TenantConfigurationClient.BeginDeploy
// method.
type TenantConfigurationClientBeginDeployOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TenantConfigurationClientBeginSaveOptions contains the optional parameters for the TenantConfigurationClient.BeginSave
// method.
type TenantConfigurationClientBeginSaveOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TenantConfigurationClientBeginValidateOptions contains the optional parameters for the TenantConfigurationClient.BeginValidate
// method.
type TenantConfigurationClientBeginValidateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TenantConfigurationClientGetSyncStateOptions contains the optional parameters for the TenantConfigurationClient.GetSyncState
// method.
type TenantConfigurationClientGetSyncStateOptions struct {
	// placeholder for future optional parameters
}

// TenantConfigurationSyncStateContract - Tenant Configuration Synchronization State.
type TenantConfigurationSyncStateContract struct {
	// The name of Git branch.
	Branch *string `json:"branch,omitempty"`

	// The latest commit Id.
	CommitID *string `json:"commitId,omitempty"`

	// The date of the latest configuration change. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified
	// by the ISO 8601 standard.
	ConfigurationChangeDate *time.Time `json:"configurationChangeDate,omitempty"`

	// value indicating if last sync was save (true) or deploy (false) operation.
	IsExport *bool `json:"isExport,omitempty"`

	// value indicating whether Git configuration access is enabled.
	IsGitEnabled *bool `json:"isGitEnabled,omitempty"`

	// value indicating if last synchronization was later than the configuration change.
	IsSynced *bool `json:"isSynced,omitempty"`

	// The date of the latest synchronization. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by
	// the ISO 8601 standard.
	SyncDate *time.Time `json:"syncDate,omitempty"`
}

// TermsOfServiceProperties - Terms of service contract properties.
type TermsOfServiceProperties struct {
	// Ask user for consent.
	ConsentRequired *bool `json:"consentRequired,omitempty"`

	// Display terms of service during a sign-up process.
	Enabled *bool `json:"enabled,omitempty"`

	// A terms of service text.
	Text *string `json:"text,omitempty"`
}

// TokenBodyParameterContract - OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContract struct {
	// REQUIRED; body parameter name.
	Name *string `json:"name,omitempty"`

	// REQUIRED; body parameter value.
	Value *string `json:"value,omitempty"`
}

// UserClientCreateOrUpdateOptions contains the optional parameters for the UserClient.CreateOrUpdate method.
type UserClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// UserClientDeleteOptions contains the optional parameters for the UserClient.Delete method.
type UserClientDeleteOptions struct {
	// Whether to delete user's subscription or not.
	DeleteSubscriptions *bool
}

// UserClientGenerateSsoURLOptions contains the optional parameters for the UserClient.GenerateSsoURL method.
type UserClientGenerateSsoURLOptions struct {
	// placeholder for future optional parameters
}

// UserClientGetEntityTagOptions contains the optional parameters for the UserClient.GetEntityTag method.
type UserClientGetEntityTagOptions struct {
	// placeholder for future optional parameters
}

// UserClientGetOptions contains the optional parameters for the UserClient.Get method.
type UserClientGetOptions struct {
	// placeholder for future optional parameters
}

// UserClientGetSharedAccessTokenOptions contains the optional parameters for the UserClient.GetSharedAccessToken method.
type UserClientGetSharedAccessTokenOptions struct {
	// placeholder for future optional parameters
}

// UserClientListByServiceOptions contains the optional parameters for the UserClient.ListByService method.
type UserClientListByServiceOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// firstName ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// lastName ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// email ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// state eq N/A
	// registrationDate ge, le, eq, ne, gt, lt N/A
	// note ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// UserClientUpdateOptions contains the optional parameters for the UserClient.Update method.
type UserClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// UserCollection - Paged Users list representation.
type UserCollection struct {
	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// Page values.
	Value []*UserContract `json:"value,omitempty"`
}

// UserContract - User details.
type UserContract struct {
	// User entity contract properties.
	Properties *UserContractProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type for API Management resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// UserContractProperties - User profile.
type UserContractProperties struct {
	// Email address.
	Email *string `json:"email,omitempty"`

	// First name.
	FirstName *string `json:"firstName,omitempty"`

	// Last name.
	LastName *string `json:"lastName,omitempty"`

	// Optional note about a user set by the administrator.
	Note *string `json:"note,omitempty"`

	// Date of user registration. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601
	// standard.
	RegistrationDate *time.Time `json:"registrationDate,omitempty"`

	// Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal
	// or call any APIs of subscribed products. Default state is Active.
	State *UserState `json:"state,omitempty"`

	// READ-ONLY; Collection of groups user is part of.
	Groups []*GroupContract `json:"groups,omitempty" azure:"ro"`

	// READ-ONLY; Collection of user identities.
	Identities []*UserIdentityContract `json:"identities,omitempty" azure:"ro"`
}

// UserCreateParameterProperties - Parameters supplied to the Create User operation.
type UserCreateParameterProperties struct {
	// REQUIRED; Email address. Must not be empty and must be unique within the service instance.
	Email *string `json:"email,omitempty"`

	// REQUIRED; First name.
	FirstName *string `json:"firstName,omitempty"`

	// REQUIRED; Last name.
	LastName *string `json:"lastName,omitempty"`

	// Determines the type of confirmation e-mail that will be sent to the newly created user.
	Confirmation *Confirmation `json:"confirmation,omitempty"`

	// Optional note about a user set by the administrator.
	Note *string `json:"note,omitempty"`

	// User Password. If no value is provided, a default password is generated.
	Password *string `json:"password,omitempty"`

	// Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal
	// or call any APIs of subscribed products. Default state is Active.
	State *UserState `json:"state,omitempty"`

	// READ-ONLY; Collection of user identities.
	Identities []*UserIdentityContract `json:"identities,omitempty" azure:"ro"`
}

// UserCreateParameters - User create details.
type UserCreateParameters struct {
	// User entity create contract properties.
	Properties *UserCreateParameterProperties `json:"properties,omitempty"`
}

// UserEntityBaseParameters - User Entity Base Parameters set.
type UserEntityBaseParameters struct {
	// Optional note about a user set by the administrator.
	Note *string `json:"note,omitempty"`

	// Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal
	// or call any APIs of subscribed products. Default state is Active.
	State *UserState `json:"state,omitempty"`

	// READ-ONLY; Collection of user identities.
	Identities []*UserIdentityContract `json:"identities,omitempty" azure:"ro"`
}

// UserGroupClientListOptions contains the optional parameters for the UserGroupClient.List method.
type UserGroupClientListOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// description ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// UserIdentitiesClientListOptions contains the optional parameters for the UserIdentitiesClient.List method.
type UserIdentitiesClientListOptions struct {
	// placeholder for future optional parameters
}

// UserIdentityCollection - List of Users Identity list representation.
type UserIdentityCollection struct {
	// Total record count number across all pages.
	Count *int64 `json:"count,omitempty"`

	// Next page link if any.
	NextLink *string `json:"nextLink,omitempty"`

	// User Identity values.
	Value []*UserIdentityContract `json:"value,omitempty"`
}

// UserIdentityContract - User identity details.
type UserIdentityContract struct {
	// Identifier value within provider.
	ID *string `json:"id,omitempty"`

	// Identity provider name.
	Provider *string `json:"provider,omitempty"`
}

// UserSubscriptionClientListOptions contains the optional parameters for the UserSubscriptionClient.List method.
type UserSubscriptionClientListOptions struct {
	// FIELD SUPPORTED OPERATORS SUPPORTED FUNCTIONS
	// id ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// name ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// stateComment ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// userId ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// productId ge, le, eq, ne, gt, lt substringof, contains, startswith, endswith
	// state eq
	Filter *string
	// Number of records to skip.
	Skip *int32
	// Number of records to return.
	Top *int32
}

// UserTokenParameters - Parameters supplied to the Get User Token operation.
type UserTokenParameters struct {
	// REQUIRED; The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following
	// format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
	Expiry *time.Time `json:"expiry,omitempty"`

	// REQUIRED; The Key to be used to generate token for user.
	KeyType *KeyType `json:"keyType,omitempty"`
}

// UserTokenResult - Get User Token response details.
type UserTokenResult struct {
	// Shared Access Authorization token for the User.
	Value *string `json:"value,omitempty"`
}

// UserUpdateParameters - User update parameters.
type UserUpdateParameters struct {
	// User entity update contract properties.
	Properties *UserUpdateParametersProperties `json:"properties,omitempty"`
}

// UserUpdateParametersProperties - Parameters supplied to the Update User operation.
type UserUpdateParametersProperties struct {
	// Email address. Must not be empty and must be unique within the service instance.
	Email *string `json:"email,omitempty"`

	// First name.
	FirstName *string `json:"firstName,omitempty"`

	// Last name.
	LastName *string `json:"lastName,omitempty"`

	// Optional note about a user set by the administrator.
	Note *string `json:"note,omitempty"`

	// User Password.
	Password *string `json:"password,omitempty"`

	// Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal
	// or call any APIs of subscribed products. Default state is Active.
	State *UserState `json:"state,omitempty"`

	// READ-ONLY; Collection of user identities.
	Identities []*UserIdentityContract `json:"identities,omitempty" azure:"ro"`
}

// VirtualNetworkConfiguration - Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfiguration struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceID *string `json:"subnetResourceId,omitempty"`

	// READ-ONLY; The name of the subnet.
	Subnetname *string `json:"subnetname,omitempty" azure:"ro"`

	// READ-ONLY; The virtual network ID. This is typically a GUID. Expect a null GUID by default.
	Vnetid *string `json:"vnetid,omitempty" azure:"ro"`
}

// X509CertificateName - Properties of server X509Names.
type X509CertificateName struct {
	// Thumbprint for the Issuer of the Certificate.
	IssuerCertificateThumbprint *string `json:"issuerCertificateThumbprint,omitempty"`

	// Common Name of the Certificate.
	Name *string `json:"name,omitempty"`
}
