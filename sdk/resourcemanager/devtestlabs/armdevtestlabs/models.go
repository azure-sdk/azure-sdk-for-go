//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armdevtestlabs

import "time"

// ApplicableSchedule - Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.
type ApplicableSchedule struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *ApplicableScheduleProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ApplicableScheduleProperties - Properties of a schedules applicable to a virtual machine.
type ApplicableScheduleProperties struct {
	// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
	LabVMsShutdown *Schedule `json:"labVmsShutdown,omitempty"`

	// The auto-startup schedule, if one has been set at the lab or lab resource level.
	LabVMsStartup *Schedule `json:"labVmsStartup,omitempty"`
}

// ApplyArtifactsRequest - Request body for applying artifacts to a virtual machine.
type ApplyArtifactsRequest struct {
	// The list of artifacts to apply.
	Artifacts []*ArtifactInstallProperties `json:"artifacts,omitempty"`
}

// ArmTemplate - An Azure Resource Manager template.
type ArmTemplate struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *ArmTemplateProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ArmTemplateInfo - Information about a generated ARM template.
type ArmTemplateInfo struct {
	// The parameters of the ARM template.
	Parameters any `json:"parameters,omitempty"`

	// The template's contents.
	Template any `json:"template,omitempty"`
}

// ArmTemplateList - Contains a list of armTemplates and their properties
type ArmTemplateList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of armTemplates and their properties
	Value []*ArmTemplate `json:"value,omitempty"`
}

// ArmTemplateParameterProperties - Properties of an Azure Resource Manager template parameter.
type ArmTemplateParameterProperties struct {
	// The name of the template parameter.
	Name *string `json:"name,omitempty"`

	// The value of the template parameter.
	Value *string `json:"value,omitempty"`
}

// ArmTemplateProperties - Properties of an Azure Resource Manager template.
type ArmTemplateProperties struct {
	// READ-ONLY; The contents of the ARM template.
	Contents any `json:"contents,omitempty" azure:"ro"`

	// READ-ONLY; The creation date of the armTemplate.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The description of the ARM template.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; The display name of the ARM template.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; Whether or not ARM template is enabled for use by lab user.
	Enabled *bool `json:"enabled,omitempty" azure:"ro"`

	// READ-ONLY; The URI to the icon of the ARM template.
	Icon *string `json:"icon,omitempty" azure:"ro"`

	// READ-ONLY; File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.
	ParametersValueFilesInfo []*ParametersValueFileInfo `json:"parametersValueFilesInfo,omitempty" azure:"ro"`

	// READ-ONLY; The publisher of the ARM template.
	Publisher *string `json:"publisher,omitempty" azure:"ro"`
}

// ArmTemplatesClientGetOptions contains the optional parameters for the ArmTemplatesClient.Get method.
type ArmTemplatesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=displayName)'
	Expand *string
}

// ArmTemplatesClientListOptions contains the optional parameters for the ArmTemplatesClient.NewListPager method.
type ArmTemplatesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=displayName)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// Artifact - An artifact.
type Artifact struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *ArtifactProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ArtifactDeploymentStatusProperties - Properties of an artifact deployment.
type ArtifactDeploymentStatusProperties struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied *int32 `json:"artifactsApplied,omitempty"`

	// The deployment status of the artifact.
	DeploymentStatus *string `json:"deploymentStatus,omitempty"`

	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts *int32 `json:"totalArtifacts,omitempty"`
}

// ArtifactInstallProperties - Properties of an artifact.
type ArtifactInstallProperties struct {
	// The artifact's identifier.
	ArtifactID *string `json:"artifactId,omitempty"`

	// The artifact's title.
	ArtifactTitle *string `json:"artifactTitle,omitempty"`

	// The status message from the deployment.
	DeploymentStatusMessage *string `json:"deploymentStatusMessage,omitempty"`

	// The time that the artifact starts to install on the virtual machine.
	InstallTime *time.Time `json:"installTime,omitempty"`

	// The parameters of the artifact.
	Parameters []*ArtifactParameterProperties `json:"parameters,omitempty"`

	// The status of the artifact.
	Status *string `json:"status,omitempty"`

	// The status message from the virtual machine extension.
	VMExtensionStatusMessage *string `json:"vmExtensionStatusMessage,omitempty"`
}

// ArtifactList - Contains a list of artifacts and their properties
type ArtifactList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of artifacts and their properties
	Value []*Artifact `json:"value,omitempty"`
}

// ArtifactParameterProperties - Properties of an artifact parameter.
type ArtifactParameterProperties struct {
	// The name of the artifact parameter.
	Name *string `json:"name,omitempty"`

	// The value of the artifact parameter.
	Value *string `json:"value,omitempty"`
}

// ArtifactProperties - Properties of an artifact.
type ArtifactProperties struct {
	// READ-ONLY; The artifact's creation date.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The artifact's description.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; The file path to the artifact.
	FilePath *string `json:"filePath,omitempty" azure:"ro"`

	// READ-ONLY; The URI to the artifact icon.
	Icon *string `json:"icon,omitempty" azure:"ro"`

	// READ-ONLY; The artifact's parameters.
	Parameters any `json:"parameters,omitempty" azure:"ro"`

	// READ-ONLY; The artifact's publisher.
	Publisher *string `json:"publisher,omitempty" azure:"ro"`

	// READ-ONLY; The artifact's target OS.
	TargetOsType *string `json:"targetOsType,omitempty" azure:"ro"`

	// READ-ONLY; The artifact's title.
	Title *string `json:"title,omitempty" azure:"ro"`
}

// ArtifactSource - Properties of an artifact source.
type ArtifactSource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *ArtifactSourceProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ArtifactSourceFragment - Patch
type ArtifactSourceFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// ArtifactSourceList - Contains a list of artifactSources and their properties
type ArtifactSourceList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of artifactSources and their properties
	Value []*ArtifactSource `json:"value,omitempty"`
}

// ArtifactSourceProperties - Properties of an artifact source.
type ArtifactSourceProperties struct {
	// The folder containing Azure Resource Manager templates.
	ArmTemplateFolderPath *string `json:"armTemplateFolderPath,omitempty"`

	// The artifact source's branch reference.
	BranchRef *string `json:"branchRef,omitempty"`

	// The artifact source's display name.
	DisplayName *string `json:"displayName,omitempty"`

	// The folder containing artifacts.
	FolderPath *string `json:"folderPath,omitempty"`

	// The security token to authenticate to the artifact source.
	SecurityToken *string `json:"securityToken,omitempty"`

	// The artifact source's type.
	SourceType *SourceControlType `json:"sourceType,omitempty"`

	// Indicates if the artifact source is enabled (values: Enabled, Disabled).
	Status *EnableStatus `json:"status,omitempty"`

	// The artifact source's URI.
	URI *string `json:"uri,omitempty"`

	// READ-ONLY; The artifact source's creation date.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// ArtifactSourcesClientCreateOrUpdateOptions contains the optional parameters for the ArtifactSourcesClient.CreateOrUpdate
// method.
type ArtifactSourcesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ArtifactSourcesClientDeleteOptions contains the optional parameters for the ArtifactSourcesClient.Delete method.
type ArtifactSourcesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ArtifactSourcesClientGetOptions contains the optional parameters for the ArtifactSourcesClient.Get method.
type ArtifactSourcesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=displayName)'
	Expand *string
}

// ArtifactSourcesClientListOptions contains the optional parameters for the ArtifactSourcesClient.NewListPager method.
type ArtifactSourcesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=displayName)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// ArtifactSourcesClientUpdateOptions contains the optional parameters for the ArtifactSourcesClient.Update method.
type ArtifactSourcesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ArtifactsClientGenerateArmTemplateOptions contains the optional parameters for the ArtifactsClient.GenerateArmTemplate
// method.
type ArtifactsClientGenerateArmTemplateOptions struct {
	// placeholder for future optional parameters
}

// ArtifactsClientGetOptions contains the optional parameters for the ArtifactsClient.Get method.
type ArtifactsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=title)'
	Expand *string
}

// ArtifactsClientListOptions contains the optional parameters for the ArtifactsClient.NewListPager method.
type ArtifactsClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=title)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// AttachDiskProperties - Properties of the disk to attach.
type AttachDiskProperties struct {
	// The resource ID of the Lab virtual machine to which the disk is attached.
	LeasedByLabVMID *string `json:"leasedByLabVmId,omitempty"`
}

// AttachNewDataDiskOptions - Properties to attach new disk to the Virtual Machine.
type AttachNewDataDiskOptions struct {
	// The name of the disk to be attached.
	DiskName *string `json:"diskName,omitempty"`

	// Size of the disk to be attached in Gibibytes.
	DiskSizeGiB *int32 `json:"diskSizeGiB,omitempty"`

	// The storage type for the disk (i.e. Standard, Premium).
	DiskType *StorageType `json:"diskType,omitempty"`
}

// AzureEntityResource - The resource model definition for an Azure Resource Manager resource with an etag.
type AzureEntityResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Resource Etag.
	Etag *string `json:"etag,omitempty" azure:"ro"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// BastionHost - Profile of a Bastion Host
type BastionHost struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *BastionHostProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// BastionHostFragment - Patch
type BastionHostFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// BastionHostList - Contains a list of bastionHosts and their properties
type BastionHostList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of bastionHosts and their properties
	Value []*BastionHost `json:"value,omitempty"`
}

// BastionHostProperties - Properties of a BastionHost profile.
type BastionHostProperties struct {
	// READ-ONLY; The ID of the external BastionHost resource that corresponds to this DTL BastionHost
	ExternalBastionHostID *string `json:"externalBastionHostId,omitempty" azure:"ro"`

	// READ-ONLY; The ID of the PublicIpAddress resource that is created by and paired with this BastionHost
	IPAddressID *string `json:"ipAddressId,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// BastionHostsClientBeginCreateOrUpdateOptions contains the optional parameters for the BastionHostsClient.BeginCreateOrUpdate
// method.
type BastionHostsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// BastionHostsClientBeginDeleteOptions contains the optional parameters for the BastionHostsClient.BeginDelete method.
type BastionHostsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// BastionHostsClientGetOptions contains the optional parameters for the BastionHostsClient.Get method.
type BastionHostsClientGetOptions struct {
	// placeholder for future optional parameters
}

// BastionHostsClientListOptions contains the optional parameters for the BastionHostsClient.NewListPager method.
type BastionHostsClientListOptions struct {
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// BastionHostsClientUpdateOptions contains the optional parameters for the BastionHostsClient.Update method.
type BastionHostsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// BulkCreationParameters - Parameters for creating multiple virtual machines as a single action.
type BulkCreationParameters struct {
	// The number of virtual machine instances to create.
	InstanceCount *int32 `json:"instanceCount,omitempty"`
}

// CheckNameAvailabilityRequest - The check availability request body.
type CheckNameAvailabilityRequest struct {
	// The name of the resource for which availability needs to be checked.
	Name *string `json:"name,omitempty"`

	// The resource type.
	Type *string `json:"type,omitempty"`
}

// CheckNameAvailabilityResponse - The check availability result.
type CheckNameAvailabilityResponse struct {
	// Detailed reason why the given name is available.
	Message *string `json:"message,omitempty"`

	// Indicates if the resource name is available.
	NameAvailable *bool `json:"nameAvailable,omitempty"`

	// The reason why the given name is not available.
	Reason *CheckNameAvailabilityReason `json:"reason,omitempty"`
}

// ComputeDataDisk - A data disks attached to a virtual machine.
type ComputeDataDisk struct {
	// Gets data disk size in GiB.
	DiskSizeGiB *int32 `json:"diskSizeGiB,omitempty"`

	// When backed by a blob, the URI of underlying blob.
	DiskURI *string `json:"diskUri,omitempty"`

	// When backed by managed disk, this is the ID of the compute disk resource.
	ManagedDiskID *string `json:"managedDiskId,omitempty"`

	// Gets data disk name.
	Name *string `json:"name,omitempty"`
}

// ComputeVMInstanceViewStatus - Status information about a virtual machine.
type ComputeVMInstanceViewStatus struct {
	// Gets the status Code.
	Code *string `json:"code,omitempty"`

	// Gets the short localizable label for the status.
	DisplayStatus *string `json:"displayStatus,omitempty"`

	// Gets the message associated with the status.
	Message *string `json:"message,omitempty"`
}

// ComputeVMProperties - Properties of a virtual machine returned by the Microsoft.Compute API.
type ComputeVMProperties struct {
	// Gets data disks blob uri for the virtual machine.
	DataDiskIDs []*string `json:"dataDiskIds,omitempty"`

	// Gets all data disks attached to the virtual machine.
	DataDisks []*ComputeDataDisk `json:"dataDisks,omitempty"`

	// Gets the network interface ID of the virtual machine.
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty"`

	// Gets OS disk blob uri for the virtual machine.
	OSDiskID *string `json:"osDiskId,omitempty"`

	// Gets the OS type of the virtual machine.
	OSType *string `json:"osType,omitempty"`

	// Gets the statuses of the virtual machine.
	Statuses []*ComputeVMInstanceViewStatus `json:"statuses,omitempty"`

	// Gets the size of the virtual machine.
	VMSize *string `json:"vmSize,omitempty"`
}

// Cost - A cost item.
type Cost struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *LabCostProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// CostThresholdProperties - Properties of a cost threshold item.
type CostThresholdProperties struct {
	// Indicates whether this threshold will be displayed on cost charts.
	DisplayOnChart *CostThresholdStatus `json:"displayOnChart,omitempty"`

	// Indicates the datetime when notifications were last sent for this threshold.
	NotificationSent *string `json:"notificationSent,omitempty"`

	// The value of the percentage cost threshold.
	PercentageThreshold *PercentageCostThresholdProperties `json:"percentageThreshold,omitempty"`

	// Indicates whether notifications will be sent when this threshold is exceeded.
	SendNotificationWhenExceeded *CostThresholdStatus `json:"sendNotificationWhenExceeded,omitempty"`

	// The ID of the cost threshold item.
	ThresholdID *string `json:"thresholdId,omitempty"`
}

// CostsClientCreateOrUpdateOptions contains the optional parameters for the CostsClient.CreateOrUpdate method.
type CostsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// CostsClientGetOptions contains the optional parameters for the CostsClient.Get method.
type CostsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($expand=labCostDetails)'
	Expand *string
}

// CustomImage - A custom image.
type CustomImage struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *CustomImageProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// CustomImageFragment - Patch
type CustomImageFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// CustomImageList - Contains a list of customImages and their properties
type CustomImageList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of customImages and their properties
	Value []*CustomImage `json:"value,omitempty"`
}

// CustomImageProperties - Properties of a custom image.
type CustomImageProperties struct {
	// The author of the custom image.
	Author *string `json:"author,omitempty"`

	// Storage information about the plan related to this custom image
	CustomImagePlan *CustomImagePropertiesFromPlan `json:"customImagePlan,omitempty"`

	// Storage information about the data disks present in the custom image
	DataDiskStorageInfo []*DataDiskStorageTypeInfo `json:"dataDiskStorageInfo,omitempty"`

	// The description of the custom image.
	Description *string `json:"description,omitempty"`

	// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
	IsPlanAuthorized *bool `json:"isPlanAuthorized,omitempty"`

	// The Managed Image Id backing the custom image.
	ManagedImageID *string `json:"managedImageId,omitempty"`

	// The Managed Snapshot Id backing the custom image.
	ManagedSnapshotID *string `json:"managedSnapshotId,omitempty"`

	// The virtual machine from which the image is to be created.
	VM *CustomImagePropertiesFromVM `json:"vm,omitempty"`

	// The VHD from which the image is to be created.
	Vhd *CustomImagePropertiesCustom `json:"vhd,omitempty"`

	// READ-ONLY; The creation date of the custom image.
	CreationDate *time.Time `json:"creationDate,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// CustomImagePropertiesCustom - Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustom struct {
	// REQUIRED; The OS type of the custom image (i.e. Windows, Linux)
	OSType *CustomImageOsType `json:"osType,omitempty"`

	// The image name.
	ImageName *string `json:"imageName,omitempty"`

	// Indicates whether sysprep has been run on the VHD.
	SysPrep *bool `json:"sysPrep,omitempty"`
}

// CustomImagePropertiesFromPlan - Properties for plan on a custom image.
type CustomImagePropertiesFromPlan struct {
	// The id of the plan, equivalent to name of the plan
	ID *string `json:"id,omitempty"`

	// The offer for the plan from the marketplace image the custom image is derived from
	Offer *string `json:"offer,omitempty"`

	// The publisher for the plan from the marketplace image the custom image is derived from
	Publisher *string `json:"publisher,omitempty"`
}

// CustomImagePropertiesFromPlanFragment - Properties for plan on a custom image.
type CustomImagePropertiesFromPlanFragment struct {
	// The id of the plan, equivalent to name of the plan
	ID *string `json:"id,omitempty"`

	// The offer for the plan from the marketplace image the custom image is derived from
	Offer *string `json:"offer,omitempty"`

	// The publisher for the plan from the marketplace image the custom image is derived from
	Publisher *string `json:"publisher,omitempty"`
}

// CustomImagePropertiesFromVM - Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVM struct {
	// The Linux OS information of the VM.
	LinuxOsInfo *LinuxOsInfo `json:"linuxOsInfo,omitempty"`

	// The source vm identifier.
	SourceVMID *string `json:"sourceVmId,omitempty"`

	// The Windows OS information of the VM.
	WindowsOsInfo *WindowsOsInfo `json:"windowsOsInfo,omitempty"`
}

// CustomImagesClientBeginCreateOrUpdateOptions contains the optional parameters for the CustomImagesClient.BeginCreateOrUpdate
// method.
type CustomImagesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CustomImagesClientBeginDeleteOptions contains the optional parameters for the CustomImagesClient.BeginDelete method.
type CustomImagesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CustomImagesClientGetOptions contains the optional parameters for the CustomImagesClient.Get method.
type CustomImagesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=vm)'
	Expand *string
}

// CustomImagesClientListOptions contains the optional parameters for the CustomImagesClient.NewListPager method.
type CustomImagesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=vm)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// CustomImagesClientUpdateOptions contains the optional parameters for the CustomImagesClient.Update method.
type CustomImagesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DataDiskProperties - Request body for adding a new or existing data disk to a virtual machine.
type DataDiskProperties struct {
	// Specifies options to attach a new disk to the virtual machine.
	AttachNewDataDiskOptions *AttachNewDataDiskOptions `json:"attachNewDataDiskOptions,omitempty"`

	// Specifies the existing lab disk id to attach to virtual machine.
	ExistingLabDiskID *string `json:"existingLabDiskId,omitempty"`

	// Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
	HostCaching *HostCachingOptions `json:"hostCaching,omitempty"`
}

// DataDiskStorageTypeInfo - Storage information about the data disks present in the custom image
type DataDiskStorageTypeInfo struct {
	// Disk Lun
	Lun *string `json:"lun,omitempty"`

	// Disk Storage Type
	StorageType *StorageType `json:"storageType,omitempty"`
}

// DayDetails - Properties of a daily schedule.
type DayDetails struct {
	// The time of day the schedule will occur.
	Time *string `json:"time,omitempty"`
}

// DetachDataDiskProperties - Request body for detaching data disk from a virtual machine.
type DetachDataDiskProperties struct {
	// Specifies the disk resource ID to detach from virtual machine.
	ExistingLabDiskID *string `json:"existingLabDiskId,omitempty"`
}

// DetachDiskProperties - Properties of the disk to detach.
type DetachDiskProperties struct {
	// The resource ID of the Lab VM to which the disk is attached.
	LeasedByLabVMID *string `json:"leasedByLabVmId,omitempty"`
}

// Disk - A Disk.
type Disk struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *DiskProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// DiskFragment - Patch
type DiskFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// DiskList - Contains a list of disks and their properties
type DiskList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of disks and their properties
	Value []*Disk `json:"value,omitempty"`
}

// DiskProperties - Properties of a disk.
type DiskProperties struct {
	// When backed by a blob, the name of the VHD blob without extension.
	DiskBlobName *string `json:"diskBlobName,omitempty"`

	// The size of the disk in Gibibytes.
	DiskSizeGiB *int32 `json:"diskSizeGiB,omitempty"`

	// The storage type for the disk (i.e. Standard, Premium).
	DiskType *StorageType `json:"diskType,omitempty"`

	// When backed by a blob, the URI of underlying blob.
	DiskURI *string `json:"diskUri,omitempty"`

	// The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).
	HostCaching *string `json:"hostCaching,omitempty"`

	// The resource ID of the VM to which this disk is leased.
	LeasedByLabVMID *string `json:"leasedByLabVmId,omitempty"`

	// When backed by managed disk, this is the ID of the compute disk resource.
	ManagedDiskID *string `json:"managedDiskId,omitempty"`

	// When backed by a blob, the storage account where the blob is.
	StorageAccountID *string `json:"storageAccountId,omitempty"`

	// READ-ONLY; The creation date of the disk.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// DisksClientBeginAttachOptions contains the optional parameters for the DisksClient.BeginAttach method.
type DisksClientBeginAttachOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DisksClientBeginCreateOrUpdateOptions contains the optional parameters for the DisksClient.BeginCreateOrUpdate method.
type DisksClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DisksClientBeginDeleteOptions contains the optional parameters for the DisksClient.BeginDelete method.
type DisksClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DisksClientBeginDetachOptions contains the optional parameters for the DisksClient.BeginDetach method.
type DisksClientBeginDetachOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DisksClientGetOptions contains the optional parameters for the DisksClient.Get method.
type DisksClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=diskType)'
	Expand *string
}

// DisksClientListOptions contains the optional parameters for the DisksClient.NewListPager method.
type DisksClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=diskType)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// DisksClientUpdateOptions contains the optional parameters for the DisksClient.Update method.
type DisksClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DtlEnvironment - An environment, which is essentially an ARM template deployment.
type DtlEnvironment struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *EnvironmentProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// DtlEnvironmentFragment - Patch
type DtlEnvironmentFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// DtlEnvironmentList - Contains a list of environments and their properties
type DtlEnvironmentList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of environments and their properties
	Value []*DtlEnvironment `json:"value,omitempty"`
}

// Encryption settings
type Encryption struct {
	// Gets or sets resourceId of the disk encryption set to use for enabling encryption at rest.
	DiskEncryptionSetID *string `json:"diskEncryptionSetId,omitempty"`

	// Gets or sets the type of key used to encrypt the data of the disk. Possible values include: 'EncryptionAtRestWithPlatformKey',
	// 'EncryptionAtRestWithCustomerKey'
	Type *EncryptionType `json:"type,omitempty"`
}

// EncryptionProperties - Configuration of key for data encryption
type EncryptionProperties struct {
	// Key vault properties.
	KeyVaultProperties *KeyVaultProperties `json:"keyVaultProperties,omitempty"`

	// Indicates whether or not the encryption is enabled for container registry.
	Status *EncryptionStatus `json:"status,omitempty"`
}

// EnvironmentDeploymentProperties - Properties of an environment deployment.
type EnvironmentDeploymentProperties struct {
	// The Azure Resource Manager template's identifier.
	ArmTemplateID *string `json:"armTemplateId,omitempty"`

	// The parameters of the Azure Resource Manager template.
	Parameters []*ArmTemplateParameterProperties `json:"parameters,omitempty"`
}

// EnvironmentProperties - Properties of an environment.
type EnvironmentProperties struct {
	// The display name of the Azure Resource Manager template that produced the environment.
	ArmTemplateDisplayName *string `json:"armTemplateDisplayName,omitempty"`

	// The deployment properties of the environment.
	DeploymentProperties *EnvironmentDeploymentProperties `json:"deploymentProperties,omitempty"`

	// READ-ONLY; The creator of the environment.
	CreatedByUser *string `json:"createdByUser,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The identifier of the resource group containing the environment's resources.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// EnvironmentsClientBeginCreateOrUpdateOptions contains the optional parameters for the EnvironmentsClient.BeginCreateOrUpdate
// method.
type EnvironmentsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginDeleteOptions contains the optional parameters for the EnvironmentsClient.BeginDelete method.
type EnvironmentsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientGetOptions contains the optional parameters for the EnvironmentsClient.Get method.
type EnvironmentsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=deploymentProperties)'
	Expand *string
}

// EnvironmentsClientListOptions contains the optional parameters for the EnvironmentsClient.NewListPager method.
type EnvironmentsClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=deploymentProperties)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// EnvironmentsClientUpdateOptions contains the optional parameters for the EnvironmentsClient.Update method.
type EnvironmentsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any `json:"info,omitempty" azure:"ro"`

	// READ-ONLY; The additional info type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo `json:"additionalInfo,omitempty" azure:"ro"`

	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The error details.
	Details []*ErrorDetail `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; The error target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail `json:"error,omitempty"`
}

// EvaluatePoliciesProperties - Properties for evaluating a policy set.
type EvaluatePoliciesProperties struct {
	// The fact data.
	FactData *string `json:"factData,omitempty"`

	// The fact name.
	FactName *string `json:"factName,omitempty"`

	// The user for which policies will be evaluated
	UserObjectID *string `json:"userObjectId,omitempty"`

	// The value offset.
	ValueOffset *string `json:"valueOffset,omitempty"`
}

// EvaluatePoliciesRequest - Request body for evaluating a policy set.
type EvaluatePoliciesRequest struct {
	// Policies to evaluate.
	Policies []*EvaluatePoliciesProperties `json:"policies,omitempty"`
}

// EvaluatePoliciesResponse - Response body for evaluating a policy set.
type EvaluatePoliciesResponse struct {
	// Results of evaluating a policy set.
	Results []*PolicySetResult `json:"results,omitempty"`
}

// Event - An event to be notified for.
type Event struct {
	// The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
	EventName *NotificationChannelEventType `json:"eventName,omitempty"`
}

// ExportResourceUsageParameters - The parameters of the export operation.
type ExportResourceUsageParameters struct {
	// The blob storage absolute sas uri with write permission to the container which the usage data needs to be uploaded to.
	BlobStorageAbsoluteSasURI *string `json:"blobStorageAbsoluteSasUri,omitempty"`

	// The start time of the usage. If not provided, usage will be reported since the beginning of data collection.
	UsageStartDate *time.Time `json:"usageStartDate,omitempty"`
}

// ExternalSubnet - Subnet information as returned by the Microsoft.Network API.
type ExternalSubnet struct {
	// Gets or sets the identifier.
	ID *string `json:"id,omitempty"`

	// Gets or sets the name.
	Name *string `json:"name,omitempty"`
}

// Formula - A formula for creating a VM, specifying an image base and other parameters
type Formula struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *FormulaProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// FormulaFragment - Patch
type FormulaFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// FormulaList - Contains a list of formulas and their properties
type FormulaList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of formulas and their properties
	Value []*Formula `json:"value,omitempty"`
}

// FormulaProperties - Properties of a formula.
type FormulaProperties struct {
	// The description of the formula.
	Description *string `json:"description,omitempty"`

	// The content of the formula.
	FormulaContent *LabVirtualMachineCreationParameter `json:"formulaContent,omitempty"`

	// The OS type of the formula.
	OSType *string `json:"osType,omitempty"`

	// Information about a VM from which a formula is to be created.
	VM *FormulaPropertiesFromVM `json:"vm,omitempty"`

	// READ-ONLY; The author of the formula.
	Author *string `json:"author,omitempty" azure:"ro"`

	// READ-ONLY; The creation date of the formula.
	CreationDate *time.Time `json:"creationDate,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// FormulaPropertiesFromVM - Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVM struct {
	// The identifier of the VM from which a formula is to be created.
	LabVMID *string `json:"labVmId,omitempty"`
}

// FormulasClientBeginCreateOrUpdateOptions contains the optional parameters for the FormulasClient.BeginCreateOrUpdate method.
type FormulasClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FormulasClientDeleteOptions contains the optional parameters for the FormulasClient.Delete method.
type FormulasClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// FormulasClientGetOptions contains the optional parameters for the FormulasClient.Get method.
type FormulasClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=description)'
	Expand *string
}

// FormulasClientListOptions contains the optional parameters for the FormulasClient.NewListPager method.
type FormulasClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=description)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// FormulasClientUpdateOptions contains the optional parameters for the FormulasClient.Update method.
type FormulasClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// GalleryImage - A gallery image.
type GalleryImage struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *GalleryImageProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// GalleryImageList - Contains a list of galleryImages and their properties
type GalleryImageList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of galleryImages and their properties
	Value []*GalleryImage `json:"value,omitempty"`
}

// GalleryImageProperties - Properties of a gallery image.
type GalleryImageProperties struct {
	// The author of the gallery image.
	Author *string `json:"author,omitempty"`

	// The description of the gallery image.
	Description *string `json:"description,omitempty"`

	// Indicates whether this gallery image is enabled.
	Enabled *bool `json:"enabled,omitempty"`

	// The icon of the gallery image.
	Icon *string `json:"icon,omitempty"`

	// The image reference of the gallery image.
	ImageReference *GalleryImageReference `json:"imageReference,omitempty"`

	// Indicates if the plan has been authorized for programmatic deployment.
	IsPlanAuthorized *bool `json:"isPlanAuthorized,omitempty"`

	// The third party plan that applies to this image
	PlanID *string `json:"planId,omitempty"`

	// READ-ONLY; The creation date of the gallery image.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`
}

// GalleryImageReference - The reference information for an Azure Marketplace image.
type GalleryImageReference struct {
	// The OS type of the gallery image.
	OSType *string `json:"osType,omitempty"`

	// The offer of the gallery image.
	Offer *string `json:"offer,omitempty"`

	// The publisher of the gallery image.
	Publisher *string `json:"publisher,omitempty"`

	// The SKU of the gallery image.
	SKU *string `json:"sku,omitempty"`

	// The version of the gallery image.
	Version *string `json:"version,omitempty"`
}

// GalleryImagesClientGetOptions contains the optional parameters for the GalleryImagesClient.Get method.
type GalleryImagesClientGetOptions struct {
	// placeholder for future optional parameters
}

// GalleryImagesClientListOptions contains the optional parameters for the GalleryImagesClient.NewListPager method.
type GalleryImagesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=author)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// GenerateArmTemplateRequest - Parameters for generating an ARM template for deploying artifacts.
type GenerateArmTemplateRequest struct {
	// Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.
	FileUploadOptions *FileUploadOptions `json:"fileUploadOptions,omitempty"`

	// The location of the virtual machine.
	Location *string `json:"location,omitempty"`

	// The parameters of the ARM template.
	Parameters []*ParameterInfo `json:"parameters,omitempty"`

	// The resource name of the virtual machine.
	VirtualMachineName *string `json:"virtualMachineName,omitempty"`
}

// GenerateUploadURIParameter - Properties for generating an upload URI.
type GenerateUploadURIParameter struct {
	// The blob name of the upload URI.
	BlobName *string `json:"blobName,omitempty"`
}

// GenerateUploadURIResponse - Response body for generating an upload URI.
type GenerateUploadURIResponse struct {
	// The upload URI for the VHD.
	UploadURI *string `json:"uploadUri,omitempty"`
}

// GlobalSchedulesClientBeginExecuteOptions contains the optional parameters for the GlobalSchedulesClient.BeginExecute method.
type GlobalSchedulesClientBeginExecuteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GlobalSchedulesClientBeginRetargetOptions contains the optional parameters for the GlobalSchedulesClient.BeginRetarget
// method.
type GlobalSchedulesClientBeginRetargetOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GlobalSchedulesClientCreateOrUpdateOptions contains the optional parameters for the GlobalSchedulesClient.CreateOrUpdate
// method.
type GlobalSchedulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// GlobalSchedulesClientDeleteOptions contains the optional parameters for the GlobalSchedulesClient.Delete method.
type GlobalSchedulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// GlobalSchedulesClientGetOptions contains the optional parameters for the GlobalSchedulesClient.Get method.
type GlobalSchedulesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
}

// GlobalSchedulesClientListByResourceGroupOptions contains the optional parameters for the GlobalSchedulesClient.NewListByResourceGroupPager
// method.
type GlobalSchedulesClientListByResourceGroupOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// GlobalSchedulesClientListBySubscriptionOptions contains the optional parameters for the GlobalSchedulesClient.NewListBySubscriptionPager
// method.
type GlobalSchedulesClientListBySubscriptionOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// GlobalSchedulesClientUpdateOptions contains the optional parameters for the GlobalSchedulesClient.Update method.
type GlobalSchedulesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// HourDetails - Properties of an hourly schedule.
type HourDetails struct {
	// Minutes of the hour the schedule will run.
	Minute *int32 `json:"minute,omitempty"`
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type *string `json:"type,omitempty"`

	// READ-ONLY; The principal ID of resource identity. The value must be an UUID.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The tenant ID of resource. The value must be an UUID.
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

// IdentityProperties - Properties of a managed identity
type IdentityProperties struct {
	// The client secret URL of the identity.
	ClientSecretURL *string `json:"clientSecretUrl,omitempty"`

	// The principal id of resource identity.
	PrincipalID *string `json:"principalId,omitempty"`

	// The tenant identifier of resource.
	TenantID *string `json:"tenantId,omitempty"`

	// Type of identity (SystemAssigned, UserAssigned, None)
	Type *ManagedIdentityType `json:"type,omitempty"`

	// If Type is 'UserAssigned': List of user assigned identities.
	UserAssignedIdentities map[string]any `json:"userAssignedIdentities,omitempty"`
}

// ImageVersionProperties - Properties for a shared image version.
type ImageVersionProperties struct {
	// Image version name
	Name *string `json:"name,omitempty"`
}

// ImportLabVirtualMachineRequest - This represents the payload required to import a virtual machine from a different lab
// into the current one
type ImportLabVirtualMachineRequest struct {
	// The name of the virtual machine in the destination lab
	DestinationVirtualMachineName *string `json:"destinationVirtualMachineName,omitempty"`

	// The full resource ID of the virtual machine to be imported.
	SourceVirtualMachineResourceID *string `json:"sourceVirtualMachineResourceId,omitempty"`
}

// InboundNatRule - A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
type InboundNatRule struct {
	// The port to which the external traffic will be redirected.
	BackendPort *int32 `json:"backendPort,omitempty"`

	// The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified,
	// a value will be allocated automatically.
	FrontendPort *int32 `json:"frontendPort,omitempty"`

	// The transport protocol for the endpoint.
	TransportProtocol *TransportProtocol `json:"transportProtocol,omitempty"`
}

type KeyVaultProperties struct {
	// The client ID of the identity which will be used to access key vault.
	Identity *string `json:"identity,omitempty"`

	// Key vault uri to access the encryption key.
	KeyIdentifier *string `json:"keyIdentifier,omitempty"`
}

// Lab - A lab.
type Lab struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The properties of the resource.
	Properties *LabProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// LabAnnouncementProperties - Properties of a lab's announcement banner
type LabAnnouncementProperties struct {
	// Is the lab announcement active/enabled at this time?
	Enabled *EnableStatus `json:"enabled,omitempty"`

	// The time at which the announcement expires (null for never)
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`

	// Has this announcement expired?
	Expired *bool `json:"expired,omitempty"`

	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown *string `json:"markdown,omitempty"`

	// The plain text title for the lab announcement
	Title *string `json:"title,omitempty"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// LabCost - A cost item.
type LabCost struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *LabCostProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// LabCostDetailsProperties - The properties of a lab cost item.
type LabCostDetailsProperties struct {
	// The cost component of the cost item.
	Cost *float64 `json:"cost,omitempty"`

	// The type of the cost.
	CostType *CostType `json:"costType,omitempty"`

	// The date of the cost item.
	Date *time.Time `json:"date,omitempty"`
}

// LabCostList - Contains a list of costs and their properties
type LabCostList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of costs and their properties
	Value []*LabCost `json:"value,omitempty"`
}

// LabCostProperties - Properties of a cost item.
type LabCostProperties struct {
	// The creation date of the cost.
	CreatedDate *time.Time `json:"createdDate,omitempty"`

	// The currency code of the cost.
	CurrencyCode *string `json:"currencyCode,omitempty"`

	// The end time of the cost data.
	EndDateTime *time.Time `json:"endDateTime,omitempty"`

	// The start time of the cost data.
	StartDateTime *time.Time `json:"startDateTime,omitempty"`

	// The target cost properties
	TargetCost *TargetCostProperties `json:"targetCost,omitempty"`

	// READ-ONLY; The lab cost details component of the cost data.
	LabCostDetails []*LabCostDetailsProperties `json:"labCostDetails,omitempty" azure:"ro"`

	// READ-ONLY; The lab cost summary component of the cost data.
	LabCostSummary *LabCostSummaryProperties `json:"labCostSummary,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The resource cost component of the cost data.
	ResourceCosts []*LabResourceCostProperties `json:"resourceCosts,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// LabCostSummaryProperties - The properties of the cost summary.
type LabCostSummaryProperties struct {
	// The cost component of the cost item.
	EstimatedLabCost *float64 `json:"estimatedLabCost,omitempty"`
}

// LabFragment - Patch
type LabFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// LabList - Contains a list of labs and their properties
type LabList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of labs and their properties
	Value []*Lab `json:"value,omitempty"`
}

// LabProperties - Properties of a lab.
type LabProperties struct {
	// The properties of any lab announcement associated with this lab
	Announcement *LabAnnouncementProperties `json:"announcement,omitempty"`

	// Is browser connect enabled for the lab
	BrowserConnect *EnableStatus `json:"browserConnect,omitempty"`

	// Default secret for creating virtual machines.
	DefaultSecretName *string `json:"defaultSecretName,omitempty"`

	// Is auto upgrade of CSE disabled for the lab?
	DisableAutoUpgradeCseMinorVersion *bool `json:"disableAutoUpgradeCseMinorVersion,omitempty"`

	// Mechanism used for encryption of resources in a lab (such as virtual machines).
	Encryption *Encryption `json:"encryption,omitempty"`

	// The access rights to be granted to the user when provisioning an environment
	EnvironmentPermission *EnvironmentPermission `json:"environmentPermission,omitempty"`

	// Extended properties of the lab used for experimental features
	ExtendedProperties map[string]*string `json:"extendedProperties,omitempty"`

	// Indicates whether to create Lab resources (e.g. Storage accounts and Key Vaults) in network isolation.
	IsolateLabResources *EnableStatus `json:"isolateLabResources,omitempty"`

	// Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
	LabStorageType *StorageType `json:"labStorageType,omitempty"`

	// List of identities which can be used for management of resources.
	ManagementIdentities map[string]any `json:"managementIdentities,omitempty"`

	// The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts
	// specified by the user.
	MandatoryArtifactsResourceIDsLinux []*string `json:"mandatoryArtifactsResourceIdsLinux,omitempty"`

	// The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts
	// specified by the user.
	MandatoryArtifactsResourceIDsWindows []*string `json:"mandatoryArtifactsResourceIdsWindows,omitempty"`

	// The setting to enable usage of premium data disks. When its value is 'Enabled', creation of standard or premium data disks
	// is allowed. When its value is 'Disabled', only creation of standard data
	// disks is allowed.
	PremiumDataDisks *PremiumDataDisk `json:"premiumDataDisks,omitempty"`

	// The properties of any lab support message associated with this lab
	Support *LabSupportProperties `json:"support,omitempty"`

	// READ-ONLY; The lab's artifact storage account.
	ArtifactsStorageAccount *string `json:"artifactsStorageAccount,omitempty" azure:"ro"`

	// READ-ONLY; The creation date of the lab.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The lab's default premium storage account.
	DefaultPremiumStorageAccount *string `json:"defaultPremiumStorageAccount,omitempty" azure:"ro"`

	// READ-ONLY; The lab's default storage account.
	DefaultStorageAccount *string `json:"defaultStorageAccount,omitempty" azure:"ro"`

	// READ-ONLY; The load balancer used to for lab VMs that use shared IP address.
	LoadBalancerID *string `json:"loadBalancerId,omitempty" azure:"ro"`

	// READ-ONLY; The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.
	NetworkSecurityGroupID *string `json:"networkSecurityGroupId,omitempty" azure:"ro"`

	// READ-ONLY; The lab's premium data disk storage account.
	PremiumDataDiskStorageAccount *string `json:"premiumDataDiskStorageAccount,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The public IP address for the lab's load balancer.
	PublicIPID *string `json:"publicIpId,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`

	// READ-ONLY; The resource group ID in which all new lab virtual machines will be created. Ex: /subscriptions/subId/resourceGroups/rgName
	// To let DevTest Labs manage resource group creation, set this value to null.
	VMCreationResourceGroup *string `json:"vmCreationResourceGroup,omitempty" azure:"ro"`

	// READ-ONLY; The lab's Key vault.
	VaultName *string `json:"vaultName,omitempty" azure:"ro"`
}

// LabResourceCostProperties - The properties of a resource cost item.
type LabResourceCostProperties struct {
	// The ID of the external resource
	ExternalResourceID *string `json:"externalResourceId,omitempty"`

	// The cost component of the resource cost item.
	ResourceCost *float64 `json:"resourceCost,omitempty"`

	// The ID of the resource
	ResourceID *string `json:"resourceId,omitempty"`

	// The owner of the resource (ex. janedoe@microsoft.com)
	ResourceOwner *string `json:"resourceOwner,omitempty"`

	// The category of the resource (ex. PremiumLRS, StandardDS1)
	ResourcePricingTier *string `json:"resourcePricingTier,omitempty"`

	// The status of the resource (ex. Active)
	ResourceStatus *string `json:"resourceStatus,omitempty"`

	// The logical resource type (ex. virtualmachine, storageaccount)
	ResourceType *string `json:"resourceType,omitempty"`

	// The unique identifier of the resource.
	ResourceUID *string `json:"resourceUId,omitempty"`

	// The name of the resource.
	Resourcename *string `json:"resourcename,omitempty"`
}

// LabSecret - A shared secret in a lab.
type LabSecret struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; The properties of the resource.
	Properties *LabSecretProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// LabSecretFragment - Patch
type LabSecretFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// LabSecretList - Contains a list of secrets and their properties
type LabSecretList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of secrets and their properties
	Value []*LabSecret `json:"value,omitempty"`
}

// LabSecretProperties - The properties of labs secrets
type LabSecretProperties struct {
	// Is the secret enabled for use with ARM environments?
	EnabledForArmEnvironments *bool `json:"enabledForArmEnvironments,omitempty"`

	// Is the secret enabled for use with artifacts?
	EnabledForArtifacts *bool `json:"enabledForArtifacts,omitempty"`

	// Is the secret enabled for use with creation of VMs?
	EnabledForVMCreation *bool `json:"enabledForVmCreation,omitempty"`

	// The value of the secret for secret creation.
	Value *string `json:"value,omitempty"`

	// READ-ONLY; The name of the entry in the lab KeyVault.
	KeyVaultEntry *string `json:"keyVaultEntry,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// LabSecretsClientBeginCreateOrUpdateOptions contains the optional parameters for the LabSecretsClient.BeginCreateOrUpdate
// method.
type LabSecretsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabSecretsClientBeginDeleteOptions contains the optional parameters for the LabSecretsClient.BeginDelete method.
type LabSecretsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabSecretsClientGetOptions contains the optional parameters for the LabSecretsClient.Get method.
type LabSecretsClientGetOptions struct {
	// placeholder for future optional parameters
}

// LabSecretsClientListOptions contains the optional parameters for the LabSecretsClient.NewListPager method.
type LabSecretsClientListOptions struct {
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// LabSecretsClientUpdateOptions contains the optional parameters for the LabSecretsClient.Update method.
type LabSecretsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// LabSupportProperties - Properties of a lab's support banner
type LabSupportProperties struct {
	// Is the lab support banner active/enabled at this time?
	Enabled *EnableStatus `json:"enabled,omitempty"`

	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown *string `json:"markdown,omitempty"`
}

// LabVhd - Properties of a VHD in the lab.
type LabVhd struct {
	// The URI to the VHD.
	ID *string `json:"id,omitempty"`
}

// LabVhdList - Contains a list of Lab Vhd and their properties
type LabVhdList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of Lab Vhd and their properties
	Value []*LabVhd `json:"value,omitempty"`
}

// LabVirtualMachine - A virtual machine.
type LabVirtualMachine struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *LabVirtualMachineProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// LabVirtualMachineCreationParameter - Properties for creating a virtual machine.
type LabVirtualMachineCreationParameter struct {
	// The location of the new virtual machine or environment
	Location *string `json:"location,omitempty"`

	// The name of the virtual machine or environment
	Name *string `json:"name,omitempty"`

	// The properties of the resource.
	Properties *LabVirtualMachineCreationParameterProperties `json:"properties,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// LabVirtualMachineCreationParameterProperties - Properties for virtual machine creation.
type LabVirtualMachineCreationParameterProperties struct {
	// Indicates whether another user can take ownership of the virtual machine
	AllowClaim *bool `json:"allowClaim,omitempty"`

	// The artifacts to be installed on the virtual machine.
	Artifacts []*ArtifactInstallProperties `json:"artifacts,omitempty"`

	// The number of virtual machine instances to create.
	BulkCreationParameters *BulkCreationParameters `json:"bulkCreationParameters,omitempty"`

	// The creation date of the virtual machine.
	CreatedDate *time.Time `json:"createdDate,omitempty"`

	// The custom image identifier of the virtual machine.
	CustomImageID *string `json:"customImageId,omitempty"`

	// New or existing data disks to attach to the virtual machine after creation
	DataDiskParameters []*DataDiskProperties `json:"dataDiskParameters,omitempty"`

	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIPAddress *bool `json:"disallowPublicIpAddress,omitempty"`

	// The resource ID of the environment that contains this virtual machine, if any.
	EnvironmentID *string `json:"environmentId,omitempty"`

	// The expiration date for VM.
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`

	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference *GalleryImageReference `json:"galleryImageReference,omitempty"`

	// The shared gallery image version resource identifier of the virtual machine.
	GalleryImageVersionID *string `json:"galleryImageVersionId,omitempty"`

	// Indicates whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSSHKey *bool `json:"isAuthenticationWithSshKey,omitempty"`

	// The lab subnet name of the virtual machine.
	LabSubnetName *string `json:"labSubnetName,omitempty"`

	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkID *string `json:"labVirtualNetworkId,omitempty"`

	// The network interface properties.
	NetworkInterface *NetworkInterfaceProperties `json:"networkInterface,omitempty"`

	// The notes of the virtual machine.
	Notes *string `json:"notes,omitempty"`

	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
	// virtual machine image.
	OSDiskSizeGb *int32 `json:"osDiskSizeGb,omitempty"`

	// The object identifier of the owner of the virtual machine.
	OwnerObjectID *string `json:"ownerObjectId,omitempty"`

	// The user principal name of the virtual machine owner.
	OwnerUserPrincipalName *string `json:"ownerUserPrincipalName,omitempty"`

	// The password of the virtual machine administrator.
	Password *string `json:"password,omitempty"`

	// The id of the plan associated with the virtual machine image
	PlanID *string `json:"planId,omitempty"`

	// The SSH key of the virtual machine administrator.
	SSHKey *string `json:"sshKey,omitempty"`

	// Virtual Machine schedules to be created
	ScheduleParameters []*ScheduleCreationParameter `json:"scheduleParameters,omitempty"`

	// Option to apply more security protection for VMs.
	SecurityProfile *SecurityProfile `json:"securityProfile,omitempty"`

	// The shared image resource identifier of the virtual machine.
	SharedImageID *string `json:"sharedImageId,omitempty"`

	// The shared image version for the specified shared image Id. Will use latest if not specified.
	SharedImageVersion *string `json:"sharedImageVersion,omitempty"`

	// The size of the virtual machine.
	Size *string `json:"size,omitempty"`

	// Storage type to use for virtual machine (i.e. Standard, Premium, StandardSSD).
	StorageType *StorageType `json:"storageType,omitempty"`

	// The user name of the virtual machine.
	UserName *string `json:"userName,omitempty"`

	// READ-ONLY; The applicable schedule for the virtual machine.
	ApplicableSchedule *ApplicableSchedule `json:"applicableSchedule,omitempty" azure:"ro"`

	// READ-ONLY; The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus *ArtifactDeploymentStatusProperties `json:"artifactDeploymentStatus,omitempty" azure:"ro"`

	// READ-ONLY; Flag to determine if apply artifacts can be triggered at the time of fetching the document.
	CanApplyArtifacts *bool `json:"canApplyArtifacts,omitempty" azure:"ro"`

	// READ-ONLY; The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeID *string `json:"computeId,omitempty" azure:"ro"`

	// READ-ONLY; The compute virtual machine properties.
	ComputeVM *ComputeVMProperties `json:"computeVm,omitempty" azure:"ro"`

	// READ-ONLY; The email address of creator of the virtual machine.
	CreatedByUser *string `json:"createdByUser,omitempty" azure:"ro"`

	// READ-ONLY; The object identifier of the creator of the virtual machine.
	CreatedByUserID *string `json:"createdByUserId,omitempty" azure:"ro"`

	// READ-ONLY; The fully-qualified domain name of the virtual machine.
	Fqdn *string `json:"fqdn,omitempty" azure:"ro"`

	// READ-ONLY; Last known compute power state captured in DTL
	LastKnownPowerState *string `json:"lastKnownPowerState,omitempty" azure:"ro"`

	// READ-ONLY; The OS type of the virtual machine.
	OSType *string `json:"osType,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`

	// READ-ONLY; Tells source of creation of lab virtual machine. Output property only.
	VirtualMachineCreationSource *VirtualMachineCreationSource `json:"virtualMachineCreationSource,omitempty" azure:"ro"`
}

// LabVirtualMachineFragment - Patch
type LabVirtualMachineFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// LabVirtualMachineList - Contains a list of virtualMachines and their properties
type LabVirtualMachineList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of virtualMachines and their properties
	Value []*LabVirtualMachine `json:"value,omitempty"`
}

// LabVirtualMachineProperties - Properties of a virtual machine.
type LabVirtualMachineProperties struct {
	// Indicates whether another user can take ownership of the virtual machine
	AllowClaim *bool `json:"allowClaim,omitempty"`

	// The artifacts to be installed on the virtual machine.
	Artifacts []*ArtifactInstallProperties `json:"artifacts,omitempty"`

	// The creation date of the virtual machine.
	CreatedDate *time.Time `json:"createdDate,omitempty"`

	// The custom image identifier of the virtual machine.
	CustomImageID *string `json:"customImageId,omitempty"`

	// New or existing data disks to attach to the virtual machine after creation
	DataDiskParameters []*DataDiskProperties `json:"dataDiskParameters,omitempty"`

	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIPAddress *bool `json:"disallowPublicIpAddress,omitempty"`

	// The resource ID of the environment that contains this virtual machine, if any.
	EnvironmentID *string `json:"environmentId,omitempty"`

	// The expiration date for VM.
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`

	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference *GalleryImageReference `json:"galleryImageReference,omitempty"`

	// The shared gallery image version resource identifier of the virtual machine.
	GalleryImageVersionID *string `json:"galleryImageVersionId,omitempty"`

	// Indicates whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSSHKey *bool `json:"isAuthenticationWithSshKey,omitempty"`

	// The lab subnet name of the virtual machine.
	LabSubnetName *string `json:"labSubnetName,omitempty"`

	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkID *string `json:"labVirtualNetworkId,omitempty"`

	// The network interface properties.
	NetworkInterface *NetworkInterfaceProperties `json:"networkInterface,omitempty"`

	// The notes of the virtual machine.
	Notes *string `json:"notes,omitempty"`

	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
	// virtual machine image.
	OSDiskSizeGb *int32 `json:"osDiskSizeGb,omitempty"`

	// The object identifier of the owner of the virtual machine.
	OwnerObjectID *string `json:"ownerObjectId,omitempty"`

	// The user principal name of the virtual machine owner.
	OwnerUserPrincipalName *string `json:"ownerUserPrincipalName,omitempty"`

	// The password of the virtual machine administrator.
	Password *string `json:"password,omitempty"`

	// The id of the plan associated with the virtual machine image
	PlanID *string `json:"planId,omitempty"`

	// The SSH key of the virtual machine administrator.
	SSHKey *string `json:"sshKey,omitempty"`

	// Virtual Machine schedules to be created
	ScheduleParameters []*ScheduleCreationParameter `json:"scheduleParameters,omitempty"`

	// Option to apply more security protection for VMs.
	SecurityProfile *SecurityProfile `json:"securityProfile,omitempty"`

	// The shared image resource identifier of the virtual machine.
	SharedImageID *string `json:"sharedImageId,omitempty"`

	// The shared image version for the specified shared image Id. Will use latest if not specified.
	SharedImageVersion *string `json:"sharedImageVersion,omitempty"`

	// The size of the virtual machine.
	Size *string `json:"size,omitempty"`

	// Storage type to use for virtual machine (i.e. Standard, Premium, StandardSSD).
	StorageType *StorageTypes `json:"storageType,omitempty"`

	// The user name of the virtual machine.
	UserName *string `json:"userName,omitempty"`

	// READ-ONLY; The applicable schedule for the virtual machine.
	ApplicableSchedule *ApplicableSchedule `json:"applicableSchedule,omitempty" azure:"ro"`

	// READ-ONLY; The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus *ArtifactDeploymentStatusProperties `json:"artifactDeploymentStatus,omitempty" azure:"ro"`

	// READ-ONLY; Flag to determine if apply artifacts can be triggered at the time of fetching the document.
	CanApplyArtifacts *bool `json:"canApplyArtifacts,omitempty" azure:"ro"`

	// READ-ONLY; The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeID *string `json:"computeId,omitempty" azure:"ro"`

	// READ-ONLY; The compute virtual machine properties.
	ComputeVM *ComputeVMProperties `json:"computeVm,omitempty" azure:"ro"`

	// READ-ONLY; The email address of creator of the virtual machine.
	CreatedByUser *string `json:"createdByUser,omitempty" azure:"ro"`

	// READ-ONLY; The object identifier of the creator of the virtual machine.
	CreatedByUserID *string `json:"createdByUserId,omitempty" azure:"ro"`

	// READ-ONLY; The fully-qualified domain name of the virtual machine.
	Fqdn *string `json:"fqdn,omitempty" azure:"ro"`

	// READ-ONLY; Last known compute power state captured in DTL
	LastKnownPowerState *string `json:"lastKnownPowerState,omitempty" azure:"ro"`

	// READ-ONLY; The OS type of the virtual machine.
	OSType *string `json:"osType,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`

	// READ-ONLY; Tells source of creation of lab virtual machine. Output property only.
	VirtualMachineCreationSource *VirtualMachineCreationSource `json:"virtualMachineCreationSource,omitempty" azure:"ro"`
}

// LabsClientBeginClaimAnyVMOptions contains the optional parameters for the LabsClient.BeginClaimAnyVM method.
type LabsClientBeginClaimAnyVMOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientBeginCreateEnvironmentOptions contains the optional parameters for the LabsClient.BeginCreateEnvironment method.
type LabsClientBeginCreateEnvironmentOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientBeginCreateOrUpdateOptions contains the optional parameters for the LabsClient.BeginCreateOrUpdate method.
type LabsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientBeginDeleteOptions contains the optional parameters for the LabsClient.BeginDelete method.
type LabsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientBeginExportResourceUsageOptions contains the optional parameters for the LabsClient.BeginExportResourceUsage
// method.
type LabsClientBeginExportResourceUsageOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientBeginImportVirtualMachineOptions contains the optional parameters for the LabsClient.BeginImportVirtualMachine
// method.
type LabsClientBeginImportVirtualMachineOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientEnsureCurrentUserProfileOptions contains the optional parameters for the LabsClient.EnsureCurrentUserProfile
// method.
type LabsClientEnsureCurrentUserProfileOptions struct {
	// placeholder for future optional parameters
}

// LabsClientGenerateUploadURIOptions contains the optional parameters for the LabsClient.GenerateUploadURI method.
type LabsClientGenerateUploadURIOptions struct {
	// placeholder for future optional parameters
}

// LabsClientGetOptions contains the optional parameters for the LabsClient.Get method.
type LabsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'
	Expand *string
}

// LabsClientListByResourceGroupOptions contains the optional parameters for the LabsClient.NewListByResourceGroupPager method.
type LabsClientListByResourceGroupOptions struct {
	// Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// LabsClientListBySubscriptionOptions contains the optional parameters for the LabsClient.NewListBySubscriptionPager method.
type LabsClientListBySubscriptionOptions struct {
	// Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// LabsClientListVhdsOptions contains the optional parameters for the LabsClient.NewListVhdsPager method.
type LabsClientListVhdsOptions struct {
	// placeholder for future optional parameters
}

// LabsClientUpdateOptions contains the optional parameters for the LabsClient.Update method.
type LabsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// LinuxOsInfo - Information about a Linux OS.
type LinuxOsInfo struct {
	// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
	LinuxOsState *LinuxOsState `json:"linuxOsState,omitempty"`
}

// LocationData - Metadata pertaining to the geographic location of the resource.
type LocationData struct {
	// REQUIRED; A canonical name for the geographic or physical location.
	Name *string `json:"name,omitempty"`

	// The city or locality where the resource is located.
	City *string `json:"city,omitempty"`

	// The country or region where the resource is located
	CountryOrRegion *string `json:"countryOrRegion,omitempty"`

	// The district, state, or province where the resource is located.
	District *string `json:"district,omitempty"`
}

// NetworkInterfaceProperties - Properties of a network interface.
type NetworkInterfaceProperties struct {
	// The DNS name.
	DNSName *string `json:"dnsName,omitempty"`

	// The private IP address.
	PrivateIPAddress *string `json:"privateIpAddress,omitempty"`

	// The public IP address.
	PublicIPAddress *string `json:"publicIpAddress,omitempty"`

	// The resource ID of the public IP address.
	PublicIPAddressID *string `json:"publicIpAddressId,omitempty"`

	// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop
	// Protocol).
	RdpAuthority *string `json:"rdpAuthority,omitempty"`

	// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
	SSHAuthority *string `json:"sshAuthority,omitempty"`

	// The configuration for sharing a public IP address across multiple virtual machines.
	SharedPublicIPAddressConfiguration *SharedPublicIPAddressConfiguration `json:"sharedPublicIpAddressConfiguration,omitempty"`

	// The resource ID of the sub net.
	SubnetID *string `json:"subnetId,omitempty"`

	// The resource ID of the virtual network.
	VirtualNetworkID *string `json:"virtualNetworkId,omitempty"`
}

// NotificationChannel - A notification.
type NotificationChannel struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *NotificationChannelProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// NotificationChannelFragment - Patch
type NotificationChannelFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// NotificationChannelList - Contains a list of notificationChannels and their properties
type NotificationChannelList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of notificationChannels and their properties
	Value []*NotificationChannel `json:"value,omitempty"`
}

// NotificationChannelProperties - Properties of a schedule.
type NotificationChannelProperties struct {
	// Description of notification.
	Description *string `json:"description,omitempty"`

	// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
	EmailRecipient *string `json:"emailRecipient,omitempty"`

	// The list of event for which this notification is enabled.
	Events []*Event `json:"events,omitempty"`

	// The locale to use when sending a notification (fallback for unsupported languages is EN).
	NotificationLocale *string `json:"notificationLocale,omitempty"`

	// The webhook URL to send notifications to.
	WebHookURL *string `json:"webHookUrl,omitempty"`

	// READ-ONLY; The creation date of the notification channel.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// NotificationChannelsClientCreateOrUpdateOptions contains the optional parameters for the NotificationChannelsClient.CreateOrUpdate
// method.
type NotificationChannelsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// NotificationChannelsClientDeleteOptions contains the optional parameters for the NotificationChannelsClient.Delete method.
type NotificationChannelsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// NotificationChannelsClientGetOptions contains the optional parameters for the NotificationChannelsClient.Get method.
type NotificationChannelsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=webHookUrl)'
	Expand *string
}

// NotificationChannelsClientListOptions contains the optional parameters for the NotificationChannelsClient.NewListPager
// method.
type NotificationChannelsClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=webHookUrl)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// NotificationChannelsClientNotifyOptions contains the optional parameters for the NotificationChannelsClient.Notify method.
type NotificationChannelsClientNotifyOptions struct {
	// placeholder for future optional parameters
}

// NotificationChannelsClientUpdateOptions contains the optional parameters for the NotificationChannelsClient.Update method.
type NotificationChannelsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// NotificationSettings - Notification settings for a schedule.
type NotificationSettings struct {
	// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
	EmailRecipient *string `json:"emailRecipient,omitempty"`

	// The locale to use when sending a notification (fallback for unsupported languages is EN).
	NotificationLocale *string `json:"notificationLocale,omitempty"`

	// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
	Status *EnableStatus `json:"status,omitempty"`

	// Time in minutes before event at which notification will be sent.
	TimeInMinutes *int32 `json:"timeInMinutes,omitempty"`

	// The webhook URL to which the notification will be sent.
	WebhookURL *string `json:"webhookUrl,omitempty"`
}

// NotifyParameters - Properties for generating a Notification.
type NotifyParameters struct {
	// The type of event (i.e. AutoShutdown, Cost)
	EventName *NotificationChannelEventType `json:"eventName,omitempty"`

	// Properties for the notification in json format.
	JSONPayload *string `json:"jsonPayload,omitempty"`
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay `json:"display,omitempty"`

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType `json:"actionType,omitempty" azure:"ro"`

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool `json:"isDataAction,omitempty" azure:"ro"`

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin `json:"origin,omitempty" azure:"ro"`
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string `json:"provider,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string `json:"resource,omitempty" azure:"ro"`
}

// OperationError - Error details for the operation in case of a failure.
type OperationError struct {
	// The error code of the operation error.
	Code *string `json:"code,omitempty"`

	// The error message of the operation error.
	Message *string `json:"message,omitempty"`
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation `json:"value,omitempty" azure:"ro"`
}

// OperationMetadata - The REST API operation supported by DevTestLab ResourceProvider.
type OperationMetadata struct {
	// The object that describes the operations
	Display *OperationMetadataDisplay `json:"display,omitempty"`

	// Operation name: {provider}/{resource}/{operation}
	Name *string `json:"name,omitempty"`
}

// OperationMetadataDisplay - The object that describes the operations
type OperationMetadataDisplay struct {
	// Friendly name of the operation
	Description *string `json:"description,omitempty"`

	// Operation type: read, write, delete, listKeys/action, etc.
	Operation *string `json:"operation,omitempty"`

	// Friendly name of the resource provider
	Provider *string `json:"provider,omitempty"`

	// Resource type on which the operation is performed.
	Resource *string `json:"resource,omitempty"`
}

// OperationResult - An Operation Result
type OperationResult struct {
	// Error details for the operation in case of a failure.
	Error *OperationError `json:"error,omitempty"`

	// The operation status.
	Status *string `json:"status,omitempty"`

	// The status code for the operation.
	StatusCode *HTTPStatusCode `json:"statusCode,omitempty"`
}

// OperationStatusResult - The current status of an async operation.
type OperationStatusResult struct {
	// REQUIRED; Operation status.
	Status *string `json:"status,omitempty"`

	// The end time of the operation.
	EndTime *time.Time `json:"endTime,omitempty"`

	// If present, details of the operation error.
	Error *ErrorDetail `json:"error,omitempty"`

	// Fully qualified ID for the async operation.
	ID *string `json:"id,omitempty"`

	// Name of the async operation.
	Name *string `json:"name,omitempty"`

	// The operations list.
	Operations []*OperationStatusResult `json:"operations,omitempty"`

	// Percent of the operation that is complete.
	PercentComplete *float32 `json:"percentComplete,omitempty"`

	// The start time of the operation.
	StartTime *time.Time `json:"startTime,omitempty"`

	// READ-ONLY; Fully qualified ID of the resource against which the original async operation was started.
	ResourceID *string `json:"resourceId,omitempty" azure:"ro"`
}

// OperationsClientGetOptions contains the optional parameters for the OperationsClient.Get method.
type OperationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ParameterInfo - Information about an artifact's parameter.
type ParameterInfo struct {
	// The name of the artifact parameter.
	Name *string `json:"name,omitempty"`

	// The value of the artifact parameter.
	Value *string `json:"value,omitempty"`
}

// ParametersValueFileInfo - A file containing a set of parameter values for an ARM template.
type ParametersValueFileInfo struct {
	// File name.
	FileName *string `json:"fileName,omitempty"`

	// Contents of the file.
	ParametersValueInfo any `json:"parametersValueInfo,omitempty"`
}

// PercentageCostThresholdProperties - Properties of a percentage cost threshold.
type PercentageCostThresholdProperties struct {
	// The cost threshold value.
	ThresholdValue *float64 `json:"thresholdValue,omitempty"`
}

// Plan for the resource.
type Plan struct {
	// REQUIRED; A user defined name of the 3rd Party Artifact that is being procured.
	Name *string `json:"name,omitempty"`

	// REQUIRED; The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact
	// at the time of Data Market onboarding.
	Product *string `json:"product,omitempty"`

	// REQUIRED; The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
	Publisher *string `json:"publisher,omitempty"`

	// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
	PromotionCode *string `json:"promotionCode,omitempty"`

	// The version of the desired product/artifact.
	Version *string `json:"version,omitempty"`
}

// PoliciesClientCreateOrUpdateOptions contains the optional parameters for the PoliciesClient.CreateOrUpdate method.
type PoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PoliciesClientDeleteOptions contains the optional parameters for the PoliciesClient.Delete method.
type PoliciesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PoliciesClientGetOptions contains the optional parameters for the PoliciesClient.Get method.
type PoliciesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=description)'
	Expand *string
}

// PoliciesClientListOptions contains the optional parameters for the PoliciesClient.NewListPager method.
type PoliciesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=description)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// PoliciesClientUpdateOptions contains the optional parameters for the PoliciesClient.Update method.
type PoliciesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// Policy - A Policy.
type Policy struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *PolicyProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PolicyFragment - Patch
type PolicyFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// PolicyList - Contains a list of policies and their properties
type PolicyList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of policies and their properties
	Value []*Policy `json:"value,omitempty"`
}

// PolicyProperties - Properties of a Policy.
type PolicyProperties struct {
	// The description of the policy.
	Description *string `json:"description,omitempty"`

	// The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
	EvaluatorType *PolicyEvaluatorType `json:"evaluatorType,omitempty"`

	// The fact data of the policy.
	FactData *string `json:"factData,omitempty"`

	// The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
	FactName *PolicyFactName `json:"factName,omitempty"`

	// The status of the policy.
	Status *PolicyStatus `json:"status,omitempty"`

	// The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
	Threshold *string `json:"threshold,omitempty"`

	// READ-ONLY; The creation date of the policy.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// PolicySet - A PolicySet.
type PolicySet struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *PolicySetProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PolicySetList - Contains a list of policySets and their properties
type PolicySetList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// READ-ONLY; List of policySets and their properties
	Value []*PolicySet `json:"value,omitempty" azure:"ro"`
}

// PolicySetProperties - Properties of a PolicySet.
type PolicySetProperties struct {
	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// PolicySetResult - Result of a policy set evaluation.
type PolicySetResult struct {
	// A value indicating whether this policy set evaluation has discovered violations.
	HasError *bool `json:"hasError,omitempty"`

	// The list of policy violations.
	PolicyViolations []*PolicyViolation `json:"policyViolations,omitempty"`
}

// PolicySetsClientEvaluatePoliciesOptions contains the optional parameters for the PolicySetsClient.EvaluatePolicies method.
type PolicySetsClientEvaluatePoliciesOptions struct {
	// placeholder for future optional parameters
}

// PolicySetsClientListOptions contains the optional parameters for the PolicySetsClient.NewListPager method.
type PolicySetsClientListOptions struct {
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// PolicyViolation - Policy violation.
type PolicyViolation struct {
	// The code of the policy violation.
	Code *string `json:"code,omitempty"`

	// The message of the policy violation.
	Message *string `json:"message,omitempty"`
}

// Port - Properties of a network port.
type Port struct {
	// Backend port of the target virtual machine.
	BackendPort *int32 `json:"backendPort,omitempty"`

	// Protocol type of the port.
	TransportProtocol *TransportProtocol `json:"transportProtocol,omitempty"`
}

// ProviderOperationResult - Result of the request to list REST API operations
type ProviderOperationResult struct {
	// List of operations supported by the resource provider.
	Value []*OperationMetadata `json:"value,omitempty"`

	// READ-ONLY; URL to get the next set of operation list results if there are any.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// ProviderOperationsClientListOptions contains the optional parameters for the ProviderOperationsClient.NewListPager method.
type ProviderOperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a
// location
type ProxyResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RdpConnection - Represents a .rdp file
type RdpConnection struct {
	// The contents of the .rdp file
	Contents *string `json:"contents,omitempty"`
}

// ResizeLabVirtualMachineProperties - Request body for resizing a virtual machine.
type ResizeLabVirtualMachineProperties struct {
	// Specifies the size of the virtual machine.
	Size *string `json:"size,omitempty"`
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ResourceModelWithAllowedPropertySet - The resource model definition containing the full set of allowed properties for a
// resource. Except properties bag, there cannot be a top level property outside of this set.
type ResourceModelWithAllowedPropertySet struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string                                      `json:"location,omitempty"`
	Identity *ResourceModelWithAllowedPropertySetIdentity `json:"identity,omitempty"`

	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are
	// a kind of Microsoft.Web/sites type. If supported, the resource provider must
	// validate and persist this value.
	Kind *string `json:"kind,omitempty"`

	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another
	// Azure resource. If this is present, complete mode deployment will not
	// delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy *string                                  `json:"managedBy,omitempty"`
	Plan      *ResourceModelWithAllowedPropertySetPlan `json:"plan,omitempty"`
	SKU       *ResourceModelWithAllowedPropertySetSKU  `json:"sku,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; The etag field is not required. If it is provided in the response body, it must also be provided as a header
	// per the normal etag convention. Entity tags are used for comparing two or more entities
	// from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match
	// (section 14.26), and If-Range (section 14.27) header fields.
	Etag *string `json:"etag,omitempty" azure:"ro"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

type ResourceModelWithAllowedPropertySetIdentity struct {
	// The identity type.
	Type *string `json:"type,omitempty"`

	// READ-ONLY; The principal ID of resource identity. The value must be an UUID.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The tenant ID of resource. The value must be an UUID.
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

type ResourceModelWithAllowedPropertySetPlan struct {
	// REQUIRED; A user defined name of the 3rd Party Artifact that is being procured.
	Name *string `json:"name,omitempty"`

	// REQUIRED; The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact
	// at the time of Data Market onboarding.
	Product *string `json:"product,omitempty"`

	// REQUIRED; The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
	Publisher *string `json:"publisher,omitempty"`

	// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
	PromotionCode *string `json:"promotionCode,omitempty"`

	// The version of the desired product/artifact.
	Version *string `json:"version,omitempty"`
}

type ResourceModelWithAllowedPropertySetSKU struct {
	// REQUIRED; The name of the SKU. E.g. P3. It is typically a letter+number code
	Name *string `json:"name,omitempty"`

	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the
	// resource this may be omitted.
	Capacity *int32 `json:"capacity,omitempty"`

	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `json:"family,omitempty"`

	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `json:"size,omitempty"`

	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required
	// on a PUT.
	Tier *SKUTier `json:"tier,omitempty"`
}

// RetargetScheduleProperties - Properties for retargeting a virtual machine schedule.
type RetargetScheduleProperties struct {
	// The resource Id of the virtual machine on which the schedule operates
	CurrentResourceID *string `json:"currentResourceId,omitempty"`

	// The resource Id of the virtual machine that the schedule should be retargeted to
	TargetResourceID *string `json:"targetResourceId,omitempty"`
}

// SKU - The resource model definition representing SKU
type SKU struct {
	// REQUIRED; The name of the SKU. E.g. P3. It is typically a letter+number code
	Name *string `json:"name,omitempty"`

	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the
	// resource this may be omitted.
	Capacity *int32 `json:"capacity,omitempty"`

	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `json:"family,omitempty"`

	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `json:"size,omitempty"`

	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required
	// on a PUT.
	Tier *SKUTier `json:"tier,omitempty"`
}

// Schedule - A schedule.
type Schedule struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *ScheduleProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ScheduleCreationParameter - Properties for creating a schedule.
type ScheduleCreationParameter struct {
	// The name of the virtual machine or environment
	Name *string `json:"name,omitempty"`

	// The properties of the schedule.
	Properties *ScheduleCreationParameterProperties `json:"properties,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; The location of the new virtual machine or environment
	Location *string `json:"location,omitempty" azure:"ro"`
}

// ScheduleCreationParameterProperties - Properties for schedule creation.
type ScheduleCreationParameterProperties struct {
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence *DayDetails `json:"dailyRecurrence,omitempty"`

	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence *HourDetails `json:"hourlyRecurrence,omitempty"`

	// Notification settings.
	NotificationSettings *NotificationSettings `json:"notificationSettings,omitempty"`

	// The status of the schedule (i.e. Enabled, Disabled)
	Status *EnableStatus `json:"status,omitempty"`

	// The resource ID to which the schedule belongs
	TargetResourceID *string `json:"targetResourceId,omitempty"`

	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType *string `json:"taskType,omitempty"`

	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneID *string `json:"timeZoneId,omitempty"`

	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence *WeekDetails `json:"weeklyRecurrence,omitempty"`

	// READ-ONLY; The creation date of the schedule.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// ScheduleFragment - Patch
type ScheduleFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// ScheduleList - Contains a list of schedules and their properties
type ScheduleList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of schedules and their properties
	Value []*Schedule `json:"value,omitempty"`
}

// ScheduleProperties - Properties of a schedule.
type ScheduleProperties struct {
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence *DayDetails `json:"dailyRecurrence,omitempty"`

	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence *HourDetails `json:"hourlyRecurrence,omitempty"`

	// Notification settings.
	NotificationSettings *NotificationSettings `json:"notificationSettings,omitempty"`

	// The status of the schedule (i.e. Enabled, Disabled)
	Status *EnableStatus `json:"status,omitempty"`

	// The resource ID to which the schedule belongs
	TargetResourceID *string `json:"targetResourceId,omitempty"`

	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType *string `json:"taskType,omitempty"`

	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneID *string `json:"timeZoneId,omitempty"`

	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence *WeekDetails `json:"weeklyRecurrence,omitempty"`

	// READ-ONLY; The creation date of the schedule.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// SchedulesClientBeginExecuteOptions contains the optional parameters for the SchedulesClient.BeginExecute method.
type SchedulesClientBeginExecuteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SchedulesClientCreateOrUpdateOptions contains the optional parameters for the SchedulesClient.CreateOrUpdate method.
type SchedulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SchedulesClientDeleteOptions contains the optional parameters for the SchedulesClient.Delete method.
type SchedulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SchedulesClientGetOptions contains the optional parameters for the SchedulesClient.Get method.
type SchedulesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
}

// SchedulesClientListApplicableOptions contains the optional parameters for the SchedulesClient.NewListApplicablePager method.
type SchedulesClientListApplicableOptions struct {
	// placeholder for future optional parameters
}

// SchedulesClientListOptions contains the optional parameters for the SchedulesClient.NewListPager method.
type SchedulesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// SchedulesClientUpdateOptions contains the optional parameters for the SchedulesClient.Update method.
type SchedulesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// Secret - A secret.
type Secret struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *SecretProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SecretFragment - Patch
type SecretFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// SecretList - Contains a list of secrets and their properties
type SecretList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of secrets and their properties
	Value []*Secret `json:"value,omitempty"`
}

// SecretProperties - Properties of a secret.
type SecretProperties struct {
	// The value of the secret for secret creation.
	Value *string `json:"value,omitempty"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// SecretsClientBeginCreateOrUpdateOptions contains the optional parameters for the SecretsClient.BeginCreateOrUpdate method.
type SecretsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SecretsClientDeleteOptions contains the optional parameters for the SecretsClient.Delete method.
type SecretsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SecretsClientGetOptions contains the optional parameters for the SecretsClient.Get method.
type SecretsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=value)'
	Expand *string
}

// SecretsClientListOptions contains the optional parameters for the SecretsClient.NewListPager method.
type SecretsClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=value)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// SecretsClientUpdateOptions contains the optional parameters for the SecretsClient.Update method.
type SecretsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SecurityProfile - The security profile settings for a virtual machine.
type SecurityProfile struct {
	// Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings.
	// Default: UefiSettings will not be enabled unless this property is set.
	SecurityType *SecurityTypes `json:"securityType,omitempty"`

	// Security settings like secure boot and vTPM. Structure must be null if SecurityType string is null.
	UefiSettings *UefiSettings `json:"uefiSettings,omitempty"`
}

// ServiceFabric - A Service Fabric.
type ServiceFabric struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *ServiceFabricProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ServiceFabricFragment - Patch
type ServiceFabricFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// ServiceFabricList - Contains a list of serviceFabrics and their properties
type ServiceFabricList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of serviceFabrics and their properties
	Value []*ServiceFabric `json:"value,omitempty"`
}

// ServiceFabricProperties - Properties of a service fabric.
type ServiceFabricProperties struct {
	// The resource id of the environment under which the service fabric resource is present
	EnvironmentID *string `json:"environmentId,omitempty"`

	// The backing service fabric resource's id
	ExternalServiceFabricID *string `json:"externalServiceFabricId,omitempty"`

	// READ-ONLY; The applicable schedule for the virtual machine.
	ApplicableSchedule *ApplicableSchedule `json:"applicableSchedule,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// ServiceFabricSchedulesClientBeginExecuteOptions contains the optional parameters for the ServiceFabricSchedulesClient.BeginExecute
// method.
type ServiceFabricSchedulesClientBeginExecuteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceFabricSchedulesClientCreateOrUpdateOptions contains the optional parameters for the ServiceFabricSchedulesClient.CreateOrUpdate
// method.
type ServiceFabricSchedulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServiceFabricSchedulesClientDeleteOptions contains the optional parameters for the ServiceFabricSchedulesClient.Delete
// method.
type ServiceFabricSchedulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ServiceFabricSchedulesClientGetOptions contains the optional parameters for the ServiceFabricSchedulesClient.Get method.
type ServiceFabricSchedulesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
}

// ServiceFabricSchedulesClientListOptions contains the optional parameters for the ServiceFabricSchedulesClient.NewListPager
// method.
type ServiceFabricSchedulesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// ServiceFabricSchedulesClientUpdateOptions contains the optional parameters for the ServiceFabricSchedulesClient.Update
// method.
type ServiceFabricSchedulesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServiceFabricsClientBeginCreateOrUpdateOptions contains the optional parameters for the ServiceFabricsClient.BeginCreateOrUpdate
// method.
type ServiceFabricsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceFabricsClientBeginDeleteOptions contains the optional parameters for the ServiceFabricsClient.BeginDelete method.
type ServiceFabricsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceFabricsClientBeginStartOptions contains the optional parameters for the ServiceFabricsClient.BeginStart method.
type ServiceFabricsClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceFabricsClientBeginStopOptions contains the optional parameters for the ServiceFabricsClient.BeginStop method.
type ServiceFabricsClientBeginStopOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceFabricsClientGetOptions contains the optional parameters for the ServiceFabricsClient.Get method.
type ServiceFabricsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($expand=applicableSchedule)'
	Expand *string
}

// ServiceFabricsClientListApplicableSchedulesOptions contains the optional parameters for the ServiceFabricsClient.ListApplicableSchedules
// method.
type ServiceFabricsClientListApplicableSchedulesOptions struct {
	// placeholder for future optional parameters
}

// ServiceFabricsClientListOptions contains the optional parameters for the ServiceFabricsClient.NewListPager method.
type ServiceFabricsClientListOptions struct {
	// Specify the $expand query. Example: 'properties($expand=applicableSchedule)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// ServiceFabricsClientUpdateOptions contains the optional parameters for the ServiceFabricsClient.Update method.
type ServiceFabricsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServiceRunner - A container for a managed identity to execute DevTest lab services.
type ServiceRunner struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The properties of the resource.
	Properties *ServiceRunnerProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ServiceRunnerList - Contains a list of serviceRunners and their properties
type ServiceRunnerList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of serviceRunners and their properties
	Value []*ServiceRunner `json:"value,omitempty"`
}

// ServiceRunnerProperties - Properties of a virtual machine.
type ServiceRunnerProperties struct {
	// The purpose of bringing the identity to the lab. Ex: To use during Environment creation or to deploy on the VMs.
	IdentityUsageType *string `json:"identityUsageType,omitempty"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// ServiceRunnersClientBeginCreateOrUpdateOptions contains the optional parameters for the ServiceRunnersClient.BeginCreateOrUpdate
// method.
type ServiceRunnersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceRunnersClientBeginDeleteOptions contains the optional parameters for the ServiceRunnersClient.BeginDelete method.
type ServiceRunnersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceRunnersClientGetOptions contains the optional parameters for the ServiceRunnersClient.Get method.
type ServiceRunnersClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServiceRunnersClientListOptions contains the optional parameters for the ServiceRunnersClient.NewListPager method.
type ServiceRunnersClientListOptions struct {
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// SharedGalleriesClientCreateOrUpdateOptions contains the optional parameters for the SharedGalleriesClient.CreateOrUpdate
// method.
type SharedGalleriesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SharedGalleriesClientDeleteOptions contains the optional parameters for the SharedGalleriesClient.Delete method.
type SharedGalleriesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SharedGalleriesClientGetOptions contains the optional parameters for the SharedGalleriesClient.Get method.
type SharedGalleriesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=identity)'
	Expand *string
}

// SharedGalleriesClientListOptions contains the optional parameters for the SharedGalleriesClient.NewListPager method.
type SharedGalleriesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=identity)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// SharedGalleriesClientUpdateOptions contains the optional parameters for the SharedGalleriesClient.Update method.
type SharedGalleriesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SharedGallery - Properties of a shared gallery
type SharedGallery struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *SharedGalleryProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SharedGalleryFragment - Patch
type SharedGalleryFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// SharedGalleryList - Contains a list of sharedGalleries and their properties
type SharedGalleryList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of sharedGalleries and their properties
	Value []*SharedGallery `json:"value,omitempty"`
}

// SharedGalleryProperties - Properties of a shared gallery
type SharedGalleryProperties struct {
	// Enables all images in the gallery to be available in the lab for VM creation. This will override the EnableState on shared
	// images
	AllowAllImages *EnableState `json:"allowAllImages,omitempty"`

	// The shared image gallery resource Id
	GalleryID *string `json:"galleryId,omitempty"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// SharedImage - Properties of a shared image
type SharedImage struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *SharedImageProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SharedImageFragment - Patch
type SharedImageFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// SharedImageList - Contains a list of sharedImages and their properties
type SharedImageList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of sharedImages and their properties
	Value []*SharedImage `json:"value,omitempty"`
}

// SharedImageProperties - Properties of a shared image
type SharedImageProperties struct {
	// Shared Image definition name in shared image gallery
	DefinitionName *string `json:"definitionName,omitempty"`

	// Display name of the image
	DisplayName *string `json:"displayName,omitempty"`

	// Whether or not the image is enabled.
	EnableState *EnableState `json:"enableState,omitempty"`

	// The type of image in the gallery (generalized or specialized)
	ImageType *ImageType `json:"imageType,omitempty"`

	// The operating system of the image
	OSType *OsType `json:"osType,omitempty"`

	// List of image versions in definition
	Versions []*ImageVersionProperties `json:"versions,omitempty"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// SharedImagesClientCreateOrUpdateOptions contains the optional parameters for the SharedImagesClient.CreateOrUpdate method.
type SharedImagesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SharedImagesClientDeleteOptions contains the optional parameters for the SharedImagesClient.Delete method.
type SharedImagesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SharedImagesClientGetOptions contains the optional parameters for the SharedImagesClient.Get method.
type SharedImagesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($expand=versions)'
	Expand *string
}

// SharedImagesClientListOptions contains the optional parameters for the SharedImagesClient.NewListPager method.
type SharedImagesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($expand=versions)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// SharedImagesClientUpdateOptions contains the optional parameters for the SharedImagesClient.Update method.
type SharedImagesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SharedPublicIPAddressConfiguration - Properties of a virtual machine that determine how it is connected to a load balancer.
type SharedPublicIPAddressConfiguration struct {
	// The incoming NAT rules
	InboundNatRules []*InboundNatRule `json:"inboundNatRules,omitempty"`
}

// Subnet information.
type Subnet struct {
	// The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
	AllowPublicIP *UsagePermissionType `json:"allowPublicIp,omitempty"`

	// The name of the subnet as seen in the lab.
	LabSubnetName *string `json:"labSubnetName,omitempty"`

	// The resource ID of the subnet.
	ResourceID *string `json:"resourceId,omitempty"`
}

// SubnetOverride - Property overrides on a subnet of a virtual network.
type SubnetOverride struct {
	// The name given to the subnet within the lab.
	LabSubnetName *string `json:"labSubnetName,omitempty"`

	// The resource ID of the subnet.
	ResourceID *string `json:"resourceId,omitempty"`

	// Properties that virtual machines on this subnet will share.
	SharedPublicIPAddressConfiguration *SubnetSharedPublicIPAddressConfiguration `json:"sharedPublicIpAddressConfiguration,omitempty"`

	// Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
	UseInVMCreationPermission *UsagePermissionType `json:"useInVmCreationPermission,omitempty"`

	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
	UsePublicIPAddressPermission *UsagePermissionType `json:"usePublicIpAddressPermission,omitempty"`

	// The virtual network pool associated with this subnet.
	VirtualNetworkPoolName *string `json:"virtualNetworkPoolName,omitempty"`
}

// SubnetSharedPublicIPAddressConfiguration - Configuration for public IP address sharing.
type SubnetSharedPublicIPAddressConfiguration struct {
	// Backend ports that virtual machines on this subnet are allowed to expose
	AllowedPorts []*Port `json:"allowedPorts,omitempty"`
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// TargetCostProperties - Properties of a cost target.
type TargetCostProperties struct {
	// Cost thresholds.
	CostThresholds []*CostThresholdProperties `json:"costThresholds,omitempty"`

	// Reporting cycle end date.
	CycleEndDateTime *time.Time `json:"cycleEndDateTime,omitempty"`

	// Reporting cycle start date.
	CycleStartDateTime *time.Time `json:"cycleStartDateTime,omitempty"`

	// Reporting cycle type.
	CycleType *ReportingCycleType `json:"cycleType,omitempty"`

	// Target cost status
	Status *TargetCostStatus `json:"status,omitempty"`

	// Lab target cost
	Target *int32 `json:"target,omitempty"`
}

// UefiSettings - Security settings like secure boot and vTPM.
type UefiSettings struct {
	// Flag to enable or disable secure boot.
	SecureBootEnabled *bool `json:"secureBootEnabled,omitempty"`

	// Flag to enable or disable vTPM (virtual Trusted Platform Module).
	VTpmEnabled *bool `json:"vTpmEnabled,omitempty"`
}

// UpdateResource - Represents an update resource
type UpdateResource struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// User - Profile of a lab user.
type User struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *UserProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// UserFragment - Patch
type UserFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// UserIdentity - Identity attributes of a lab user.
type UserIdentity struct {
	// Set to the app Id of the client JWT making the request.
	AppID *string `json:"appId,omitempty"`

	// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for
	// example, object Id is not available.
	ObjectID *string `json:"objectId,omitempty"`

	// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
	PrincipalID *string `json:"principalId,omitempty"`

	// Set to the principal name / UPN of the client JWT making the request.
	PrincipalName *string `json:"principalName,omitempty"`

	// Set to the tenant ID of the client JWT making the request.
	TenantID *string `json:"tenantId,omitempty"`
}

// UserList - Contains a list of users and their properties
type UserList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of users and their properties
	Value []*User `json:"value,omitempty"`
}

// UserProperties - Properties of a lab user profile.
type UserProperties struct {
	// The identity of the user.
	Identity *UserIdentity `json:"identity,omitempty"`

	// The secret store of the user.
	SecretStore *UserSecretStore `json:"secretStore,omitempty"`

	// READ-ONLY; The creation date of the user profile.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// UserSecretStore - Properties of a user's secret store.
type UserSecretStore struct {
	// The ID of the user's Key vault.
	KeyVaultID *string `json:"keyVaultId,omitempty"`

	// The URI of the user's Key vault.
	KeyVaultURI *string `json:"keyVaultUri,omitempty"`
}

// UsersClientBeginCreateOrUpdateOptions contains the optional parameters for the UsersClient.BeginCreateOrUpdate method.
type UsersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
	// Profile of a lab user.
	User *User
}

// UsersClientBeginDeleteOptions contains the optional parameters for the UsersClient.BeginDelete method.
type UsersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// UsersClientGetOptions contains the optional parameters for the UsersClient.Get method.
type UsersClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=identity)'
	Expand *string
}

// UsersClientListOptions contains the optional parameters for the UsersClient.NewListPager method.
type UsersClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=identity)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// UsersClientUpdateOptions contains the optional parameters for the UsersClient.Update method.
type UsersClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachineSchedulesClientBeginExecuteOptions contains the optional parameters for the VirtualMachineSchedulesClient.BeginExecute
// method.
type VirtualMachineSchedulesClientBeginExecuteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachineSchedulesClientCreateOrUpdateOptions contains the optional parameters for the VirtualMachineSchedulesClient.CreateOrUpdate
// method.
type VirtualMachineSchedulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachineSchedulesClientDeleteOptions contains the optional parameters for the VirtualMachineSchedulesClient.Delete
// method.
type VirtualMachineSchedulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachineSchedulesClientGetOptions contains the optional parameters for the VirtualMachineSchedulesClient.Get method.
type VirtualMachineSchedulesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
}

// VirtualMachineSchedulesClientListOptions contains the optional parameters for the VirtualMachineSchedulesClient.NewListPager
// method.
type VirtualMachineSchedulesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// VirtualMachineSchedulesClientUpdateOptions contains the optional parameters for the VirtualMachineSchedulesClient.Update
// method.
type VirtualMachineSchedulesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachinesClientBeginAddDataDiskOptions contains the optional parameters for the VirtualMachinesClient.BeginAddDataDisk
// method.
type VirtualMachinesClientBeginAddDataDiskOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginApplyArtifactsOptions contains the optional parameters for the VirtualMachinesClient.BeginApplyArtifacts
// method.
type VirtualMachinesClientBeginApplyArtifactsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginClaimOptions contains the optional parameters for the VirtualMachinesClient.BeginClaim method.
type VirtualMachinesClientBeginClaimOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualMachinesClient.BeginCreateOrUpdate
// method.
type VirtualMachinesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginDeleteOptions contains the optional parameters for the VirtualMachinesClient.BeginDelete method.
type VirtualMachinesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginDetachDataDiskOptions contains the optional parameters for the VirtualMachinesClient.BeginDetachDataDisk
// method.
type VirtualMachinesClientBeginDetachDataDiskOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginRedeployOptions contains the optional parameters for the VirtualMachinesClient.BeginRedeploy
// method.
type VirtualMachinesClientBeginRedeployOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginResizeOptions contains the optional parameters for the VirtualMachinesClient.BeginResize method.
type VirtualMachinesClientBeginResizeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginRestartOptions contains the optional parameters for the VirtualMachinesClient.BeginRestart method.
type VirtualMachinesClientBeginRestartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginStartOptions contains the optional parameters for the VirtualMachinesClient.BeginStart method.
type VirtualMachinesClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginStopOptions contains the optional parameters for the VirtualMachinesClient.BeginStop method.
type VirtualMachinesClientBeginStopOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginTransferDisksOptions contains the optional parameters for the VirtualMachinesClient.BeginTransferDisks
// method.
type VirtualMachinesClientBeginTransferDisksOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginUnClaimOptions contains the optional parameters for the VirtualMachinesClient.BeginUnClaim method.
type VirtualMachinesClientBeginUnClaimOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientClearArtifactResultsOptions contains the optional parameters for the VirtualMachinesClient.ClearArtifactResults
// method.
type VirtualMachinesClientClearArtifactResultsOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachinesClientGetOptions contains the optional parameters for the VirtualMachinesClient.Get method.
type VirtualMachinesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'
	Expand *string
}

// VirtualMachinesClientGetRdpFileContentsOptions contains the optional parameters for the VirtualMachinesClient.GetRdpFileContents
// method.
type VirtualMachinesClientGetRdpFileContentsOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachinesClientListApplicableSchedulesOptions contains the optional parameters for the VirtualMachinesClient.ListApplicableSchedules
// method.
type VirtualMachinesClientListApplicableSchedulesOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachinesClientListOptions contains the optional parameters for the VirtualMachinesClient.NewListPager method.
type VirtualMachinesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// VirtualMachinesClientUpdateOptions contains the optional parameters for the VirtualMachinesClient.Update method.
type VirtualMachinesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetwork - A virtual network.
type VirtualNetwork struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The properties of the resource.
	Properties *VirtualNetworkProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// VirtualNetworkFragment - Patch
type VirtualNetworkFragment struct {
	// The identity of the resource.
	Identity *IdentityProperties `json:"identity,omitempty"`

	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// VirtualNetworkList - Contains a list of virtualNetworks and their properties
type VirtualNetworkList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of virtualNetworks and their properties
	Value []*VirtualNetwork `json:"value,omitempty"`
}

// VirtualNetworkProperties - Properties of a virtual network.
type VirtualNetworkProperties struct {
	// The allowed subnets of the virtual network.
	AllowedSubnets []*Subnet `json:"allowedSubnets,omitempty"`

	// The description of the virtual network.
	Description *string `json:"description,omitempty"`

	// The Microsoft.Network resource identifier of the virtual network.
	ExternalProviderResourceID *string `json:"externalProviderResourceId,omitempty"`

	// The subnet overrides of the virtual network.
	SubnetOverrides []*SubnetOverride `json:"subnetOverrides,omitempty"`

	// READ-ONLY; The creation date of the virtual network.
	CreatedDate *time.Time `json:"createdDate,omitempty" azure:"ro"`

	// READ-ONLY; The external subnet properties.
	ExternalSubnets []*ExternalSubnet `json:"externalSubnets,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning status of the resource.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty" azure:"ro"`
}

// VirtualNetworksClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualNetworksClient.BeginCreateOrUpdate
// method.
type VirtualNetworksClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworksClientBeginDeleteOptions contains the optional parameters for the VirtualNetworksClient.BeginDelete method.
type VirtualNetworksClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworksClientGetOptions contains the optional parameters for the VirtualNetworksClient.Get method.
type VirtualNetworksClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($expand=externalSubnets)'
	Expand *string
}

// VirtualNetworksClientListOptions contains the optional parameters for the VirtualNetworksClient.NewListPager method.
type VirtualNetworksClientListOptions struct {
	// Specify the $expand query. Example: 'properties($expand=externalSubnets)'
	Expand *string
	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')'
	Filter *string
	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string
	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// VirtualNetworksClientUpdateOptions contains the optional parameters for the VirtualNetworksClient.Update method.
type VirtualNetworksClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// WeekDetails - Properties of a weekly schedule.
type WeekDetails struct {
	// The time of the day the schedule will occur.
	Time *string `json:"time,omitempty"`

	// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
	Weekdays []*string `json:"weekdays,omitempty"`
}

// WeekDetailsFragment - Properties of a weekly schedule.
type WeekDetailsFragment struct {
	// The time of the day the schedule will occur.
	Time *string `json:"time,omitempty"`

	// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
	Weekdays []*string `json:"weekdays,omitempty"`
}

// WindowsOsInfo - Information about a Windows OS.
type WindowsOsInfo struct {
	// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
	WindowsOsState *WindowsOsState `json:"windowsOsState,omitempty"`
}
