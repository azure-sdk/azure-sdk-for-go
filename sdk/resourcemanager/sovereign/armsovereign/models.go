//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsovereign

import "time"

// AzureResourceManagerCommonTypesManagedServiceIdentityUpdate - Managed service identity (system assigned and/or user assigned
// identities)
type AzureResourceManagerCommonTypesManagedServiceIdentityUpdate struct {
	// The type of managed identity assigned to this resource.
	Type *ManagedServiceIdentityType

	// The identities assigned to this resource by the user.
	UserAssignedIdentities map[string]*Components19Kgb1NSchemasAzureResourcemanagerCommontypesManagedserviceidentityupdatePropertiesUserassignedidentitiesAdditionalproperties
}

type Components19Kgb1NSchemasAzureResourcemanagerCommontypesManagedserviceidentityupdatePropertiesUserassignedidentitiesAdditionalproperties struct {
	// READ-ONLY; The client ID of the assigned identity.
	ClientID *string

	// READ-ONLY; The principal ID of the assigned identity.
	PrincipalID *string
}

// CreateLandingZoneConfigurationCopyRequest - The request for the create copy action of landing zone configuration.
type CreateLandingZoneConfigurationCopyRequest struct {
	// REQUIRED; The name of the new landing zone configuration resource.
	Name *string
}

// CreateLandingZoneConfigurationCopyResponse - The response of the create copy action of landing zone configuration.
type CreateLandingZoneConfigurationCopyResponse struct {
	// REQUIRED; The id of the copied landing zone configuration resource.
	CopiedLandingZoneConfigurationID *string
}

// CustomNamingConvention - The details for the custom resource override.
type CustomNamingConvention struct {
	// REQUIRED; The custom formula for the resource type.
	Formula *string

	// REQUIRED; The type of the resource.
	ResourceType *ResourceType
}

// DecommissionedManagementGroupProperties - Decommissioned management group properties.
type DecommissionedManagementGroupProperties struct {
	// REQUIRED; When set to false, this management group will not be created. The default value is false.
	Create *bool

	// REQUIRED; Array of initiative assignments to be applied to the management group.
	PolicyInitiativesAssignmentProperties []*PolicyInitiativeAssignmentProperties
}

// DecommissionedManagementGroupPropertiesUpdate - Decommissioned management group properties.
type DecommissionedManagementGroupPropertiesUpdate struct {
	// When set to false, this management group will not be created. The default value is false.
	Create *bool

	// Array of initiative assignments to be applied to the management group.
	PolicyInitiativesAssignmentProperties []*PolicyInitiativeAssignmentProperties
}

// GenerateLandingZoneRequest - The request to generate code for a landing zone.
type GenerateLandingZoneRequest struct {
	// REQUIRED; Location to run deployment(s) from the list of azure regions.
	DeploymentLocation *string

	// REQUIRED; The prefix that will be added to all resources created by this deployment.
	DeploymentPrefix *string

	// REQUIRED; The export options available for code generation.
	InfrastructureAsCodeOutputOptions *InfrastructureAsCodeOutputOptions

	// REQUIRED; The top level management group display name.
	TopLevelMgDisplayName *string

	// The suffix that will be added to all resources created by this deployment.
	DeploymentSuffix *string

	// The environment for which the landing zone is being deployed
	Environment *string

	// Connectivity subscription fully qualified Id.
	ExistingConnectivitySubscriptionID *string

	// Identity subscription fully qualified Id.
	ExistingIdentitySubscriptionID *string

	// Management subscription fully qualified Id.
	ExistingManagementSubscriptionID *string

	// Optional parent for management group hierarchy, used as intermediate root management group parent, if specified. If empty,
	// default will deploy beneath tenant toot management group.
	ExistingTopLevelMgParentID *string

	// The name of the organization or agency the landing zone is being deployed for.
	Organization *string

	// The full resource ID of billing scope associated to the EA, MCA or MPA account you wish to create the subscription in.
	SubscriptionBillingScope *string
}

// GenerateLandingZoneResponse - The response for the request to generate landing zone code.
type GenerateLandingZoneResponse struct {
	// REQUIRED; The storage account blob name to access the generated code.
	BlobName *string

	// REQUIRED; The storage account container to access the generated code.
	ContainerName *string

	// REQUIRED; The url to access the generated code..
	GeneratedCodeURL *string

	// REQUIRED; The name of the Landing Zone configuration resource.
	LandingZoneConfigurationName *string

	// REQUIRED; The storage account name to access the generated code.
	StorageAccountName *string

	// REQUIRED; The top level Management Group display name.
	TopLevelMgDisplayName *string

	// The generated code content as a json string.
	GeneratedArmTemplate *string
}

// LandingZoneAccountResource - The Landing zone account parent resource type.
type LandingZoneAccountResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentity

	// The resource-specific properties for this resource.
	Properties *LandingZoneAccountResourceProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// LandingZoneAccountResourceListResult - The response of a LandingZoneAccountResource list operation.
type LandingZoneAccountResourceListResult struct {
	// REQUIRED; The LandingZoneAccountResource items on this page
	Value []*LandingZoneAccountResource

	// The link to the next page of items
	NextLink *string
}

// LandingZoneAccountResourceProperties - The properties of landing zone account resource type.
type LandingZoneAccountResourceProperties struct {
	// REQUIRED; The storage account that will host the generated slz code.
	StorageAccount *string

	// READ-ONLY; The status of a user-initiated, control-plane operation on the landing zone account.
	ProvisioningState *ProvisioningState
}

// LandingZoneAccountResourcePropertiesUpdate - The properties of landing zone account resource type.
type LandingZoneAccountResourcePropertiesUpdate struct {
	// The storage account that will host the generated slz code.
	StorageAccount *string
}

// LandingZoneAccountResourceUpdate - The Landing zone account parent resource type.
type LandingZoneAccountResourceUpdate struct {
	// The managed service identities assigned to this resource.
	Identity *AzureResourceManagerCommonTypesManagedServiceIdentityUpdate

	// The resource-specific properties for this resource.
	Properties *LandingZoneAccountResourcePropertiesUpdate

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// LandingZoneConfigurationResource - Concrete proxy resource types can be created by aliasing this type using a specific
// property type.
type LandingZoneConfigurationResource struct {
	// The resource-specific properties for this resource.
	Properties *LandingZoneConfigurationResourceProperties

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// LandingZoneConfigurationResourceListResult - The response of a LandingZoneConfigurationResource list operation.
type LandingZoneConfigurationResourceListResult struct {
	// REQUIRED; The LandingZoneConfigurationResource items on this page
	Value []*LandingZoneConfigurationResource

	// The link to the next page of items
	NextLink *string
}

// LandingZoneConfigurationResourceProperties - The properties of landing zone configuration resource type.
type LandingZoneConfigurationResourceProperties struct {
	// REQUIRED; To deploy the bastion service, choose Yes, otherwise No. Choose UseExisting for existing bastion service.
	AzureBastionCreationOption *ResourceCreationOptions

	// REQUIRED; To deploy ddos, choose Yes, otherwise No. Select Existing to provide an existing ddos protection plan.
	DdosProtectionCreationOption *ResourceCreationOptions

	// REQUIRED; To deploy firewall, choose the Standard/Premium based on the desired SKU. Choose None for no firewall and UseExisting
	// for a pre existing one.
	FirewallCreationOption *FirewallCreationOptions

	// REQUIRED; Gateway subnet. IPv4 CIDR block.
	GatewaySubnetCidrBlock *string

	// REQUIRED; The address space for the VNET. IPv4 CIDR block.
	HubNetworkCidrBlock *string

	// REQUIRED; To deploy log analytics workspace, choose Yes, otherwise No. Select UseExisting to provide an existing log analytics
	// workspace.
	LogAnalyticsWorkspaceCreationOption *ResourceCreationOptions

	// REQUIRED; Set how long logs are retained for, in days. Minimum length is 30 and maximum is 730
	LogRetentionInDays *int64

	// REQUIRED; The managed identity to be tied to this landing zone configuration
	ManagedIdentity *ManagedIdentityProperties

	// Azure bastion subnet. IP v4 CIDR block.
	AzureBastionSubnetCidrBlock *string

	// The customized naming convention for one or more resource types in this landing zone configuration
	CustomNamingConvention []*CustomNamingConvention

	// This will be applied to the decommissioned management group.
	DecommissionedMgMetadata *DecommissionedManagementGroupProperties

	// The resource id of azure bastion.
	ExistingAzureBastionID *string

	// The resource id of the ddos protection plan.
	ExistingDdosProtectionID *string

	// The resource id of the log analytics workspace that was created to centralize log ingestion.
	ExistingLogAnalyticsWorkspaceID *string

	// Azure firewall subnet. IPv4 CIDR block.
	FirewallSubnetCidrBlock *string

	// Landing zone children management group properties
	LandingZonesMgChildren []*LandingZoneManagementGroupProperties

	// This will be applied to the landing zone management groups.
	LandingZonesMgMetadata *ManagementGroupProperties

	// The naming convention that's used by default for all resource types for this landing zone configuration
	NamingConventionFormula *string

	// This will be applied to the connectivity management group under platform.
	PlatformConnectivityMgMetadata *ManagementGroupProperties

	// This will be applied to the identity management group under platform.
	PlatformIdentityMgMetadata *ManagementGroupProperties

	// This will be applied to the management management group under platform.
	PlatformManagementMgMetadata *ManagementGroupProperties

	// Platform children management group properties.
	PlatformMgChildren []*PlatformManagementGroupProperties

	// This will be applied to the platform management group.
	PlatformMgMetadata *ManagementGroupProperties

	// This will be applied to the sandbox management group.
	SandboxMgMetadata *SandboxManagementGroupProperties

	// Array of tag objects in format of {'name':'a tag name', 'value':'a tag value'}.
	Tags []*Tags

	// This will be applied to the root of the landing zone deployment.
	TopLevelMgMetadata *ManagementGroupProperties

	// READ-ONLY; The status for the landing zone configurations workflow.
	AuthoringStatus *AuthoringStatus

	// READ-ONLY; The status of a user-initiated, control-plane operation on the landing zone configuration.
	ProvisioningState *ProvisioningState
}

// LandingZoneConfigurationResourcePropertiesUpdate - The properties of landing zone configuration resource type.
type LandingZoneConfigurationResourcePropertiesUpdate struct {
	// To deploy the bastion service, choose Yes, otherwise No. Choose UseExisting for existing bastion service.
	AzureBastionCreationOption *ResourceCreationOptions

	// Azure bastion subnet. IP v4 CIDR block.
	AzureBastionSubnetCidrBlock *string

	// The customized naming convention for one or more resource types in this landing zone configuration
	CustomNamingConvention []*CustomNamingConvention

	// To deploy ddos, choose Yes, otherwise No. Select Existing to provide an existing ddos protection plan.
	DdosProtectionCreationOption *ResourceCreationOptions

	// This will be applied to the decommissioned management group.
	DecommissionedMgMetadata *DecommissionedManagementGroupPropertiesUpdate

	// The resource id of azure bastion.
	ExistingAzureBastionID *string

	// The resource id of the ddos protection plan.
	ExistingDdosProtectionID *string

	// The resource id of the log analytics workspace that was created to centralize log ingestion.
	ExistingLogAnalyticsWorkspaceID *string

	// To deploy firewall, choose the Standard/Premium based on the desired SKU. Choose None for no firewall and UseExisting for
	// a pre existing one.
	FirewallCreationOption *FirewallCreationOptions

	// Azure firewall subnet. IPv4 CIDR block.
	FirewallSubnetCidrBlock *string

	// Gateway subnet. IPv4 CIDR block.
	GatewaySubnetCidrBlock *string

	// The address space for the VNET. IPv4 CIDR block.
	HubNetworkCidrBlock *string

	// Landing zone children management group properties
	LandingZonesMgChildren []*LandingZoneManagementGroupProperties

	// This will be applied to the landing zone management groups.
	LandingZonesMgMetadata *ManagementGroupPropertiesUpdate

	// To deploy log analytics workspace, choose Yes, otherwise No. Select UseExisting to provide an existing log analytics workspace.
	LogAnalyticsWorkspaceCreationOption *ResourceCreationOptions

	// Set how long logs are retained for, in days. Minimum length is 30 and maximum is 730
	LogRetentionInDays *int64

	// The managed identity to be tied to this landing zone configuration
	ManagedIdentity *ManagedIdentityPropertiesUpdate

	// The naming convention that's used by default for all resource types for this landing zone configuration
	NamingConventionFormula *string

	// This will be applied to the connectivity management group under platform.
	PlatformConnectivityMgMetadata *ManagementGroupPropertiesUpdate

	// This will be applied to the identity management group under platform.
	PlatformIdentityMgMetadata *ManagementGroupPropertiesUpdate

	// This will be applied to the management management group under platform.
	PlatformManagementMgMetadata *ManagementGroupPropertiesUpdate

	// Platform children management group properties.
	PlatformMgChildren []*PlatformManagementGroupProperties

	// This will be applied to the platform management group.
	PlatformMgMetadata *ManagementGroupPropertiesUpdate

	// This will be applied to the sandbox management group.
	SandboxMgMetadata *SandboxManagementGroupPropertiesUpdate

	// Array of tag objects in format of {'name':'a tag name', 'value':'a tag value'}.
	Tags []*Tags

	// This will be applied to the root of the landing zone deployment.
	TopLevelMgMetadata *ManagementGroupPropertiesUpdate
}

// LandingZoneConfigurationResourceUpdate - Concrete proxy resource types can be created by aliasing this type using a specific
// property type.
type LandingZoneConfigurationResourceUpdate struct {
	// The resource-specific properties for this resource.
	Properties *LandingZoneConfigurationResourcePropertiesUpdate

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// LandingZoneManagementGroupProperties - Landing zone management group properties.
type LandingZoneManagementGroupProperties struct {
	// REQUIRED; Management group name.
	Name *string

	// REQUIRED; Array of initiative assignments to be applied to the management group.
	PolicyInitiativesAssignmentProperties []*PolicyInitiativeAssignmentProperties
}

// LandingZoneRegistrationResource - The Landing Zone registration resource type
type LandingZoneRegistrationResource struct {
	// The resource-specific properties for this resource.
	Properties *LandingZoneRegistrationResourceProperties

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// LandingZoneRegistrationResourceListResult - The response of a LandingZoneRegistrationResource list operation.
type LandingZoneRegistrationResourceListResult struct {
	// REQUIRED; The LandingZoneRegistrationResource items on this page
	Value []*LandingZoneRegistrationResource

	// The link to the next page of items
	NextLink *string
}

// LandingZoneRegistrationResourceProperties - The properties of landing zone registration resource type.
type LandingZoneRegistrationResourceProperties struct {
	// REQUIRED; The resource id of the associated landing zone configuration.
	ExistingLandingZoneConfigurationID *string

	// REQUIRED; The resource id of the top level management group
	ExistingTopLevelMgID *string

	// REQUIRED; The managed identity to be tied to this landing zone registration
	ManagedIdentity *ManagedIdentityProperties

	// READ-ONLY; The status of a user-initiated, control-plane operation on the landing Zone registration resource type.
	ProvisioningState *ProvisioningState
}

// LandingZoneRegistrationResourcePropertiesUpdate - The properties of landing zone registration resource type.
type LandingZoneRegistrationResourcePropertiesUpdate struct {
	// The resource id of the associated landing zone configuration.
	ExistingLandingZoneConfigurationID *string

	// The resource id of the top level management group
	ExistingTopLevelMgID *string

	// The managed identity to be tied to this landing zone registration
	ManagedIdentity *ManagedIdentityPropertiesUpdate
}

// LandingZoneRegistrationResourceUpdate - The Landing Zone registration resource type
type LandingZoneRegistrationResourceUpdate struct {
	// The resource-specific properties for this resource.
	Properties *LandingZoneRegistrationResourcePropertiesUpdate

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ManagedIdentityProperties - The properties of managed identity.
type ManagedIdentityProperties struct {
	// REQUIRED; The type of managed identity.
	Type *ManagedIdentityResourceType

	// The resource id of the managed identity.
	UserAssignedIdentityResourceID *string
}

// ManagedIdentityPropertiesUpdate - The properties of managed identity.
type ManagedIdentityPropertiesUpdate struct {
	// The type of managed identity.
	Type *ManagedIdentityResourceType

	// The resource id of the managed identity.
	UserAssignedIdentityResourceID *string
}

// ManagedServiceIdentity - Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// REQUIRED; Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type *ManagedServiceIdentityType

	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
	// resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
	// The dictionary values can be empty objects ({}) in
	// requests.
	UserAssignedIdentities map[string]*UserAssignedIdentity

	// READ-ONLY; The service principal ID of the system assigned identity. This property will only be provided for a system assigned
	// identity.
	PrincipalID *string

	// READ-ONLY; The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantID *string
}

// ManagementGroupProperties - Details of the policy and initiatives associated with the management group.
type ManagementGroupProperties struct {
	// REQUIRED; Array of initiative assignments to be applied to the management group.
	PolicyInitiativesAssignmentProperties []*PolicyInitiativeAssignmentProperties
}

// ManagementGroupPropertiesUpdate - Details of the policy and initiatives associated with the management group.
type ManagementGroupPropertiesUpdate struct {
	// Array of initiative assignments to be applied to the management group.
	PolicyInitiativesAssignmentProperties []*PolicyInitiativeAssignmentProperties
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation
}

// PlatformManagementGroupProperties - Platform management group properties.
type PlatformManagementGroupProperties struct {
	// REQUIRED; Management group name.
	Name *string

	// REQUIRED; Array of initiative assignments to be applied to the management group.
	PolicyInitiativesAssignmentProperties []*PolicyInitiativeAssignmentProperties
}

// PolicyInitiativeAssignmentProperties - Details of policy assignments
type PolicyInitiativeAssignmentProperties struct {
	// REQUIRED; The parameters for the assignment of policy initiatives.
	AssignmentParameters map[string]any

	// REQUIRED; The fully qualified id of the policy initiative.
	PolicyInitiativeID *string
}

// SandboxManagementGroupProperties - Sandbox management group properties.
type SandboxManagementGroupProperties struct {
	// REQUIRED; When set to false this management group will not be created. The default value is false.
	Create *bool

	// REQUIRED; Array of initiative assignments to be applied to the management group.
	PolicyInitiativesAssignmentProperties []*PolicyInitiativeAssignmentProperties
}

// SandboxManagementGroupPropertiesUpdate - Sandbox management group properties.
type SandboxManagementGroupPropertiesUpdate struct {
	// When set to false this management group will not be created. The default value is false.
	Create *bool

	// Array of initiative assignments to be applied to the management group.
	PolicyInitiativesAssignmentProperties []*PolicyInitiativeAssignmentProperties
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// Tags - The details associated with tags.
type Tags struct {
	// REQUIRED; A tag name.
	Name *string

	// A tag value.
	Value *string
}

// UpdateAuthoringStatusRequest - The request to update authoring status of a configuration.
type UpdateAuthoringStatusRequest struct {
	// REQUIRED; The value of the authoring status to be updated.
	AuthoringStatus *AuthoringStatus
}

// UpdateAuthoringStatusResponse - The response for the request to update authoring status.
type UpdateAuthoringStatusResponse struct {
	// REQUIRED; The value of the authoring status to be updated.
	AuthoringStatus *AuthoringStatus

	// REQUIRED; The name of the landing zone configuration resource.
	LandingZoneConfigurationName *string
}

// UserAssignedIdentity - User assigned identity properties
type UserAssignedIdentity struct {
	// READ-ONLY; The client ID of the assigned identity.
	ClientID *string

	// READ-ONLY; The principal ID of the assigned identity.
	PrincipalID *string
}
