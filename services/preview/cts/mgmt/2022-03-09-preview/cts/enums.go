package cts

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// AccessForManualTransfers enumerates the values for access for manual transfers.
type AccessForManualTransfers string

const (
	// JIT ...
	JIT AccessForManualTransfers = "JIT"
	// None ...
	None AccessForManualTransfers = "None"
)

// PossibleAccessForManualTransfersValues returns an array of possible values for the AccessForManualTransfers const type.
func PossibleAccessForManualTransfersValues() []AccessForManualTransfers {
	return []AccessForManualTransfers{JIT, None}
}

// ActionType enumerates the values for action type.
type ActionType string

const (
	// Internal ...
	Internal ActionType = "Internal"
)

// PossibleActionTypeValues returns an array of possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{Internal}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// DataTypes enumerates the values for data types.
type DataTypes string

const (
	// Database ...
	Database DataTypes = "Database"
	// JSON ...
	JSON DataTypes = "JSON"
	// OfficeDocuments ...
	OfficeDocuments DataTypes = "OfficeDocuments"
	// OfficialBuilds ...
	OfficialBuilds DataTypes = "OfficialBuilds"
	// Other ...
	Other DataTypes = "Other"
	// Scripts ...
	Scripts DataTypes = "Scripts"
	// VHDs ...
	VHDs DataTypes = "VHDs"
)

// PossibleDataTypesValues returns an array of possible values for the DataTypes const type.
func PossibleDataTypesValues() []DataTypes {
	return []DataTypes{Database, JSON, OfficeDocuments, OfficialBuilds, Other, Scripts, VHDs}
}

// FlowStatus enumerates the values for flow status.
type FlowStatus string

const (
	// Disabled ...
	Disabled FlowStatus = "Disabled"
	// Enabled ...
	Enabled FlowStatus = "Enabled"
)

// PossibleFlowStatusValues returns an array of possible values for the FlowStatus const type.
func PossibleFlowStatusValues() []FlowStatus {
	return []FlowStatus{Disabled, Enabled}
}

// ManualUsersStatus enumerates the values for manual users status.
type ManualUsersStatus string

const (
	// Standard ...
	Standard ManualUsersStatus = "Standard"
	// Tented ...
	Tented ManualUsersStatus = "Tented"
)

// PossibleManualUsersStatusValues returns an array of possible values for the ManualUsersStatus const type.
func PossibleManualUsersStatusValues() []ManualUsersStatus {
	return []ManualUsersStatus{Standard, Tented}
}

// OperationStatusEnum enumerates the values for operation status enum.
type OperationStatusEnum string

const (
	// Failed ...
	Failed OperationStatusEnum = "Failed"
	// Succeeded ...
	Succeeded OperationStatusEnum = "Succeeded"
)

// PossibleOperationStatusEnumValues returns an array of possible values for the OperationStatusEnum const type.
func PossibleOperationStatusEnumValues() []OperationStatusEnum {
	return []OperationStatusEnum{Failed, Succeeded}
}

// Origin enumerates the values for origin.
type Origin string

const (
	// OriginSystem ...
	OriginSystem Origin = "system"
	// OriginUser ...
	OriginUser Origin = "user"
	// OriginUsersystem ...
	OriginUsersystem Origin = "user,system"
)

// PossibleOriginValues returns an array of possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{OriginSystem, OriginUser, OriginUsersystem}
}

// ProvisioningState enumerates the values for provisioning state.
type ProvisioningState string

const (
	// ProvisioningStateAccepted ...
	ProvisioningStateAccepted ProvisioningState = "Accepted"
	// ProvisioningStateCanceled ...
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateFailed ...
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateSucceeded ...
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
)

// PossibleProvisioningStateValues returns an array of possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{ProvisioningStateAccepted, ProvisioningStateCanceled, ProvisioningStateFailed, ProvisioningStateSucceeded}
}

// ResourceIdentityType enumerates the values for resource identity type.
type ResourceIdentityType string

const (
	// SystemAssigned ...
	SystemAssigned ResourceIdentityType = "SystemAssigned"
)

// PossibleResourceIdentityTypeValues returns an array of possible values for the ResourceIdentityType const type.
func PossibleResourceIdentityTypeValues() []ResourceIdentityType {
	return []ResourceIdentityType{SystemAssigned}
}

// SkuTier enumerates the values for sku tier.
type SkuTier string

const (
	// SkuTierBasic ...
	SkuTierBasic SkuTier = "Basic"
	// SkuTierFree ...
	SkuTierFree SkuTier = "Free"
	// SkuTierPremium ...
	SkuTierPremium SkuTier = "Premium"
	// SkuTierStandard ...
	SkuTierStandard SkuTier = "Standard"
)

// PossibleSkuTierValues returns an array of possible values for the SkuTier const type.
func PossibleSkuTierValues() []SkuTier {
	return []SkuTier{SkuTierBasic, SkuTierFree, SkuTierPremium, SkuTierStandard}
}

// Status enumerates the values for status.
type Status string

const (
	// Accepted ...
	Accepted Status = "Accepted"
	// Approved ...
	Approved Status = "Approved"
	// InReview ...
	InReview Status = "InReview"
	// Rejected ...
	Rejected Status = "Rejected"
)

// PossibleStatusValues returns an array of possible values for the Status const type.
func PossibleStatusValues() []Status {
	return []Status{Accepted, Approved, InReview, Rejected}
}

// StorageContainerType enumerates the values for storage container type.
type StorageContainerType string

const (
	// Blob ...
	Blob StorageContainerType = "Blob"
	// Table ...
	Table StorageContainerType = "Table"
)

// PossibleStorageContainerTypeValues returns an array of possible values for the StorageContainerType const type.
func PossibleStorageContainerTypeValues() []StorageContainerType {
	return []StorageContainerType{Blob, Table}
}

// StorageLocation enumerates the values for storage location.
type StorageLocation string

const (
	// StorageLocationCloudVault ...
	StorageLocationCloudVault StorageLocation = "CloudVault"
	// StorageLocationOther ...
	StorageLocationOther StorageLocation = "Other"
)

// PossibleStorageLocationValues returns an array of possible values for the StorageLocation const type.
func PossibleStorageLocationValues() []StorageLocation {
	return []StorageLocation{StorageLocationCloudVault, StorageLocationOther}
}

// Usage enumerates the values for usage.
type Usage string

const (
	// Automatic ...
	Automatic Usage = "Automatic"
	// Manual ...
	Manual Usage = "Manual"
)

// PossibleUsageValues returns an array of possible values for the Usage const type.
func PossibleUsageValues() []Usage {
	return []Usage{Automatic, Manual}
}
