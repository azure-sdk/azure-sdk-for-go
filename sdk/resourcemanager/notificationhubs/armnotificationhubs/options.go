// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armnotificationhubs

// NamespaceResourcesClientBeginCreateOrUpdateOptions contains the optional parameters for the NamespaceResourcesClient.BeginCreateOrUpdate
// method.
type NamespaceResourcesClientBeginCreateOrUpdateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// NamespaceResourcesClientCheckNotificationHubAvailabilityOptions contains the optional parameters for the NamespaceResourcesClient.CheckNotificationHubAvailability
// method.
type NamespaceResourcesClientCheckNotificationHubAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// NamespaceResourcesClientDeleteOptions contains the optional parameters for the NamespaceResourcesClient.Delete method.
type NamespaceResourcesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// NamespaceResourcesClientGetOptions contains the optional parameters for the NamespaceResourcesClient.Get method.
type NamespaceResourcesClientGetOptions struct {
	// placeholder for future optional parameters
}

// NamespaceResourcesClientGetPnsCredentialsOptions contains the optional parameters for the NamespaceResourcesClient.GetPnsCredentials
// method.
type NamespaceResourcesClientGetPnsCredentialsOptions struct {
	// placeholder for future optional parameters
}

// NamespaceResourcesClientListAllOptions contains the optional parameters for the NamespaceResourcesClient.NewListAllPager
// method.
type NamespaceResourcesClientListAllOptions struct {
	// Skip token for subsequent requests.
	SkipToken *string

	// Maximum number of results to return.
	Top *int32
}

// NamespaceResourcesClientListOptions contains the optional parameters for the NamespaceResourcesClient.NewListPager method.
type NamespaceResourcesClientListOptions struct {
	// Skip token for subsequent requests.
	SkipToken *string

	// Maximum number of results to return.
	Top *int32
}

// NamespaceResourcesClientUpdateOptions contains the optional parameters for the NamespaceResourcesClient.Update method.
type NamespaceResourcesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// NamespacesClientCreateOrUpdateAuthorizationRuleOptions contains the optional parameters for the NamespacesClient.CreateOrUpdateAuthorizationRule
// method.
type NamespacesClientCreateOrUpdateAuthorizationRuleOptions struct {
	// placeholder for future optional parameters
}

// NamespacesClientDeleteAuthorizationRuleOptions contains the optional parameters for the NamespacesClient.DeleteAuthorizationRule
// method.
type NamespacesClientDeleteAuthorizationRuleOptions struct {
	// placeholder for future optional parameters
}

// NamespacesClientGetAuthorizationRuleOptions contains the optional parameters for the NamespacesClient.GetAuthorizationRule
// method.
type NamespacesClientGetAuthorizationRuleOptions struct {
	// placeholder for future optional parameters
}

// NamespacesClientListAuthorizationRulesOptions contains the optional parameters for the NamespacesClient.NewListAuthorizationRulesPager
// method.
type NamespacesClientListAuthorizationRulesOptions struct {
	// placeholder for future optional parameters
}

// NamespacesClientListKeysOptions contains the optional parameters for the NamespacesClient.ListKeys method.
type NamespacesClientListKeysOptions struct {
	// placeholder for future optional parameters
}

// NamespacesClientRegenerateKeysOptions contains the optional parameters for the NamespacesClient.RegenerateKeys method.
type NamespacesClientRegenerateKeysOptions struct {
	// placeholder for future optional parameters
}

// NamespacesOperationGroupClientCheckAvailabilityOptions contains the optional parameters for the NamespacesOperationGroupClient.CheckAvailability
// method.
type NamespacesOperationGroupClientCheckAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// NotificationHubResourcesClientCreateOrUpdateOptions contains the optional parameters for the NotificationHubResourcesClient.CreateOrUpdate
// method.
type NotificationHubResourcesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// NotificationHubResourcesClientDebugSendOptions contains the optional parameters for the NotificationHubResourcesClient.DebugSend
// method.
type NotificationHubResourcesClientDebugSendOptions struct {
	// placeholder for future optional parameters
}

// NotificationHubResourcesClientDeleteOptions contains the optional parameters for the NotificationHubResourcesClient.Delete
// method.
type NotificationHubResourcesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// NotificationHubResourcesClientGetOptions contains the optional parameters for the NotificationHubResourcesClient.Get method.
type NotificationHubResourcesClientGetOptions struct {
	// placeholder for future optional parameters
}

// NotificationHubResourcesClientGetPnsCredentialsOptions contains the optional parameters for the NotificationHubResourcesClient.GetPnsCredentials
// method.
type NotificationHubResourcesClientGetPnsCredentialsOptions struct {
	// placeholder for future optional parameters
}

// NotificationHubResourcesClientListOptions contains the optional parameters for the NotificationHubResourcesClient.NewListPager
// method.
type NotificationHubResourcesClientListOptions struct {
	// Continuation token.
	SkipToken *string

	// Page size.
	Top *int32
}

// NotificationHubResourcesClientUpdateOptions contains the optional parameters for the NotificationHubResourcesClient.Update
// method.
type NotificationHubResourcesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionResourcesClientBeginDeleteOptions contains the optional parameters for the PrivateEndpointConnectionResourcesClient.BeginDelete
// method.
type PrivateEndpointConnectionResourcesClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionResourcesClientBeginUpdateOptions contains the optional parameters for the PrivateEndpointConnectionResourcesClient.BeginUpdate
// method.
type PrivateEndpointConnectionResourcesClientBeginUpdateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionResourcesClientGetOptions contains the optional parameters for the PrivateEndpointConnectionResourcesClient.Get
// method.
type PrivateEndpointConnectionResourcesClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionResourcesClientListOptions contains the optional parameters for the PrivateEndpointConnectionResourcesClient.NewListPager
// method.
type PrivateEndpointConnectionResourcesClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientGetGroupIDOptions contains the optional parameters for the PrivateLinkResourcesClient.GetGroupID
// method.
type PrivateLinkResourcesClientGetGroupIDOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientListGroupIDsOptions contains the optional parameters for the PrivateLinkResourcesClient.NewListGroupIDsPager
// method.
type PrivateLinkResourcesClientListGroupIDsOptions struct {
	// placeholder for future optional parameters
}

// SharedAccessAuthorizationRuleResourcesClientCreateOrUpdateAuthorizationRuleOptions contains the optional parameters for
// the SharedAccessAuthorizationRuleResourcesClient.CreateOrUpdateAuthorizationRule method.
type SharedAccessAuthorizationRuleResourcesClientCreateOrUpdateAuthorizationRuleOptions struct {
	// placeholder for future optional parameters
}

// SharedAccessAuthorizationRuleResourcesClientDeleteAuthorizationRuleOptions contains the optional parameters for the SharedAccessAuthorizationRuleResourcesClient.DeleteAuthorizationRule
// method.
type SharedAccessAuthorizationRuleResourcesClientDeleteAuthorizationRuleOptions struct {
	// placeholder for future optional parameters
}

// SharedAccessAuthorizationRuleResourcesClientGetAuthorizationRuleOptions contains the optional parameters for the SharedAccessAuthorizationRuleResourcesClient.GetAuthorizationRule
// method.
type SharedAccessAuthorizationRuleResourcesClientGetAuthorizationRuleOptions struct {
	// placeholder for future optional parameters
}

// SharedAccessAuthorizationRuleResourcesClientListAuthorizationRulesOptions contains the optional parameters for the SharedAccessAuthorizationRuleResourcesClient.NewListAuthorizationRulesPager
// method.
type SharedAccessAuthorizationRuleResourcesClientListAuthorizationRulesOptions struct {
	// placeholder for future optional parameters
}

// SharedAccessAuthorizationRuleResourcesClientListKeysOptions contains the optional parameters for the SharedAccessAuthorizationRuleResourcesClient.ListKeys
// method.
type SharedAccessAuthorizationRuleResourcesClientListKeysOptions struct {
	// placeholder for future optional parameters
}

// SharedAccessAuthorizationRuleResourcesClientRegenerateKeysOptions contains the optional parameters for the SharedAccessAuthorizationRuleResourcesClient.RegenerateKeys
// method.
type SharedAccessAuthorizationRuleResourcesClientRegenerateKeysOptions struct {
	// placeholder for future optional parameters
}
