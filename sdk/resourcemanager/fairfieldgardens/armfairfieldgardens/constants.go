//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armfairfieldgardens

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/fairfieldgardens/armfairfieldgardens"
	moduleVersion = "v0.1.0"
)

// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// AllocationType - Type of allocation rule.
type AllocationType string

const (
	// AllocationTypeEvenlyDistributed - Evenly distributed allocation.
	AllocationTypeEvenlyDistributed AllocationType = "EvenlyDistributed"
)

// PossibleAllocationTypeValues returns the possible values for the AllocationType const type.
func PossibleAllocationTypeValues() []AllocationType {
	return []AllocationType{
		AllocationTypeEvenlyDistributed,
	}
}

// BootstrapAuthenticationType - The authentication type for bootstrap.
type BootstrapAuthenticationType string

const (
	// BootstrapAuthenticationTypeDiscovery - The discovery authentication type.
	BootstrapAuthenticationTypeDiscovery BootstrapAuthenticationType = "Discovery"
	// BootstrapAuthenticationTypeX509 - The X509 authentication type.
	BootstrapAuthenticationTypeX509 BootstrapAuthenticationType = "X509"
)

// PossibleBootstrapAuthenticationTypeValues returns the possible values for the BootstrapAuthenticationType const type.
func PossibleBootstrapAuthenticationTypeValues() []BootstrapAuthenticationType {
	return []BootstrapAuthenticationType{
		BootstrapAuthenticationTypeDiscovery,
		BootstrapAuthenticationTypeX509,
	}
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// EndpointType - Type of the endpoint.
type EndpointType string

const (
	// EndpointTypeMicrosoftEventGridNamespace - Azure event grid broker.
	EndpointTypeMicrosoftEventGridNamespace EndpointType = "Microsoft.EventGrid/namespaces"
)

// PossibleEndpointTypeValues returns the possible values for the EndpointType const type.
func PossibleEndpointTypeValues() []EndpointType {
	return []EndpointType{
		EndpointTypeMicrosoftEventGridNamespace,
	}
}

// OnboardingStatus - The current onboarding status.
type OnboardingStatus string

const (
	// OnboardingStatusFailed - Onboarding has failed
	OnboardingStatusFailed OnboardingStatus = "Failed"
	// OnboardingStatusPending - Onboarding is still pending
	OnboardingStatusPending OnboardingStatus = "Pending"
	// OnboardingStatusProvisioned - The resource has been onboarded
	OnboardingStatusProvisioned OnboardingStatus = "Provisioned"
)

// PossibleOnboardingStatusValues returns the possible values for the OnboardingStatus const type.
func PossibleOnboardingStatusValues() []OnboardingStatus {
	return []OnboardingStatus{
		OnboardingStatusFailed,
		OnboardingStatusPending,
		OnboardingStatusProvisioned,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	OriginSystem     Origin = "system"
	OriginUser       Origin = "user"
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// ProvisioningResourceType - Type of resource being provisioned.
type ProvisioningResourceType string

const (
	// ProvisioningResourceTypeDeviceRegistryDevice - Azure device registry device. Microsoft.DeviceRegistry/devices
	ProvisioningResourceTypeDeviceRegistryDevice ProvisioningResourceType = "Microsoft.DeviceRegistry/devices"
	// ProvisioningResourceTypeHybridComputeMachine - Arc enabled device. Microsoft.HybridCompute/machines
	ProvisioningResourceTypeHybridComputeMachine ProvisioningResourceType = "Microsoft.HybridCompute/machines"
)

// PossibleProvisioningResourceTypeValues returns the possible values for the ProvisioningResourceType const type.
func PossibleProvisioningResourceTypeValues() []ProvisioningResourceType {
	return []ProvisioningResourceType{
		ProvisioningResourceTypeDeviceRegistryDevice,
		ProvisioningResourceTypeHybridComputeMachine,
	}
}

// ProvisioningState - The status of the current operation.
type ProvisioningState string

const (
	// ProvisioningStateCanceled - Resource creation was canceled.
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateCreating - Resource is being created.
	ProvisioningStateCreating ProvisioningState = "Creating"
	// ProvisioningStateDeleting - Resource is being deleted.
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed - Resource creation failed.
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateSucceeded - Resource has been created.
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating - Resource is being updated.
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateCanceled,
		ProvisioningStateCreating,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}

// SupportedIssuingAuthority - Supported issuing authority.
type SupportedIssuingAuthority string

const (
	// SupportedIssuingAuthorityFirstParty - First party cert issuance.
	SupportedIssuingAuthorityFirstParty SupportedIssuingAuthority = "FirstParty"
)

// PossibleSupportedIssuingAuthorityValues returns the possible values for the SupportedIssuingAuthority const type.
func PossibleSupportedIssuingAuthorityValues() []SupportedIssuingAuthority {
	return []SupportedIssuingAuthority{
		SupportedIssuingAuthorityFirstParty,
	}
}

// SupportedKeyType - Supported key types.
type SupportedKeyType string

const (
	// SupportedKeyTypeECC - Indicate the ECC key type.
	SupportedKeyTypeECC SupportedKeyType = "ECC"
)

// PossibleSupportedKeyTypeValues returns the possible values for the SupportedKeyType const type.
func PossibleSupportedKeyTypeValues() []SupportedKeyType {
	return []SupportedKeyType{
		SupportedKeyTypeECC,
	}
}
