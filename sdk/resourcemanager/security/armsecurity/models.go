//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsecurity

import "time"

// ActionableRemediation - Configuration payload for PR Annotations.
type ActionableRemediation struct {
	// Repository branch configuration for PR Annotations.
	BranchConfiguration *TargetBranchConfiguration

	// Gets or sets list of categories and severity levels.
	CategoryConfigurations []*CategoryConfiguration

	// Update Settings.
	// Enabled - Resource should inherit configurations from parent. Disabled - Resource should not inherit configurations from
	// parent.
	InheritFromParentState *InheritFromParentState

	// ActionableRemediation Setting. None - the setting was never set. Enabled - ActionableRemediation is enabled. Disabled -
	// ActionableRemediation is disabled.
	State *ActionableRemediationState
}

// Authorization payload.
type Authorization struct {
	// Gets or sets one-time OAuth code to exchange for refresh and access tokens.
	// Only used during PUT/PATCH operations. The secret is cleared during GET.
	Code *string
}

// AzureDevOpsOrg - Azure DevOps Organization resource.
type AzureDevOpsOrg struct {
	// Azure DevOps Organization properties.
	Properties *AzureDevOpsOrgProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// AzureDevOpsOrgListResponse - List of RP resources which supports pagination.
type AzureDevOpsOrgListResponse struct {
	// Gets or sets next link to scroll over the results.
	NextLink *string

	// Gets or sets list of resources.
	Value []*AzureDevOpsOrg
}

// AzureDevOpsOrgProperties - Azure DevOps Organization properties.
type AzureDevOpsOrgProperties struct {
	// Configuration payload for PR Annotations.
	ActionableRemediation *ActionableRemediation

	// Details about resource onboarding status across all connectors.
	// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level
	// resources. Onboarded - this resource has already been onboarded by the
	// specified connector. NotOnboarded - this resource has not been onboarded to any connector. NotApplicable - the onboarding
	// state is not applicable to the current endpoint.
	OnboardingState *OnboardingState

	// The provisioning state of the resource.
	// Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning
	// canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion
	// successful. DeletionFailure - Deletion failure.
	ProvisioningState *DevOpsProvisioningState

	// READ-ONLY; Gets or sets resource status message.
	ProvisioningStatusMessage *string

	// READ-ONLY; Gets or sets time when resource was last checked.
	ProvisioningStatusUpdateTimeUTC *time.Time
}

// AzureDevOpsOrganizationConfiguration - AzureDevOps Org Inventory Configuration.
type AzureDevOpsOrganizationConfiguration struct {
	// AutoDiscovery states.
	AutoDiscovery *AutoDiscovery

	// AzureDevOps Project Inventory Configuration. Dictionary of AzureDevOps project name to desired project configuration. If
	// AutoDiscovery is Enabled, this field should be empty or null.
	ProjectConfigs map[string]*AzureDevOpsProjectConfiguration
}

// AzureDevOpsProject - Azure DevOps Project resource.
type AzureDevOpsProject struct {
	// Azure DevOps Project properties.
	Properties *AzureDevOpsProjectProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// AzureDevOpsProjectConfiguration - AzureDevOps Project Inventory Configuration.
type AzureDevOpsProjectConfiguration struct {
	// AutoDiscovery states.
	AutoDiscovery *AutoDiscovery

	// AzureDevOps Repository Inventory Configuration. Dictionary of AzureDevOps repository name to desired repository configuration.
	// If AutoDiscovery is Enabled, this field should be null or empty.
	RepositoryConfigs map[string]*BaseResourceConfiguration
}

// AzureDevOpsProjectListResponse - List of RP resources which supports pagination.
type AzureDevOpsProjectListResponse struct {
	// Gets or sets next link to scroll over the results.
	NextLink *string

	// Gets or sets list of resources.
	Value []*AzureDevOpsProject
}

// AzureDevOpsProjectProperties - Azure DevOps Project properties.
type AzureDevOpsProjectProperties struct {
	// Configuration payload for PR Annotations.
	ActionableRemediation *ActionableRemediation

	// Details about resource onboarding status across all connectors.
	// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level
	// resources. Onboarded - this resource has already been onboarded by the
	// specified connector. NotOnboarded - this resource has not been onboarded to any connector. NotApplicable - the onboarding
	// state is not applicable to the current endpoint.
	OnboardingState *OnboardingState

	// Gets or sets parent Azure DevOps Organization name.
	ParentOrgName *string

	// The provisioning state of the resource.
	// Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning
	// canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion
	// successful. DeletionFailure - Deletion failure.
	ProvisioningState *DevOpsProvisioningState

	// READ-ONLY; Gets or sets Azure DevOps Project id.
	ProjectID *string

	// READ-ONLY; Gets or sets resource status message.
	ProvisioningStatusMessage *string

	// READ-ONLY; Gets or sets time when resource was last checked.
	ProvisioningStatusUpdateTimeUTC *time.Time
}

// AzureDevOpsRepository - Azure DevOps Repository resource.
type AzureDevOpsRepository struct {
	// Azure DevOps Repository properties.
	Properties *AzureDevOpsRepositoryProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// AzureDevOpsRepositoryListResponse - List of RP resources which supports pagination.
type AzureDevOpsRepositoryListResponse struct {
	// Gets or sets next link to scroll over the results.
	NextLink *string

	// Gets or sets list of resources.
	Value []*AzureDevOpsRepository
}

// AzureDevOpsRepositoryProperties - Azure DevOps Repository properties.
type AzureDevOpsRepositoryProperties struct {
	// Configuration payload for PR Annotations.
	ActionableRemediation *ActionableRemediation

	// Details about resource onboarding status across all connectors.
	// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level
	// resources. Onboarded - this resource has already been onboarded by the
	// specified connector. NotOnboarded - this resource has not been onboarded to any connector. NotApplicable - the onboarding
	// state is not applicable to the current endpoint.
	OnboardingState *OnboardingState

	// Gets or sets parent Azure DevOps Organization name.
	ParentOrgName *string

	// Gets or sets parent Azure DevOps Project name.
	ParentProjectName *string

	// The provisioning state of the resource.
	// Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning
	// canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion
	// successful. DeletionFailure - Deletion failure.
	ProvisioningState *DevOpsProvisioningState

	// READ-ONLY; Gets or sets resource status message.
	ProvisioningStatusMessage *string

	// READ-ONLY; Gets or sets time when resource was last checked.
	ProvisioningStatusUpdateTimeUTC *time.Time

	// READ-ONLY; Gets or sets Azure DevOps Repository id.
	RepoID *string

	// READ-ONLY; Gets or sets Azure DevOps Repository url.
	RepoURL *string

	// READ-ONLY; Gets or sets Azure DevOps repository visibility, whether it is public or private etc.
	Visibility *string
}

// BaseResourceConfiguration - Base Resource Inventory configuration changes.
type BaseResourceConfiguration struct {
	// Onboarding states.
	DesiredOnboardingState *DesiredOnboardingState
}

// CategoryConfiguration - Severity level per category configuration for PR Annotations.
type CategoryConfiguration struct {
	// Rule categories. Code - code scanning results. Artifact scanning results. Dependencies scanning results. IaC results. Secrets
	// scanning results. Container scanning results.
	Category *RuleCategory

	// Gets or sets minimum severity level for a given category.
	MinimumSeverityLevel *string
}

// DevOpsCapability - Details about DevOps capability.
type DevOpsCapability struct {
	// READ-ONLY; Gets the name of the DevOps capability.
	Name *string

	// READ-ONLY; Gets the value of the DevOps capability.
	Value *string
}

// DevOpsConfiguration - DevOps Configuration resource.
type DevOpsConfiguration struct {
	// DevOps Configuration properties.
	Properties *DevOpsConfigurationProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// DevOpsConfigurationListResponse - List of RP resources which supports pagination.
type DevOpsConfigurationListResponse struct {
	// Gets or sets next link to scroll over the results.
	NextLink *string

	// Gets or sets list of resources.
	Value []*DevOpsConfiguration
}

// DevOpsConfigurationProperties - DevOps Configuration properties.
type DevOpsConfigurationProperties struct {
	// Authorization payload.
	Authorization *Authorization

	// AutoDiscovery states.
	AutoDiscovery *AutoDiscovery

	// The provisioning state of the resource.
	// Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning
	// canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion
	// successful. DeletionFailure - Deletion failure.
	ProvisioningState *DevOpsProvisioningState

	// List of top-level inventory to select when AutoDiscovery is disabled. This field is ignored when AutoDiscovery is enabled.
	TopLevelInventoryList []*string

	// READ-ONLY; List of capabilities assigned to the DevOps configuration during the discovery process.
	Capabilities []*DevOpsCapability

	// READ-ONLY; Gets or sets resource status message.
	ProvisioningStatusMessage *string

	// READ-ONLY; Gets or sets time when resource was last checked.
	ProvisioningStatusUpdateTimeUTC *time.Time
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any

	// READ-ONLY; The additional info type.
	Type *string
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo

	// READ-ONLY; The error code.
	Code *string

	// READ-ONLY; The error details.
	Details []*ErrorDetail

	// READ-ONLY; The error message.
	Message *string

	// READ-ONLY; The error target.
	Target *string
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail
}

// GitHubOwner - GitHub Owner resource.
type GitHubOwner struct {
	// GitHub Owner properties.
	Properties *GitHubOwnerProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// GitHubOwnerConfiguration - GitHub Owner Inventory Configuration.
type GitHubOwnerConfiguration struct {
	// AutoDiscovery states.
	AutoDiscovery *AutoDiscovery

	// GitHub Repository Inventory Configuration. Dictionary of GitHub repository name to desired repository configuration. If
	// AutoDiscovery is Enabled, this field should be null or empty.
	RepositoryConfigs map[string]*BaseResourceConfiguration
}

// GitHubOwnerListResponse - List of RP resources which supports pagination.
type GitHubOwnerListResponse struct {
	// Gets or sets next link to scroll over the results.
	NextLink *string

	// Gets or sets list of resources.
	Value []*GitHubOwner
}

// GitHubOwnerProperties - GitHub Owner properties.
type GitHubOwnerProperties struct {
	// Details about resource onboarding status across all connectors.
	// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level
	// resources. Onboarded - this resource has already been onboarded by the
	// specified connector. NotOnboarded - this resource has not been onboarded to any connector. NotApplicable - the onboarding
	// state is not applicable to the current endpoint.
	OnboardingState *OnboardingState

	// The provisioning state of the resource.
	// Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning
	// canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion
	// successful. DeletionFailure - Deletion failure.
	ProvisioningState *DevOpsProvisioningState

	// READ-ONLY; Gets or sets internal GitHub id.
	GitHubInternalID *string

	// READ-ONLY; Gets or sets GitHub Owner url.
	OwnerURL *string

	// READ-ONLY; Gets or sets resource status message.
	ProvisioningStatusMessage *string

	// READ-ONLY; Gets or sets time when resource was last checked.
	ProvisioningStatusUpdateTimeUTC *time.Time
}

// GitHubRepository - GitHub Repository resource.
type GitHubRepository struct {
	// GitHub Repository properties.
	Properties *GitHubRepositoryProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// GitHubRepositoryListResponse - List of RP resources which supports pagination.
type GitHubRepositoryListResponse struct {
	// Gets or sets next link to scroll over the results.
	NextLink *string

	// Gets or sets list of resources.
	Value []*GitHubRepository
}

// GitHubRepositoryProperties - GitHub Repository properties.
type GitHubRepositoryProperties struct {
	// Details about resource onboarding status across all connectors.
	// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level
	// resources. Onboarded - this resource has already been onboarded by the
	// specified connector. NotOnboarded - this resource has not been onboarded to any connector. NotApplicable - the onboarding
	// state is not applicable to the current endpoint.
	OnboardingState *OnboardingState

	// Gets or sets parent GitHub Owner name.
	ParentOwnerName *string

	// The provisioning state of the resource.
	// Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning
	// canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion
	// successful. DeletionFailure - Deletion failure.
	ProvisioningState *DevOpsProvisioningState

	// READ-ONLY; Gets or sets resource status message.
	ProvisioningStatusMessage *string

	// READ-ONLY; Gets or sets time when resource was last checked.
	ProvisioningStatusUpdateTimeUTC *time.Time

	// READ-ONLY; Gets or sets GitHub Full Name. Repository name, prefixed with Owner name. Eg: "my-org/new-repo-1".
	RepoFullName *string

	// READ-ONLY; Gets or sets GitHub Repository id.
	// This is a numeric id defined by Github. Eg: "123456".
	RepoID *string

	// READ-ONLY; Gets or sets GitHub Repository name. Eg: "new-repo-1".
	RepoName *string

	// READ-ONLY; Gets or sets GitHub Repository url.
	RepoURL *string
}

// GitLabGroup - GitLab Group resource.
type GitLabGroup struct {
	// GitLab Group properties.
	Properties *GitLabGroupProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// GitLabGroupConfiguration - GitLab Group Inventory Configuration.
type GitLabGroupConfiguration struct {
	// AutoDiscovery states.
	AutoDiscovery *AutoDiscovery

	// GitLab Project Inventory Configuration. Dictionary of GitLab fully-qualified project name to desired project configuration.
	// If AutoDiscovery is Enabled, this field should be null or empty.
	ProjectConfigs map[string]*BaseResourceConfiguration
}

// GitLabGroupListResponse - List of RP resources which supports pagination.
type GitLabGroupListResponse struct {
	// Gets or sets next link to scroll over the results.
	NextLink *string

	// Gets or sets list of resources.
	Value []*GitLabGroup
}

// GitLabGroupProperties - GitLab Group properties.
type GitLabGroupProperties struct {
	// Details about resource onboarding status across all connectors.
	// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level
	// resources. Onboarded - this resource has already been onboarded by the
	// specified connector. NotOnboarded - this resource has not been onboarded to any connector. NotApplicable - the onboarding
	// state is not applicable to the current endpoint.
	OnboardingState *OnboardingState

	// The provisioning state of the resource.
	// Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning
	// canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion
	// successful. DeletionFailure - Deletion failure.
	ProvisioningState *DevOpsProvisioningState

	// READ-ONLY; Gets or sets the human readable fully-qualified name of the Group object.
	// This contains the entire namespace hierarchy as seen on GitLab UI where namespaces are separated by the '/' character.
	FullyQualifiedFriendlyName *string

	// READ-ONLY; Gets or sets the fully-qualified name of the Group object.
	// This contains the entire namespace hierarchy where namespaces are separated by the '$' character.
	FullyQualifiedName *string

	// READ-ONLY; Gets or sets resource status message.
	ProvisioningStatusMessage *string

	// READ-ONLY; Gets or sets time when resource was last checked.
	ProvisioningStatusUpdateTimeUTC *time.Time

	// READ-ONLY; Gets or sets the url of the GitLab Group.
	URL *string
}

// GitLabProject - GitLab Project resource.
type GitLabProject struct {
	// GitLab Project properties.
	Properties *GitLabProjectProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// GitLabProjectListResponse - List of RP resources which supports pagination.
type GitLabProjectListResponse struct {
	// Gets or sets next link to scroll over the results.
	NextLink *string

	// Gets or sets list of resources.
	Value []*GitLabProject
}

// GitLabProjectProperties - GitLab Project properties.
type GitLabProjectProperties struct {
	// Details about resource onboarding status across all connectors.
	// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level
	// resources. Onboarded - this resource has already been onboarded by the
	// specified connector. NotOnboarded - this resource has not been onboarded to any connector. NotApplicable - the onboarding
	// state is not applicable to the current endpoint.
	OnboardingState *OnboardingState

	// The provisioning state of the resource.
	// Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning
	// canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion
	// successful. DeletionFailure - Deletion failure.
	ProvisioningState *DevOpsProvisioningState

	// READ-ONLY; Gets or sets the human readable fully-qualified name of the Project object.
	// This contains the entire namespace hierarchy as seen on GitLab UI where entities are separated by the '/' character.
	FullyQualifiedFriendlyName *string

	// READ-ONLY; Gets or sets the fully-qualified name of the project object.
	// This contains the entire hierarchy where entities are separated by the '$' character.
	FullyQualifiedName *string

	// READ-ONLY; Gets or sets the fully-qualified name of the project's parent group object.
	// This contains the entire hierarchy where namespaces are separated by the '$' character.
	FullyQualifiedParentGroupName *string

	// READ-ONLY; Gets or sets resource status message.
	ProvisioningStatusMessage *string

	// READ-ONLY; Gets or sets time when resource was last checked.
	ProvisioningStatusUpdateTimeUTC *time.Time

	// READ-ONLY; Gets or sets the url of the GitLab Project.
	URL *string
}

// OperationStatusResult - The current status of an async operation.
type OperationStatusResult struct {
	// REQUIRED; Operation status.
	Status *string

	// The end time of the operation.
	EndTime *time.Time

	// If present, details of the operation error.
	Error *ErrorDetail

	// Fully qualified ID for the async operation.
	ID *string

	// Name of the async operation.
	Name *string

	// The operations list.
	Operations []*OperationStatusResult

	// Percent of the operation that is complete.
	PercentComplete *float32

	// The start time of the operation.
	StartTime *time.Time
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a
// location
type ProxyResource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// TargetBranchConfiguration - Repository branch configuration for PR Annotations.
type TargetBranchConfiguration struct {
	// Configuration of PR Annotations on default branch.
	// Enabled - PR Annotations are enabled on the resource's default branch. Disabled - PR Annotations are disabled on the resource's
	// default branch.
	AnnotateDefaultBranch *AnnotateDefaultBranchState

	// Gets or sets branches that should have annotations.
	BranchNames []*string
}
