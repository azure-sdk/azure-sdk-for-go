//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armpostgresqlhsc

import "time"

// Cluster - Represents a cluster for create.
type Cluster struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Properties of the cluster create.
	Properties *ClusterProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ClusterClientBeginPromoteReadReplicaOptions contains the optional parameters for the ClusterClient.BeginPromoteReadReplica
// method.
type ClusterClientBeginPromoteReadReplicaOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClusterClientBeginRestartOptions contains the optional parameters for the ClusterClient.BeginRestart method.
type ClusterClientBeginRestartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClusterClientBeginStartOptions contains the optional parameters for the ClusterClient.BeginStart method.
type ClusterClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClusterClientBeginStopOptions contains the optional parameters for the ClusterClient.BeginStop method.
type ClusterClientBeginStopOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClusterConfiguration - Represents the configuration list of server role groups in a cluster.
type ClusterConfiguration struct {
	// The properties of cluster configuration.
	Properties *ClusterConfigurationProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system metadata relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ClusterConfigurationListResult - A list of cluster configurations.
type ClusterConfigurationListResult struct {
	// The list of cluster configurations.
	Value []*ClusterConfiguration `json:"value,omitempty"`

	// READ-ONLY; Link to retrieve next page of results.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// ClusterConfigurationProperties - The properties of cluster configuration.
type ClusterConfigurationProperties struct {
	// REQUIRED; The list of server role group configuration values.
	ServerRoleGroupConfigurations []*ServerRoleGroupConfiguration `json:"serverRoleGroupConfigurations,omitempty"`

	// If configuration change requires restart.
	RequiresRestart *bool `json:"requiresRestart,omitempty"`

	// READ-ONLY; Allowed values of the configuration.
	AllowedValues *string `json:"allowedValues,omitempty" azure:"ro"`

	// READ-ONLY; Data type of the configuration.
	DataType *ConfigurationDataType `json:"dataType,omitempty" azure:"ro"`

	// READ-ONLY; Description of the configuration.
	Description *string `json:"description,omitempty" azure:"ro"`
}

// ClusterForUpdate - Represents a cluster for update.
type ClusterForUpdate struct {
	// The location the resource resides in.
	Location *string `json:"location,omitempty"`

	// Properties of the cluster.
	Properties *ClusterPropertiesForUpdate `json:"properties,omitempty"`

	// Application-specific metadata in the form of key-value pairs.
	Tags map[string]*string `json:"tags,omitempty"`
}

// ClusterListResult - A list of clusters.
type ClusterListResult struct {
	// The list of clusters
	Value []*ClusterResponse `json:"value,omitempty"`

	// READ-ONLY; The link used to get the next page of operations.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// ClusterProperties - The properties used to create a new cluster.
type ClusterProperties struct {
	// The password of the administrator login.
	AdministratorLoginPassword *string `json:"administratorLoginPassword,omitempty"`

	// The Citus version of cluster.
	CitusVersion *string `json:"citusVersion,omitempty"`

	// The edition of the coordinator (default: GeneralPurpose).
	CoordinatorServerEdition *string `json:"coordinatorServerEdition,omitempty"`

	// The storage of the coordinator in MB (max: 2097152 = 2TiB).
	CoordinatorStorageQuotaInMb *int64 `json:"coordinatorStorageQuotaInMb,omitempty"`

	// The vCores count of the coordinator (max: 64).
	CoordinatorVCores *int64 `json:"coordinatorVCores,omitempty"`

	// If high availability is enabled or not for the cluster.
	EnableHa *bool `json:"enableHa,omitempty"`

	// If shards on coordinator is enabled or not for the cluster.
	EnableShardsOnCoordinator *bool `json:"enableShardsOnCoordinator,omitempty"`

	// Maintenance window of a cluster.
	MaintenanceWindow *MaintenanceWindow `json:"maintenanceWindow,omitempty"`

	// Worker node count of the cluster
	NodeCount *int64 `json:"nodeCount,omitempty"`

	// The edition of a node (default: MemoryOptimized).
	NodeServerEdition *string `json:"nodeServerEdition,omitempty"`

	// The storage of a node in MB (max: 2097152 = 2TiB).
	NodeStorageQuotaInMb *int64 `json:"nodeStorageQuotaInMb,omitempty"`

	// The vCores count of a node (max: 64).
	NodeVCores *int64 `json:"nodeVCores,omitempty"`

	// Restore point creation time (ISO8601 format), specifying the time to restore from. It's required for'PointInTimeRestore'
	// operation
	PointInTimeUTC *time.Time `json:"pointInTimeUTC,omitempty"`

	// The PostgreSQL version of cluster.
	PostgresqlVersion *string `json:"postgresqlVersion,omitempty"`

	// Preferred primary zone for the cluster
	PreferredPrimaryZone *string `json:"preferredPrimaryZone,omitempty"`

	// The source cluster location to restore from. It's required for 'PointInTimeRestore' or 'ReadReplica' operations
	SourceLocation *string `json:"sourceLocation,omitempty"`

	// The source resource id to restore from. It's required for 'PointInTimeRestore' or 'ReadReplica' operations
	SourceResourceID *string `json:"sourceResourceId,omitempty"`

	// READ-ONLY; If public IP is requested or not for the coordinator.
	CoordinatorEnablePublicIPAccess *bool `json:"coordinatorEnablePublicIpAccess,omitempty" azure:"ro"`

	// READ-ONLY; The earliest restore point time (ISO8601 format) for the cluster.
	EarliestRestoreTime *time.Time `json:"earliestRestoreTime,omitempty" azure:"ro"`

	// READ-ONLY; If public IP is requested or not for a node.
	NodeEnablePublicIPAccess *bool `json:"nodeEnablePublicIpAccess,omitempty" azure:"ro"`
}

// ClusterPropertiesForUpdate - The properties used to update a cluster.
type ClusterPropertiesForUpdate struct {
	// The password of the administrator login.
	AdministratorLoginPassword *string `json:"administratorLoginPassword,omitempty"`

	// The Citus version of the cluster.
	CitusVersion *string `json:"citusVersion,omitempty"`

	// The edition of the coordinator (default: GeneralPurpose).
	CoordinatorServerEdition *string `json:"coordinatorServerEdition,omitempty"`

	// The storage of the coordinator in MB (max: 2097152 = 2TiB).
	CoordinatorStorageQuotaInMb *int64 `json:"coordinatorStorageQuotaInMb,omitempty"`

	// The vCores count of the coordinator (max: 64).
	CoordinatorVCores *int64 `json:"coordinatorVCores,omitempty"`

	// If high availability is enabled or not for the cluster.
	EnableHa *bool `json:"enableHa,omitempty"`

	// If shards on coordinator is enabled or not for the cluster.
	EnableShardsOnCoordinator *bool `json:"enableShardsOnCoordinator,omitempty"`

	// Maintenance window of a cluster.
	MaintenanceWindow *MaintenanceWindow `json:"maintenanceWindow,omitempty"`

	// Worker node count of the cluster
	NodeCount *int64 `json:"nodeCount,omitempty"`

	// The edition of a node (default: MemoryOptimized).
	NodeServerEdition *string `json:"nodeServerEdition,omitempty"`

	// The storage of a node in MB (max: 2097152 = 2TiB).
	NodeStorageQuotaInMb *int64 `json:"nodeStorageQuotaInMb,omitempty"`

	// The vCores count of a node (max: 64).
	NodeVCores *int64 `json:"nodeVCores,omitempty"`

	// The PostgreSQL version of the cluster.
	PostgresqlVersion *string `json:"postgresqlVersion,omitempty"`

	// Preferred primary zone for the cluster
	PreferredPrimaryZone *string `json:"preferredPrimaryZone,omitempty"`

	// READ-ONLY; If public IP is requested or not for the coordinator.
	CoordinatorEnablePublicIPAccess *bool `json:"coordinatorEnablePublicIpAccess,omitempty" azure:"ro"`

	// READ-ONLY; If public IP is requested or not for a node.
	NodeEnablePublicIPAccess *bool `json:"nodeEnablePublicIpAccess,omitempty" azure:"ro"`
}

// ClusterResponse - Represents a cluster in response body.
type ClusterResponse struct {
	// Properties of the cluster response body.
	Properties *ClusterResponseProperties `json:"properties,omitempty"`

	// READ-ONLY; The system metadata relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// ClusterResponseProperties - Properties of the cluster response body.
type ClusterResponseProperties struct {
	// Administrator Login username for the PostgreSQL
	AdministratorLogin *string `json:"administratorLogin,omitempty"`

	// The Citus version of cluster.
	CitusVersion *string `json:"citusVersion,omitempty"`

	// The edition of a coordinator server (default: GeneralPurpose).
	CoordinatorServerEdition *string `json:"coordinatorServerEdition,omitempty"`

	// The storage of a server in MB (max: 2097152 = 2TiB).
	CoordinatorStorageQuotaInMb *int64 `json:"coordinatorStorageQuotaInMb,omitempty"`

	// The vCores count of a server (max: 64).
	CoordinatorVCores *int64 `json:"coordinatorVCores,omitempty"`

	// If high availability is enabled or not for the server.
	EnableHa *bool `json:"enableHa,omitempty"`

	// If shards on coordinator is enabled or not for the cluster.
	EnableShardsOnCoordinator *bool `json:"enableShardsOnCoordinator,omitempty"`

	// Maintenance window of a cluster.
	MaintenanceWindow *MaintenanceWindow `json:"maintenanceWindow,omitempty"`

	// Worker node count of the cluster
	NodeCount *int64 `json:"nodeCount,omitempty"`

	// The edition of a node server (default: MemoryOptimized).
	NodeServerEdition *string `json:"nodeServerEdition,omitempty"`

	// The storage of a server in MB (max: 2097152 = 2TiB).
	NodeStorageQuotaInMb *int64 `json:"nodeStorageQuotaInMb,omitempty"`

	// The vCores count of a server (max: 64).
	NodeVCores *int64 `json:"nodeVCores,omitempty"`

	// The PostgreSQL version of cluster.
	PostgresqlVersion *string `json:"postgresqlVersion,omitempty"`

	// Preferred primary zone for the cluster
	PreferredPrimaryZone *string `json:"preferredPrimaryZone,omitempty"`

	// READ-ONLY; If public IP is requested or not for a server.
	CoordinatorEnablePublicIPAccess *bool `json:"coordinatorEnablePublicIpAccess,omitempty" azure:"ro"`

	// READ-ONLY; The earliest restore point time (ISO8601 format) for the cluster.
	EarliestRestoreTime *time.Time `json:"earliestRestoreTime,omitempty" azure:"ro"`

	// READ-ONLY; If public IP is requested or not for a server.
	NodeEnablePublicIPAccess *bool `json:"nodeEnablePublicIpAccess,omitempty" azure:"ro"`

	// READ-ONLY; The private endpoint connections for a cluster.
	PrivateEndpointConnections []*PrivateEndpointConnection `json:"privateEndpointConnections,omitempty" azure:"ro"`

	// READ-ONLY; Provisioning state of the cluster
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The array of read replica clusters.
	ReadReplicas []*string `json:"readReplicas,omitempty" azure:"ro"`

	// READ-ONLY; The list of server names in the cluster
	ServerNames []*ServerNameItem `json:"serverNames,omitempty" azure:"ro"`

	// READ-ONLY; The source cluster id for read replica clusters.
	SourceCluster *string `json:"sourceCluster,omitempty" azure:"ro"`

	// READ-ONLY; A state of a cluster/server that is visible to user.
	State *string `json:"state,omitempty" azure:"ro"`
}

// ClusterServer - Represents a server in a cluster.
type ClusterServer struct {
	// The properties of a server in a cluster.
	Properties *ClusterServerProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system metadata relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ClusterServerListResult - A list of servers in a cluster.
type ClusterServerListResult struct {
	// The list of servers in a cluster.
	Value []*ClusterServer `json:"value,omitempty"`
}

// ClusterServerProperties - The properties of a server in cluster.
type ClusterServerProperties struct {
	// The administrator's login name of a servers in cluster.
	AdministratorLogin *string `json:"administratorLogin,omitempty"`

	// The Citus version of server.
	CitusVersion *string `json:"citusVersion,omitempty"`

	// If high availability is enabled or not for the server.
	EnableHa *bool `json:"enableHa,omitempty"`

	// The PostgreSQL version of server.
	PostgresqlVersion *string `json:"postgresqlVersion,omitempty"`

	// The role of server in the cluster.
	Role *ServerRole `json:"role,omitempty"`

	// The edition of a server
	ServerEdition *string `json:"serverEdition,omitempty"`

	// The storage of a server in MB (max: 2097152 = 2TiB).
	StorageQuotaInMb *int64 `json:"storageQuotaInMb,omitempty"`

	// The vCores count of a server (max: 64).
	VCores *int64 `json:"vCores,omitempty"`

	// READ-ONLY; If public IP is requested or not for a server.
	EnablePublicIP *bool `json:"enablePublicIp,omitempty" azure:"ro"`

	// READ-ONLY; The fully qualified domain name of a server.
	FullyQualifiedDomainName *string `json:"fullyQualifiedDomainName,omitempty" azure:"ro"`

	// READ-ONLY; A state of HA feature for the cluster.
	HaState *string `json:"haState,omitempty" azure:"ro"`

	// READ-ONLY; A state of a cluster/server that is visible to user.
	State *string `json:"state,omitempty" azure:"ro"`
}

// ClustersClientBeginCreateOrUpdateOptions contains the optional parameters for the ClustersClient.BeginCreateOrUpdate method.
type ClustersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClustersClientBeginDeleteOptions contains the optional parameters for the ClustersClient.BeginDelete method.
type ClustersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClustersClientBeginUpdateOptions contains the optional parameters for the ClustersClient.BeginUpdate method.
type ClustersClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClustersClientCheckNameAvailabilityOptions contains the optional parameters for the ClustersClient.CheckNameAvailability
// method.
type ClustersClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// ClustersClientGetOptions contains the optional parameters for the ClustersClient.Get method.
type ClustersClientGetOptions struct {
	// placeholder for future optional parameters
}

// ClustersClientListByResourceGroupOptions contains the optional parameters for the ClustersClient.ListByResourceGroup method.
type ClustersClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ClustersClientListOptions contains the optional parameters for the ClustersClient.List method.
type ClustersClientListOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationClientGetCoordinatorOptions contains the optional parameters for the ConfigurationClient.GetCoordinator method.
type ConfigurationClientGetCoordinatorOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationClientGetNodeOptions contains the optional parameters for the ConfigurationClient.GetNode method.
type ConfigurationClientGetNodeOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationsClientBeginUpdateNodeOptions contains the optional parameters for the ConfigurationsClient.BeginUpdateNode
// method.
type ConfigurationsClientBeginUpdateNodeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConfigurationsClientBeginUpdateOptions contains the optional parameters for the ConfigurationsClient.BeginUpdate method.
type ConfigurationsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConfigurationsClientListByClusterOptions contains the optional parameters for the ConfigurationsClient.ListByCluster method.
type ConfigurationsClientListByClusterOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationsClientListByServerOptions contains the optional parameters for the ConfigurationsClient.ListByServer method.
type ConfigurationsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// FirewallRule - Represents a cluster firewall rule.
type FirewallRule struct {
	// REQUIRED; The properties of a firewall rule.
	Properties *FirewallRuleProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system metadata relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// FirewallRuleListResult - A list of firewall rules.
type FirewallRuleListResult struct {
	// The list of firewall rules in a cluster.
	Value []*FirewallRule `json:"value,omitempty"`
}

// FirewallRuleProperties - The properties of a cluster firewall rule.
type FirewallRuleProperties struct {
	// REQUIRED; The end IP address of the cluster firewall rule. Must be IPv4 format.
	EndIPAddress *string `json:"endIpAddress,omitempty"`

	// REQUIRED; The start IP address of the cluster firewall rule. Must be IPv4 format.
	StartIPAddress *string `json:"startIpAddress,omitempty"`
}

// FirewallRulesClientBeginCreateOrUpdateOptions contains the optional parameters for the FirewallRulesClient.BeginCreateOrUpdate
// method.
type FirewallRulesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FirewallRulesClientBeginDeleteOptions contains the optional parameters for the FirewallRulesClient.BeginDelete method.
type FirewallRulesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FirewallRulesClientGetOptions contains the optional parameters for the FirewallRulesClient.Get method.
type FirewallRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// FirewallRulesClientListByClusterOptions contains the optional parameters for the FirewallRulesClient.ListByCluster method.
type FirewallRulesClientListByClusterOptions struct {
	// placeholder for future optional parameters
}

// MaintenanceWindow - Maintenance window of a cluster.
type MaintenanceWindow struct {
	// indicates whether custom window is enabled or disabled
	CustomWindow *string `json:"customWindow,omitempty"`

	// day of week for maintenance window
	DayOfWeek *int32 `json:"dayOfWeek,omitempty"`

	// start hour for maintenance window
	StartHour *int32 `json:"startHour,omitempty"`

	// start minute for maintenance window
	StartMinute *int32 `json:"startMinute,omitempty"`
}

// NameAvailability - Represents a resource name availability.
type NameAvailability struct {
	// Error Message.
	Message *string `json:"message,omitempty"`

	// name of the PostgreSQL server.
	Name *string `json:"name,omitempty"`

	// Indicates whether the resource name is available.
	NameAvailable *bool `json:"nameAvailable,omitempty"`

	// type of the server
	Type *string `json:"type,omitempty"`
}

// NameAvailabilityRequest - Request from client to check resource name availability.
type NameAvailabilityRequest struct {
	// REQUIRED; Resource name to verify.
	Name *string `json:"name,omitempty"`

	// CONSTANT; Resource type used for verification.
	// Field has constant value "Microsoft.DBforPostgreSQL/serverGroupsv2", any specified value is ignored.
	Type *string `json:"type,omitempty"`
}

// Operation - REST API operation definition.
type Operation struct {
	// Indicates whether the operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// READ-ONLY; The localized display information for this particular operation or action.
	Display *OperationDisplay `json:"display,omitempty" azure:"ro"`

	// READ-ONLY; The name of the operation being performed on this particular object.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The intended executor of the operation.
	Origin *OperationOrigin `json:"origin,omitempty" azure:"ro"`

	// READ-ONLY; Additional descriptions for the operation.
	Properties map[string]interface{} `json:"properties,omitempty" azure:"ro"`
}

// OperationDisplay - Display metadata associated with the operation.
type OperationDisplay struct {
	// READ-ONLY; Operation description.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; Localized friendly name for the operation.
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; Operation resource provider name.
	Provider *string `json:"provider,omitempty" azure:"ro"`

	// READ-ONLY; Resource on which the operation is performed.
	Resource *string `json:"resource,omitempty" azure:"ro"`
}

// OperationListResult - A list of resource provider operations.
type OperationListResult struct {
	// Collection of available operation details
	Value []*Operation `json:"value,omitempty"`

	// READ-ONLY; URL client should use to fetch the next page (per server side paging). It's null for now, added for future use.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnection - A private endpoint connection
type PrivateEndpointConnection struct {
	// Properties of the private endpoint connection.
	Properties *PrivateEndpointConnectionSimpleProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system metadata relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PrivateEndpointConnectionListResult - A list of private endpoint connections.
type PrivateEndpointConnectionListResult struct {
	// The list of private endpoint connections
	Value []*PrivateEndpointConnectionProperty `json:"value,omitempty"`

	// READ-ONLY; Link to retrieve next page of results.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// PrivateEndpointConnectionProperties - The properties in private endpoint connection
type PrivateEndpointConnectionProperties struct {
	// Private endpoint which the connection belongs to.
	PrivateEndpoint *PrivateEndpointProperty `json:"privateEndpoint,omitempty"`

	// Connection state of the private endpoint connection.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateProperty `json:"privateLinkServiceConnectionState,omitempty"`

	// State of the private endpoint connection.
	ProvisioningState *string `json:"provisioningState,omitempty"`
}

// PrivateEndpointConnectionProperty - A private endpoint connection property
type PrivateEndpointConnectionProperty struct {
	// Properties of the private endpoint connection.
	Properties *PrivateEndpointConnectionProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system metadata relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PrivateEndpointConnectionRequest - A private endpoint connection
type PrivateEndpointConnectionRequest struct {
	// Properties of the private endpoint connection.
	Properties *PrivateEndpointConnectionRequestProperties `json:"properties,omitempty"`
}

// PrivateEndpointConnectionRequestProperties - The properties used to create a private endpoint connection
type PrivateEndpointConnectionRequestProperties struct {
	// Private endpoint which the connection belongs to.
	PrivateEndpoint *PrivateEndpointProperty `json:"privateEndpoint,omitempty"`

	// Connection state of the private endpoint connection.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateProperty `json:"privateLinkServiceConnectionState,omitempty"`
}

// PrivateEndpointConnectionSimpleProperties - The properties in private endpoint connection
type PrivateEndpointConnectionSimpleProperties struct {
	// Private endpoint which the connection belongs to.
	PrivateEndpoint *PrivateEndpointProperty `json:"privateEndpoint,omitempty"`

	// Connection state of the private endpoint connection.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateProperty `json:"privateLinkServiceConnectionState,omitempty"`
}

// PrivateEndpointConnectionsClientCreateOrUpdateOptions contains the optional parameters for the PrivateEndpointConnectionsClient.CreateOrUpdate
// method.
type PrivateEndpointConnectionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientDeleteOptions contains the optional parameters for the PrivateEndpointConnectionsClient.Delete
// method.
type PrivateEndpointConnectionsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientGetOptions contains the optional parameters for the PrivateEndpointConnectionsClient.Get
// method.
type PrivateEndpointConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientListByClusterOptions contains the optional parameters for the PrivateEndpointConnectionsClient.ListByCluster
// method.
type PrivateEndpointConnectionsClientListByClusterOptions struct {
	// placeholder for future optional parameters
}

type PrivateEndpointProperty struct {
	// Resource id of the private endpoint.
	ID *string `json:"id,omitempty"`
}

// PrivateLinkResource - A private link resource
type PrivateLinkResource struct {
	// Properties of the private link resource.
	Properties *PrivateLinkResourceProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system metadata relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PrivateLinkResourceListResult - A list of private link resources.
type PrivateLinkResourceListResult struct {
	// The list of private link resources.
	Value []*PrivateLinkResource `json:"value,omitempty"`

	// READ-ONLY; The link used to get the next page of private link resources.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// PrivateLinkResourceProperties - Properties of a private link resource.
type PrivateLinkResourceProperties struct {
	// The private link resource group id.
	GroupID *string `json:"groupId,omitempty"`

	// The private link resource required member names.
	MemberNames []*string `json:"memberNames,omitempty"`

	// The private link resource zone names.
	ZoneNames []*string `json:"zoneNames,omitempty"`
}

// PrivateLinkResourcesClientGetOptions contains the optional parameters for the PrivateLinkResourcesClient.Get method.
type PrivateLinkResourcesClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientListByClusterOptions contains the optional parameters for the PrivateLinkResourcesClient.ListByCluster
// method.
type PrivateLinkResourcesClientListByClusterOptions struct {
	// placeholder for future optional parameters
}

type PrivateLinkServiceConnectionStateProperty struct {
	// The actions required for private link service connection.
	ActionsRequired *string `json:"actionsRequired,omitempty"`

	// The private link service connection description.
	Description *string `json:"description,omitempty"`

	// The private link service connection status.
	Status *string `json:"status,omitempty"`
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a
// location
type ProxyResource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// Role - Represents a cluster role.
type Role struct {
	// The properties of a role.
	Properties *RoleProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system metadata relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RoleListResult - A list of roles.
type RoleListResult struct {
	// The list of roles in a cluster.
	Value []*Role `json:"value,omitempty"`
}

// RoleProperties - The properties of a cluster role.
type RoleProperties struct {
	// REQUIRED; The password of the cluster role.
	Password *string `json:"password,omitempty"`
}

// RolesClientBeginCreateOptions contains the optional parameters for the RolesClient.BeginCreate method.
type RolesClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RolesClientBeginDeleteOptions contains the optional parameters for the RolesClient.BeginDelete method.
type RolesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RolesClientListByClusterOptions contains the optional parameters for the RolesClient.ListByCluster method.
type RolesClientListByClusterOptions struct {
	// placeholder for future optional parameters
}

// ServerConfiguration - Represents a configuration.
type ServerConfiguration struct {
	// The properties of a configuration.
	Properties *ServerConfigurationProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system metadata relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ServerConfigurationListResult - A list of server configurations.
type ServerConfigurationListResult struct {
	// The list of server configurations.
	Value []*ServerConfiguration `json:"value,omitempty"`

	// READ-ONLY; Link to retrieve next page of results.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// ServerConfigurationProperties - The properties of a configuration.
type ServerConfigurationProperties struct {
	// REQUIRED; Value of the configuration.
	Value *string `json:"value,omitempty"`

	// If configuration change requires restart.
	RequiresRestart *bool `json:"requiresRestart,omitempty"`

	// READ-ONLY; Allowed values of the configuration.
	AllowedValues *string `json:"allowedValues,omitempty" azure:"ro"`

	// READ-ONLY; Data type of the configuration.
	DataType *ConfigurationDataType `json:"dataType,omitempty" azure:"ro"`

	// READ-ONLY; Default value of the configuration.
	DefaultValue *string `json:"defaultValue,omitempty" azure:"ro"`

	// READ-ONLY; Description of the configuration.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; Source of the configuration.
	Source *string `json:"source,omitempty" azure:"ro"`
}

// ServerConfigurationRequest - Represents a configuration.
type ServerConfigurationRequest struct {
	// Represents the value of a configuration.
	Value *string `json:"value,omitempty"`
}

// ServerNameItem - The name object for a server.
type ServerNameItem struct {
	// The name of a server.
	Name *string `json:"name,omitempty"`

	// READ-ONLY; The fully qualified domain name of a server.
	FullyQualifiedDomainName *string `json:"fullyQualifiedDomainName,omitempty" azure:"ro"`
}

// ServerProperties - The properties of a server.
type ServerProperties struct {
	// If high availability is enabled or not for the server.
	EnableHa *bool `json:"enableHa,omitempty"`

	// The edition of a server
	ServerEdition *string `json:"serverEdition,omitempty"`

	// The storage of a server in MB (max: 2097152 = 2TiB).
	StorageQuotaInMb *int64 `json:"storageQuotaInMb,omitempty"`

	// The vCores count of a server (max: 64).
	VCores *int64 `json:"vCores,omitempty"`

	// READ-ONLY; If public IP is requested or not for a server.
	EnablePublicIP *bool `json:"enablePublicIp,omitempty" azure:"ro"`
}

// ServerRoleGroupConfiguration - Represents server role group configuration value.
type ServerRoleGroupConfiguration struct {
	// REQUIRED; The role of servers in the server role group.
	Role *ServerRole `json:"role,omitempty"`

	// REQUIRED; Value of the configuration.
	Value *string `json:"value,omitempty"`

	// READ-ONLY; Default value of the configuration.
	DefaultValue *string `json:"defaultValue,omitempty" azure:"ro"`

	// READ-ONLY; Source of the configuration.
	Source *string `json:"source,omitempty" azure:"ro"`
}

// ServersClientGetOptions contains the optional parameters for the ServersClient.Get method.
type ServersClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServersClientListByClusterOptions contains the optional parameters for the ServersClient.ListByCluster method.
type ServersClientListByClusterOptions struct {
	// placeholder for future optional parameters
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}
