//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armmanagementgroups

// APIClientCheckNameAvailabilityOptions contains the optional parameters for the APIClient.CheckNameAvailability method.
type APIClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// APIClientStartTenantBackfillOptions contains the optional parameters for the APIClient.StartTenantBackfill method.
type APIClientStartTenantBackfillOptions struct {
	// placeholder for future optional parameters
}

// APIClientTenantBackfillStatusOptions contains the optional parameters for the APIClient.TenantBackfillStatus method.
type APIClientTenantBackfillStatusOptions struct {
	// placeholder for future optional parameters
}

// ClientBeginCreateOrUpdateOptions contains the optional parameters for the Client.BeginCreateOrUpdate method.
type ClientBeginCreateOrUpdateOptions struct {
	// Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches.
	CacheControl *string

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientBeginDeleteOptions contains the optional parameters for the Client.BeginDelete method.
type ClientBeginDeleteOptions struct {
	// Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches.
	CacheControl *string

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientGetDescendantsOptions contains the optional parameters for the Client.NewGetDescendantsPager method.
type ClientGetDescendantsOptions struct {
	// Page continuation token is only used if a previous operation returned a partial result. If a previous response contains
	// a nextLink element, the value of the nextLink element will include a token
	// parameter that specifies a starting point to use for subsequent calls.
	Skiptoken *string

	// Number of elements to return when retrieving results. Passing this in will override $skipToken.
	Top *int32
}

// ClientGetOptions contains the optional parameters for the Client.Get method.
type ClientGetOptions struct {
	// Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches.
	CacheControl *string

	// The $expand=children query string parameter allows clients to request inclusion of children in the response payload. $expand=path
	// includes the path from the root group to the current group.
	// $expand=ancestors includes the ancestor Ids of the current group.
	Expand *ManagementGroupExpandType

	// A filter which allows the exclusion of subscriptions from results (i.e. '$filter=children.childType ne Subscription')
	Filter *string

	// The $recurse=true query string parameter allows clients to request inclusion of entire hierarchy in the response payload.
	// Note that $expand=children must be passed up if $recurse is set to true.
	Recurse *bool
}

// ClientListSettingsOptions contains the optional parameters for the Client.NewListSettingsPager method.
type ClientListSettingsOptions struct {
	// placeholder for future optional parameters
}

// ClientUpdateOptions contains the optional parameters for the Client.Update method.
type ClientUpdateOptions struct {
	// Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches.
	CacheControl *string
}

// EntitiesOperationsClientListOptions contains the optional parameters for the EntitiesOperationsClient.NewListPager method.
type EntitiesOperationsClientListOptions struct {
	// Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches.
	CacheControl *string

	// The filter parameter allows you to filter on the the name or display name fields. You can check for equality on the name
	// field (e.g. name eq '{entityName}') and you can check for substrings on either
	// the name or display name fields(e.g. contains(name, '{substringToSearch}'), contains(displayName, '{substringToSearch')).
	// Note that the '{entityName}' and '{substringToSearch}' fields are checked case
	// insensitively.
	Filter *string

	// A filter which allows the get entities call to focus on a particular group (i.e. "$filter=name eq 'groupName'")
	GroupName *string

	// The $search parameter is used in conjunction with the $filter parameter to return three different outputs depending on
	// the parameter passed in. With $search=AllowedParents the API will return the
	// entity info of all groups that the requested entity will be able to reparent to as determined by the user's permissions.
	// With $search=AllowedChildren the API will return the entity info of all
	// entities that can be added as children of the requested entity. With $search=ParentAndFirstLevelChildren the API will return
	// the parent and first level of children that the user has either direct
	// access to or indirect access via one of their descendants. With $search=ParentOnly the API will return only the group if
	// the user has access to at least one of the descendants of the group. With
	// $search=ChildrenOnly the API will return only the first level of children of the group entity info specified in $filter.
	// The user must have direct access to the children entities or one of it's
	// descendants for it to show up in the results.
	Search *EntitySearchType

	// This parameter specifies the fields to include in the response. Can include any combination of Name,DisplayName,Type,ParentDisplayNameChain,ParentChain,
	// e.g.
	// '$select=Name,DisplayName,Type,ParentDisplayNameChain,ParentNameChain'. When specified the $select parameter can override
	// select in $skipToken.
	Select *string

	// Number of entities to skip over when retrieving results. Passing this in will override $skipToken.
	Skip *int32

	// Page continuation token is only used if a previous operation returned a partial result. If a previous response contains
	// a nextLink element, the value of the nextLink element will include a token
	// parameter that specifies a starting point to use for subsequent calls.
	Skiptoken *string

	// Number of elements to return when retrieving results. Passing this in will override $skipToken.
	Top *int32

	// The view parameter allows clients to filter the type of data that is returned by the getEntities call.
	View *EntityViewParameterType
}

// HierarchySettingsOperationGroupClientCreateOrUpdateOptions contains the optional parameters for the HierarchySettingsOperationGroupClient.CreateOrUpdate
// method.
type HierarchySettingsOperationGroupClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// HierarchySettingsOperationGroupClientDeleteOptions contains the optional parameters for the HierarchySettingsOperationGroupClient.Delete
// method.
type HierarchySettingsOperationGroupClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// HierarchySettingsOperationGroupClientGetOptions contains the optional parameters for the HierarchySettingsOperationGroupClient.Get
// method.
type HierarchySettingsOperationGroupClientGetOptions struct {
	// placeholder for future optional parameters
}

// HierarchySettingsOperationGroupClientListOptions contains the optional parameters for the HierarchySettingsOperationGroupClient.NewListPager
// method.
type HierarchySettingsOperationGroupClientListOptions struct {
	// placeholder for future optional parameters
}

// HierarchySettingsOperationGroupClientUpdateOptions contains the optional parameters for the HierarchySettingsOperationGroupClient.Update
// method.
type HierarchySettingsOperationGroupClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionUnderManagementGroupsClientCreateOptions contains the optional parameters for the SubscriptionUnderManagementGroupsClient.Create
// method.
type SubscriptionUnderManagementGroupsClientCreateOptions struct {
	// Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches.
	CacheControl *string

	// Resource create parameters.
	Resource *SubscriptionUnderManagementGroup
}

// SubscriptionUnderManagementGroupsClientDeleteOptions contains the optional parameters for the SubscriptionUnderManagementGroupsClient.Delete
// method.
type SubscriptionUnderManagementGroupsClientDeleteOptions struct {
	// Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches.
	CacheControl *string
}

// SubscriptionUnderManagementGroupsClientGetSubscriptionOptions contains the optional parameters for the SubscriptionUnderManagementGroupsClient.GetSubscription
// method.
type SubscriptionUnderManagementGroupsClientGetSubscriptionOptions struct {
	// Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches.
	CacheControl *string
}

// SubscriptionUnderManagementGroupsClientGetSubscriptionsUnderManagementGroupOptions contains the optional parameters for
// the SubscriptionUnderManagementGroupsClient.NewGetSubscriptionsUnderManagementGroupPager method.
type SubscriptionUnderManagementGroupsClientGetSubscriptionsUnderManagementGroupOptions struct {
	// Page continuation token is only used if a previous operation returned a partial result. If a previous response contains
	// a nextLink element, the value of the nextLink element will include a token
	// parameter that specifies a starting point to use for subsequent calls.
	Skiptoken *string
}
