//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armportal

import "time"

// Configuration - The tenant configuration resource definition.
type Configuration struct {
	// The resource-specific properties for this resource.
	Properties *ConfigurationProperties

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ConfigurationListResult - The response of a Configuration list operation.
type ConfigurationListResult struct {
	// REQUIRED; The Configuration items on this page
	Value []*Configuration

	// The link to the next page of items
	NextLink *string
}

// ConfigurationProperties - Tenant Configuration Properties with Provisioning state
type ConfigurationProperties struct {
	// When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration
	// will be prohibited.
	EnforcePrivateMarkdownStorage *bool

	// READ-ONLY; The status of the last operation.
	ProvisioningState *ResourceProvisioningState
}

// Dashboard - The shared dashboard resource definition.
type Dashboard struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// The resource-specific properties for this resource.
	Properties *DashboardPropertiesWithProvisioningState

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// DashboardLens - A dashboard lens.
type DashboardLens struct {
	// REQUIRED; The lens order.
	Order *int32

	// REQUIRED; The dashboard parts.
	Parts []*DashboardParts

	// The dashboard len's metadata.
	Metadata any
}

// DashboardListResult - The response of a Dashboard list operation.
type DashboardListResult struct {
	// REQUIRED; The Dashboard items on this page
	Value []*Dashboard

	// The link to the next page of items
	NextLink *string
}

// DashboardPartMetadata - A dashboard part metadata.
type DashboardPartMetadata struct {
	// REQUIRED; The dashboard part metadata type.
	Type *DashboardPartMetadataType
}

// GetDashboardPartMetadata implements the DashboardPartMetadataClassification interface for type DashboardPartMetadata.
func (d *DashboardPartMetadata) GetDashboardPartMetadata() *DashboardPartMetadata { return d }

// DashboardParts - A dashboard part.
type DashboardParts struct {
	// REQUIRED; The dashboard's part position.
	Position *DashboardPartsPosition

	// The dashboard part's metadata.
	Metadata DashboardPartMetadataClassification
}

// DashboardPartsPosition - The dashboard's part position.
type DashboardPartsPosition struct {
	// REQUIRED; The dashboard's part column span.
	ColSpan *int32

	// REQUIRED; The dashboard's part row span.
	RowSpan *int32

	// REQUIRED; The dashboard's part x coordinate.
	X *int32

	// REQUIRED; The dashboard's part y coordinate.
	Y *int32

	// The dashboard part's metadata.
	Metadata any
}

// DashboardProperties - The shared dashboard properties.
type DashboardProperties struct {
	// The dashboard lenses.
	Lenses []*DashboardLens

	// The dashboard metadata.
	Metadata any
}

// DashboardPropertiesWithProvisioningState - Dashboard Properties with Provisioning state
type DashboardPropertiesWithProvisioningState struct {
	// The dashboard lenses.
	Lenses []*DashboardLens

	// The dashboard metadata.
	Metadata any

	// READ-ONLY; The status of the last operation.
	ProvisioningState *ResourceProvisioningState
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any

	// READ-ONLY; The additional info type.
	Type *string
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo

	// READ-ONLY; The error code.
	Code *string

	// READ-ONLY; The error details.
	Details []*ErrorDetail

	// READ-ONLY; The error message.
	Message *string

	// READ-ONLY; The error target.
	Target *string
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail
}

// MarkdownPartMetadata - Markdown part metadata.
type MarkdownPartMetadata struct {
	// REQUIRED; The dashboard part metadata type.
	Type *DashboardPartMetadataType

	// Input to dashboard part.
	Inputs []any

	// Markdown part settings.
	Settings *MarkdownPartMetadataSettings
}

// GetDashboardPartMetadata implements the DashboardPartMetadataClassification interface for type MarkdownPartMetadata.
func (m *MarkdownPartMetadata) GetDashboardPartMetadata() *DashboardPartMetadata {
	return &DashboardPartMetadata{
		Type: m.Type,
	}
}

// MarkdownPartMetadataSettings - Markdown part settings.
type MarkdownPartMetadataSettings struct {
	// The content of markdown part.
	Content *MarkdownPartMetadataSettingsContent
}

// MarkdownPartMetadataSettingsContent - The content of markdown part.
type MarkdownPartMetadataSettingsContent struct {
	// The setting of the content of markdown part.
	Settings *MarkdownPartMetadataSettingsContentSettings
}

// MarkdownPartMetadataSettingsContentSettings - The setting of the content of markdown part.
type MarkdownPartMetadataSettingsContentSettings struct {
	// The content of the markdown part.
	Content *string

	// The source of the content of the markdown part.
	MarkdownSource *int32

	// The uri of markdown content.
	MarkdownURI *string

	// The subtitle of the markdown part.
	Subtitle *string

	// The title of the markdown part.
	Title *string
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation
}

// PatchableDashboard - The shared dashboard resource definition.
type PatchableDashboard struct {
	// The shared dashboard properties.
	Properties *DashboardProperties

	// Resource tags
	Tags map[string]*string
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a
// location
type ProxyResource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// Violation information.
type Violation struct {
	// READ-ONLY; Error message.
	ErrorMessage *string

	// READ-ONLY; Id of the item that violates tenant configuration.
	ID *string

	// READ-ONLY; Id of the user who owns violated item.
	UserID *string
}

// ViolationsList - List of list of items that violate tenant's configuration.
type ViolationsList struct {
	// REQUIRED; The Violation items on this page
	Value []*Violation

	// The link to the next page of items
	NextLink *string
}
