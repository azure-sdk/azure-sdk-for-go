package servicelinker

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// ActionType enumerates the values for action type.
type ActionType string

const (
	// Internal ...
	Internal ActionType = "Internal"
)

// PossibleActionTypeValues returns an array of possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{Internal}
}

// AuthType enumerates the values for auth type.
type AuthType string

const (
	// Secret ...
	Secret AuthType = "secret"
	// ServicePrincipalCertificate ...
	ServicePrincipalCertificate AuthType = "servicePrincipalCertificate"
	// ServicePrincipalSecret ...
	ServicePrincipalSecret AuthType = "servicePrincipalSecret"
	// SystemAssignedIdentity ...
	SystemAssignedIdentity AuthType = "systemAssignedIdentity"
	// UserAssignedIdentity ...
	UserAssignedIdentity AuthType = "userAssignedIdentity"
)

// PossibleAuthTypeValues returns an array of possible values for the AuthType const type.
func PossibleAuthTypeValues() []AuthType {
	return []AuthType{Secret, ServicePrincipalCertificate, ServicePrincipalSecret, SystemAssignedIdentity, UserAssignedIdentity}
}

// AuthTypeBasicAuthInfoBase enumerates the values for auth type basic auth info base.
type AuthTypeBasicAuthInfoBase string

const (
	// AuthTypeAuthInfoBase ...
	AuthTypeAuthInfoBase AuthTypeBasicAuthInfoBase = "AuthInfoBase"
	// AuthTypeSecret ...
	AuthTypeSecret AuthTypeBasicAuthInfoBase = "secret"
	// AuthTypeServicePrincipalCertificate ...
	AuthTypeServicePrincipalCertificate AuthTypeBasicAuthInfoBase = "servicePrincipalCertificate"
	// AuthTypeServicePrincipalSecret ...
	AuthTypeServicePrincipalSecret AuthTypeBasicAuthInfoBase = "servicePrincipalSecret"
	// AuthTypeSystemAssignedIdentity ...
	AuthTypeSystemAssignedIdentity AuthTypeBasicAuthInfoBase = "systemAssignedIdentity"
	// AuthTypeUserAssignedIdentity ...
	AuthTypeUserAssignedIdentity AuthTypeBasicAuthInfoBase = "userAssignedIdentity"
)

// PossibleAuthTypeBasicAuthInfoBaseValues returns an array of possible values for the AuthTypeBasicAuthInfoBase const type.
func PossibleAuthTypeBasicAuthInfoBaseValues() []AuthTypeBasicAuthInfoBase {
	return []AuthTypeBasicAuthInfoBase{AuthTypeAuthInfoBase, AuthTypeSecret, AuthTypeServicePrincipalCertificate, AuthTypeServicePrincipalSecret, AuthTypeSystemAssignedIdentity, AuthTypeUserAssignedIdentity}
}

// AzureResourceType enumerates the values for azure resource type.
type AzureResourceType string

const (
	// KeyVault ...
	KeyVault AzureResourceType = "KeyVault"
)

// PossibleAzureResourceTypeValues returns an array of possible values for the AzureResourceType const type.
func PossibleAzureResourceTypeValues() []AzureResourceType {
	return []AzureResourceType{KeyVault}
}

// ClientType enumerates the values for client type.
type ClientType string

const (
	// Django ...
	Django ClientType = "django"
	// Dotnet ...
	Dotnet ClientType = "dotnet"
	// Go ...
	Go ClientType = "go"
	// Java ...
	Java ClientType = "java"
	// Nodejs ...
	Nodejs ClientType = "nodejs"
	// None ...
	None ClientType = "none"
	// Php ...
	Php ClientType = "php"
	// Python ...
	Python ClientType = "python"
	// Ruby ...
	Ruby ClientType = "ruby"
	// SpringBoot ...
	SpringBoot ClientType = "springBoot"
)

// PossibleClientTypeValues returns an array of possible values for the ClientType const type.
func PossibleClientTypeValues() []ClientType {
	return []ClientType{Django, Dotnet, Go, Java, Nodejs, None, Php, Python, Ruby, SpringBoot}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// Origin enumerates the values for origin.
type Origin string

const (
	// OriginSystem ...
	OriginSystem Origin = "system"
	// OriginUser ...
	OriginUser Origin = "user"
	// OriginUsersystem ...
	OriginUsersystem Origin = "user,system"
)

// PossibleOriginValues returns an array of possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{OriginSystem, OriginUser, OriginUsersystem}
}

// SecretType enumerates the values for secret type.
type SecretType string

const (
	// KeyVaultSecretReference ...
	KeyVaultSecretReference SecretType = "keyVaultSecretReference"
	// KeyVaultSecretURI ...
	KeyVaultSecretURI SecretType = "keyVaultSecretUri"
	// RawValue ...
	RawValue SecretType = "rawValue"
)

// PossibleSecretTypeValues returns an array of possible values for the SecretType const type.
func PossibleSecretTypeValues() []SecretType {
	return []SecretType{KeyVaultSecretReference, KeyVaultSecretURI, RawValue}
}

// SecretTypeBasicSecretInfoBase enumerates the values for secret type basic secret info base.
type SecretTypeBasicSecretInfoBase string

const (
	// SecretTypeKeyVaultSecretReference ...
	SecretTypeKeyVaultSecretReference SecretTypeBasicSecretInfoBase = "keyVaultSecretReference"
	// SecretTypeKeyVaultSecretURI ...
	SecretTypeKeyVaultSecretURI SecretTypeBasicSecretInfoBase = "keyVaultSecretUri"
	// SecretTypeRawValue ...
	SecretTypeRawValue SecretTypeBasicSecretInfoBase = "rawValue"
	// SecretTypeSecretInfoBase ...
	SecretTypeSecretInfoBase SecretTypeBasicSecretInfoBase = "SecretInfoBase"
)

// PossibleSecretTypeBasicSecretInfoBaseValues returns an array of possible values for the SecretTypeBasicSecretInfoBase const type.
func PossibleSecretTypeBasicSecretInfoBaseValues() []SecretTypeBasicSecretInfoBase {
	return []SecretTypeBasicSecretInfoBase{SecretTypeKeyVaultSecretReference, SecretTypeKeyVaultSecretURI, SecretTypeRawValue, SecretTypeSecretInfoBase}
}

// TargetServiceType enumerates the values for target service type.
type TargetServiceType string

const (
	// TargetServiceTypeAzureResource ...
	TargetServiceTypeAzureResource TargetServiceType = "AzureResource"
	// TargetServiceTypeConfluentBootstrapServer ...
	TargetServiceTypeConfluentBootstrapServer TargetServiceType = "ConfluentBootstrapServer"
	// TargetServiceTypeConfluentSchemaRegistry ...
	TargetServiceTypeConfluentSchemaRegistry TargetServiceType = "ConfluentSchemaRegistry"
)

// PossibleTargetServiceTypeValues returns an array of possible values for the TargetServiceType const type.
func PossibleTargetServiceTypeValues() []TargetServiceType {
	return []TargetServiceType{TargetServiceTypeAzureResource, TargetServiceTypeConfluentBootstrapServer, TargetServiceTypeConfluentSchemaRegistry}
}

// Type enumerates the values for type.
type Type string

const (
	// TypeAzureResource ...
	TypeAzureResource Type = "AzureResource"
	// TypeConfluentBootstrapServer ...
	TypeConfluentBootstrapServer Type = "ConfluentBootstrapServer"
	// TypeConfluentSchemaRegistry ...
	TypeConfluentSchemaRegistry Type = "ConfluentSchemaRegistry"
	// TypeTargetServiceBase ...
	TypeTargetServiceBase Type = "TargetServiceBase"
)

// PossibleTypeValues returns an array of possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{TypeAzureResource, TypeConfluentBootstrapServer, TypeConfluentSchemaRegistry, TypeTargetServiceBase}
}

// TypeBasicAzureResourcePropertiesBase enumerates the values for type basic azure resource properties base.
type TypeBasicAzureResourcePropertiesBase string

const (
	// TypeAzureResourcePropertiesBase ...
	TypeAzureResourcePropertiesBase TypeBasicAzureResourcePropertiesBase = "AzureResourcePropertiesBase"
	// TypeKeyVault ...
	TypeKeyVault TypeBasicAzureResourcePropertiesBase = "KeyVault"
)

// PossibleTypeBasicAzureResourcePropertiesBaseValues returns an array of possible values for the TypeBasicAzureResourcePropertiesBase const type.
func PossibleTypeBasicAzureResourcePropertiesBaseValues() []TypeBasicAzureResourcePropertiesBase {
	return []TypeBasicAzureResourcePropertiesBase{TypeAzureResourcePropertiesBase, TypeKeyVault}
}

// ValidationResultStatus enumerates the values for validation result status.
type ValidationResultStatus string

const (
	// Failed ...
	Failed ValidationResultStatus = "failed"
	// Success ...
	Success ValidationResultStatus = "success"
	// Warning ...
	Warning ValidationResultStatus = "warning"
)

// PossibleValidationResultStatusValues returns an array of possible values for the ValidationResultStatus const type.
func PossibleValidationResultStatusValues() []ValidationResultStatus {
	return []ValidationResultStatus{Failed, Success, Warning}
}

// VNetSolutionType enumerates the values for v net solution type.
type VNetSolutionType string

const (
	// PrivateLink ...
	PrivateLink VNetSolutionType = "privateLink"
	// ServiceEndpoint ...
	ServiceEndpoint VNetSolutionType = "serviceEndpoint"
)

// PossibleVNetSolutionTypeValues returns an array of possible values for the VNetSolutionType const type.
func PossibleVNetSolutionTypeValues() []VNetSolutionType {
	return []VNetSolutionType{PrivateLink, ServiceEndpoint}
}
