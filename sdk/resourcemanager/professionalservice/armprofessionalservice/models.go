//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armprofessionalservice

// ClientBeginCreateOrUpdateOptions contains the optional parameters for the Client.BeginCreateOrUpdate method.
type ClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientBeginDeleteOptions contains the optional parameters for the Client.BeginDelete method.
type ClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientGetOptions contains the optional parameters for the Client.Get method.
type ClientGetOptions struct {
	// placeholder for future optional parameters
}

// CreationProperties - properties for creation ProfessionalService
type CreationProperties struct {
	// Whether the ProfessionalService subscription will auto renew upon term end.
	AutoRenew *bool `json:"autoRenew,omitempty"`

	// The offer id.
	OfferID *string `json:"offerId,omitempty"`

	// The metadata about the ProfessionalService subscription such as the OrganizationId.
	PaymentChannelMetadata map[string]*string `json:"paymentChannelMetadata,omitempty"`

	// The publisher id.
	PublisherID *string `json:"publisherId,omitempty"`

	// The seat count.
	Quantity *float32 `json:"quantity,omitempty"`

	// The quote id which the ProfessionalService will be purchase with.
	QuoteID *string `json:"quoteId,omitempty"`

	// The plan id.
	SKUID *string `json:"skuId,omitempty"`

	// The store front which initiates the purchase.
	StoreFront *string `json:"storeFront,omitempty"`

	// The current Term id.
	TermID *string `json:"termId,omitempty"`
}

// ForEnrollmentClientBeginCreateOrUpdateOptions contains the optional parameters for the ForEnrollmentClient.BeginCreateOrUpdate
// method.
type ForEnrollmentClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ForEnrollmentClientBeginDeleteOptions contains the optional parameters for the ForEnrollmentClient.BeginDelete method.
type ForEnrollmentClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ForEnrollmentClientGetOptions contains the optional parameters for the ForEnrollmentClient.Get method.
type ForEnrollmentClientGetOptions struct {
	// placeholder for future optional parameters
}

// OperationClientBeginGetOptions contains the optional parameters for the OperationClient.BeginGet method.
type OperationClientBeginGetOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PropertiesTerm - The current Term object.
type PropertiesTerm struct {
	// The end date of the current term
	EndDate *string `json:"endDate,omitempty"`

	// The start date of the current term
	StartDate *string `json:"startDate,omitempty"`

	// The unit indicating Monthly / Yearly
	TermUnit *string `json:"termUnit,omitempty"`
}

// Resource - ProfessionalService REST API resource definition.
type Resource struct {
	// ProfessionalService properties
	Properties *ResourceProperties `json:"properties,omitempty"`

	// the resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; The resource uri
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ResourceCreation - ProfessionalService REST API resource definition for creation.
type ResourceCreation struct {
	// Resource location. Only value allowed for professional service is 'global'
	Location *string `json:"location,omitempty"`

	// The resource name
	Name *string `json:"name,omitempty"`

	// Properties of the professional service resource that are relevant for creation.
	Properties *CreationProperties `json:"properties,omitempty"`

	// the resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; The resource uri
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ResourceProperties - ProfessionalService properties
type ResourceProperties struct {
	// Whether the ProfessionalService subscription will auto renew upon term end.
	AutoRenew *bool `json:"autoRenew,omitempty"`

	// Whether the current term is a Free Trial term
	IsFreeTrial *bool `json:"isFreeTrial,omitempty"`

	// The last modifier date if this resource.
	LastModified *string `json:"lastModified,omitempty"`

	// The offer id.
	OfferID *string `json:"offerId,omitempty"`

	// The metadata about the ProfessionalService subscription such as the OrganizationId.
	PaymentChannelMetadata map[string]*string `json:"paymentChannelMetadata,omitempty"`

	// The publisher id.
	PublisherID *string `json:"publisherId,omitempty"`

	// The seat count.
	Quantity *float32 `json:"quantity,omitempty"`

	// The quote id which the ProfessionalService will be purchase with.
	QuoteID *string `json:"quoteId,omitempty"`

	// The plan id.
	SKUID *string `json:"skuId,omitempty"`

	// The ProfessionalService Subscription Status.
	Status *ProfessionalServiceResourceStatus `json:"status,omitempty"`

	// The store front which initiates the purchase.
	StoreFront *string `json:"storeFront,omitempty"`

	// The current Term object.
	Term *PropertiesTerm `json:"term,omitempty"`

	// The current Term id.
	TermID *string `json:"termId,omitempty"`

	// READ-ONLY; The created date of this resource.
	Created *string `json:"created,omitempty" azure:"ro"`
}

// RpOperation - professional service operations
type RpOperation struct {
	// the operation display
	Display *RpOperationDisplay `json:"display,omitempty"`

	// whether the operation is a data action or not.
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// the operation name
	Name *string `json:"name,omitempty"`

	// the operation origin
	Origin *string `json:"origin,omitempty"`
}

// RpOperationDisplay - professional service operation display
type RpOperationDisplay struct {
	// Description of the operation for display purposes
	Description *string `json:"description,omitempty"`

	// Name of the operation for display purposes
	Operation *string `json:"operation,omitempty"`

	// Name of the provider for display purposes
	Provider *string `json:"provider,omitempty"`

	// Name of the resource type for display purposes
	Resource *string `json:"resource,omitempty"`
}

// RpOperationsResponseWithContinuation - professional service operation response with continuation.
type RpOperationsResponseWithContinuation struct {
	// the next link to query to get the remaining results.
	NextLink *string `json:"nextLink,omitempty"`

	// the value of response.
	Value []*RpOperation `json:"value,omitempty"`
}
