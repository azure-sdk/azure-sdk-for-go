// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armextendedlocation

import "time"

// CustomLocation - Custom Locations definition.
type CustomLocation struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Identity for the resource.
	Identity *Identity

	// The set of properties specific to a Custom Location
	Properties *CustomLocationProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// CustomLocationFindTargetResourceGroupProperties - The Find Target Resource Group operation request.
type CustomLocationFindTargetResourceGroupProperties struct {
	// Labels of the custom resource, this is a map of {key,value} pairs.
	Labels map[string]*string
}

// CustomLocationFindTargetResourceGroupResult - The Find Target Resource Group operation response.
type CustomLocationFindTargetResourceGroupResult struct {
	// READ-ONLY; The matching resource sync rule is the particular resource sync rule that matched the match expressions and
	// labels and had lowest priority. This is the rule responsible for mapping the target resource
	// to the target resource group.
	MatchedResourceSyncRule *string

	// READ-ONLY; The target resource group of matching resource sync rule. The labels from the request will be used to find out
	// matching resource sync rule against the selector property of the resource sync rule. The
	// one with highest priority will be returned if there are multiple matching rules.
	TargetResourceGroup *string
}

// CustomLocationListResult - The response of a CustomLocation list operation.
type CustomLocationListResult struct {
	// REQUIRED; The CustomLocation items on this page
	Value []*CustomLocation

	// The link to the next page of items
	NextLink *string
}

// CustomLocationProperties - Properties for a custom location.
type CustomLocationProperties struct {
	// This is optional input that contains the authentication that should be used to generate the namespace.
	Authentication *CustomLocationPropertiesAuthentication

	// Contains the reference to the add-on that contains charts to deploy CRDs and operators.
	ClusterExtensionIDs []*string

	// Display name for the Custom Locations location.
	DisplayName *string

	// Connected Cluster or AKS Cluster. The Custom Locations RP will perform a checkAccess API for listAdminCredentials permissions.
	HostResourceID *string

	// Type of host the Custom Locations is referencing (Kubernetes, etcâ€¦).
	HostType *HostType

	// Kubernetes namespace that will be created on the specified cluster.
	Namespace *string

	// Provisioning State for the Custom Location.
	ProvisioningState *string
}

// CustomLocationPropertiesAuthentication - This is optional input that contains the authentication that should be used to
// generate the namespace.
type CustomLocationPropertiesAuthentication struct {
	// The type of the Custom Locations authentication
	Type *string

	// The kubeconfig value.
	Value *string
}

// EnabledResourceType definition.
type EnabledResourceType struct {
	// The set of properties for EnabledResourceType specific to a Custom Location
	Properties *EnabledResourceTypeProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// EnabledResourceTypeListResult - The response of a EnabledResourceType list operation.
type EnabledResourceTypeListResult struct {
	// REQUIRED; The EnabledResourceType items on this page
	Value []*EnabledResourceType

	// The link to the next page of items
	NextLink *string
}

// EnabledResourceTypeProperties - Properties for EnabledResourceType of a custom location.
type EnabledResourceTypeProperties struct {
	// Cluster Extension ID
	ClusterExtensionID *string

	// Cluster Extension Type
	ExtensionType *string

	// Metadata of the Resource Type
	TypesMetadata []*EnabledResourceTypePropertiesTypesMetadataItem
}

// EnabledResourceTypePropertiesTypesMetadataItem - Metadata of the Resource Type.
type EnabledResourceTypePropertiesTypesMetadataItem struct {
	// Api Version of Resource Type
	APIVersion *string

	// Resource Provider Namespace of Resource Type
	ResourceProviderNamespace *string

	// Resource Type
	ResourceType *string
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any

	// READ-ONLY; The additional info type.
	Type *string
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo

	// READ-ONLY; The error code.
	Code *string

	// READ-ONLY; The error details.
	Details []*ErrorDetail

	// READ-ONLY; The error message.
	Message *string

	// READ-ONLY; The error target.
	Target *string
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type *ResourceIdentityType

	// READ-ONLY; The principal ID of resource identity.
	PrincipalID *string

	// READ-ONLY; The tenant ID of resource.
	TenantID *string
}

// MatchExpressionsProperties - Resource Sync Rules matchExpression property definition.
type MatchExpressionsProperties struct {
	// Key is the label key that the selector applies to.
	Key *string

	// The Operator field represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string

	// The label value
	Values []*string
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation
}

// PatchableCustomLocations - The Custom Locations patchable resource definition.
type PatchableCustomLocations struct {
	// Identity for the resource.
	Identity *Identity

	// The Custom Locations patchable properties.
	Properties *CustomLocationProperties

	// Resource tags
	Tags map[string]*string
}

// PatchableResourceSyncRule - The Resource Sync Rules patchable resource definition.
type PatchableResourceSyncRule struct {
	// The Resource Sync Rules patchable properties.
	Properties *ResourceSyncRuleProperties

	// Resource tags
	Tags map[string]*string
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a
// location
type ProxyResource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ResourceSyncRule - Resource Sync Rules definition.
type ResourceSyncRule struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// The set of properties specific to a Resource Sync Rule
	Properties *ResourceSyncRuleProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ResourceSyncRuleListResult - The response of a ResourceSyncRule list operation.
type ResourceSyncRuleListResult struct {
	// REQUIRED; The ResourceSyncRule items on this page
	Value []*ResourceSyncRule

	// The link to the next page of items
	NextLink *string
}

// ResourceSyncRuleProperties - Properties for a resource sync rule. For an unmapped custom resource, its labels will be used
// to find out matching resource sync rules using the selector property of the resource sync rule. If this
// resource sync rule has highest priority among all matching rules, then the unmapped custom resource will be projected to
// the target resource group associated with this resource sync rule.
type ResourceSyncRuleProperties struct {
	// Priority represents a priority of the Resource Sync Rule
	Priority *int32

	// A label selector is composed of two parts, matchLabels and matchExpressions. The first part, matchLabels is a map of {key,value}
	// pairs. A single {key,value} in the matchLabels map is equivalent to an
	// element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'.
	// The second part, matchExpressions is a list of resource selector requirements.
	// Valid operators include In, NotIn, Exists, and DoesNotExist. The values set must be non-empty in the case of In and NotIn.
	// The values set must be empty in the case of Exists and DoesNotExist. All of
	// the requirements, from both matchLabels and matchExpressions must all be satisfied in order to match.
	Selector *ResourceSyncRulePropertiesSelector

	// For an unmapped custom resource, its labels will be used to find matching resource sync rules. If this resource sync rule
	// is one of the matching rules with highest priority, then the unmapped custom
	// resource will be projected to the target resource group associated with this resource sync rule. The user creating this
	// resource sync rule should have write permissions on the target resource group
	// and this write permission will be validated when creating the resource sync rule.
	TargetResourceGroup *string

	// READ-ONLY; Provisioning State for the Resource Sync Rule.
	ProvisioningState *string
}

// ResourceSyncRulePropertiesSelector - A label selector is composed of two parts, matchLabels and matchExpressions. The first
// part, matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an
// element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'.
// The second part, matchExpressions is a list of resource selector requirements.
// Valid operators include In, NotIn, Exists, and DoesNotExist. The values set must be non-empty in the case of In and NotIn.
// The values set must be empty in the case of Exists and DoesNotExist. All of
// the requirements, from both matchLabels and matchExpressions must all be satisfied in order to match.
type ResourceSyncRulePropertiesSelector struct {
	// MatchExpressions is a list of resource selector requirements. Valid operators include In, NotIn, Exists, and DoesNotExist.
	// The values set must be non-empty in the case of In and NotIn. The values set
	// must be empty in the case of Exists and DoesNotExist.
	MatchExpressions []*MatchExpressionsProperties

	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions,
	// whose key field is 'key', the operator is 'In', and the values
	// array contains only 'value'.
	MatchLabels map[string]*string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}
