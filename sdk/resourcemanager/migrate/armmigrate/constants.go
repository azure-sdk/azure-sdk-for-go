// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armmigrate

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/migrate/armmigrate"
	moduleVersion = "v2.0.0-beta.1"
)

// AssessmentSource - Assessment Source
type AssessmentSource string

const (
	// AssessmentSourceIIS - IIS - Assessment Source
	AssessmentSourceIIS AssessmentSource = "IIS"
	// AssessmentSourceMachine - Machine - Assessment Source
	AssessmentSourceMachine AssessmentSource = "Machine"
	// AssessmentSourceMySQLServer - MySQLServer - Assessment Source
	AssessmentSourceMySQLServer AssessmentSource = "MySQLServer"
	// AssessmentSourceOracleDatabase - OracleDatabase - Assessment Source
	AssessmentSourceOracleDatabase AssessmentSource = "OracleDatabase"
	// AssessmentSourceOracleServer - OracleServer - Assessment Source
	AssessmentSourceOracleServer AssessmentSource = "OracleServer"
	// AssessmentSourceSAPInstance - SAPInstance - Assessment Source
	AssessmentSourceSAPInstance AssessmentSource = "SAPInstance"
	// AssessmentSourceSQLDatabase - SqlDatabase - Assessment Source
	AssessmentSourceSQLDatabase AssessmentSource = "SqlDatabase"
	// AssessmentSourceSQLInstance - SqlInstance - Assessment Source
	AssessmentSourceSQLInstance AssessmentSource = "SqlInstance"
	// AssessmentSourceSpringbootApplication - SpringbootApplication - Assessment Source
	AssessmentSourceSpringbootApplication AssessmentSource = "SpringbootApplication"
	// AssessmentSourceTomCat - TomCat - Assessment Source
	AssessmentSourceTomCat AssessmentSource = "TomCat"
	// AssessmentSourceUnknown - Unknown - Assessment Source
	AssessmentSourceUnknown AssessmentSource = "Unknown"
	// AssessmentSourceWebApps - WebApps - Assessment Source
	AssessmentSourceWebApps AssessmentSource = "WebApps"
)

// PossibleAssessmentSourceValues returns the possible values for the AssessmentSource const type.
func PossibleAssessmentSourceValues() []AssessmentSource {
	return []AssessmentSource{
		AssessmentSourceIIS,
		AssessmentSourceMachine,
		AssessmentSourceMySQLServer,
		AssessmentSourceOracleDatabase,
		AssessmentSourceOracleServer,
		AssessmentSourceSAPInstance,
		AssessmentSourceSQLDatabase,
		AssessmentSourceSQLInstance,
		AssessmentSourceSpringbootApplication,
		AssessmentSourceTomCat,
		AssessmentSourceUnknown,
		AssessmentSourceWebApps,
	}
}

// AssessmentStatus - Assessment Status.
type AssessmentStatus string

const (
	// AssessmentStatusCompleted - Assessment is Completed or Ready.
	AssessmentStatusCompleted AssessmentStatus = "Completed"
	// AssessmentStatusCreated - Assessment is Created.
	AssessmentStatusCreated AssessmentStatus = "Created"
	// AssessmentStatusDeleted - Assessment is Deleted.
	AssessmentStatusDeleted AssessmentStatus = "Deleted"
	// AssessmentStatusFailed - Assessment has Failed.
	AssessmentStatusFailed AssessmentStatus = "Failed"
	// AssessmentStatusInvalid - Assessment is Failed i.e. it is now invalid.
	AssessmentStatusInvalid AssessmentStatus = "Invalid"
	// AssessmentStatusOutDated - Assessment is Out Dated.
	AssessmentStatusOutDated AssessmentStatus = "OutDated"
	// AssessmentStatusOutOfSync - Assessment is Out of Sync.
	AssessmentStatusOutOfSync AssessmentStatus = "OutOfSync"
	// AssessmentStatusRunning - Assessment is currently running.
	AssessmentStatusRunning AssessmentStatus = "Running"
	// AssessmentStatusUpdated - Assessment is Updated.
	AssessmentStatusUpdated AssessmentStatus = "Updated"
)

// PossibleAssessmentStatusValues returns the possible values for the AssessmentStatus const type.
func PossibleAssessmentStatusValues() []AssessmentStatus {
	return []AssessmentStatus{
		AssessmentStatusCompleted,
		AssessmentStatusCreated,
		AssessmentStatusDeleted,
		AssessmentStatusFailed,
		AssessmentStatusInvalid,
		AssessmentStatusOutDated,
		AssessmentStatusOutOfSync,
		AssessmentStatusRunning,
		AssessmentStatusUpdated,
	}
}

// AzureManagementOfferingType - Azure management Offering type
type AzureManagementOfferingType string

const (
	// AzureManagementOfferingTypeAUM - AUM - Azure management Offering type
	AzureManagementOfferingTypeAUM AzureManagementOfferingType = "AUM"
	// AzureManagementOfferingTypeAzMon - AzMon - Azure management Offering type
	AzureManagementOfferingTypeAzMon AzureManagementOfferingType = "AzMon"
	// AzureManagementOfferingTypeAzureBackup - AzureBackup - Azure management Offering type
	AzureManagementOfferingTypeAzureBackup AzureManagementOfferingType = "AzureBackup"
	// AzureManagementOfferingTypeNo - No - Azure management Offering type
	AzureManagementOfferingTypeNo AzureManagementOfferingType = "No"
	// AzureManagementOfferingTypeSCOMMI - SCOMMI - Azure management Offering type
	AzureManagementOfferingTypeSCOMMI AzureManagementOfferingType = "SCOMMI"
)

// PossibleAzureManagementOfferingTypeValues returns the possible values for the AzureManagementOfferingType const type.
func PossibleAzureManagementOfferingTypeValues() []AzureManagementOfferingType {
	return []AzureManagementOfferingType{
		AzureManagementOfferingTypeAUM,
		AzureManagementOfferingTypeAzMon,
		AzureManagementOfferingTypeAzureBackup,
		AzureManagementOfferingTypeNo,
		AzureManagementOfferingTypeSCOMMI,
	}
}

// AzureTarget - Azure Target
type AzureTarget string

const (
	// AzureTargetAKS - AKS - Azure Target
	AzureTargetAKS AzureTarget = "AKS"
	// AzureTargetAvs - Avs - Azure Target
	AzureTargetAvs AzureTarget = "Avs"
	// AzureTargetAzureAppService - AzureAppService - Azure Target
	AzureTargetAzureAppService AzureTarget = "AzureAppService"
	// AzureTargetAzureAppServiceContainer - AzureAppServiceContainer - Azure Target
	AzureTargetAzureAppServiceContainer AzureTarget = "AzureAppServiceContainer"
	// AzureTargetAzureSQLVM - AzureSQLVM - Azure Target
	AzureTargetAzureSQLVM AzureTarget = "AzureSQLVM"
	// AzureTargetAzureSpringApps - AzureSpringApps - Azure Target
	AzureTargetAzureSpringApps AzureTarget = "AzureSpringApps"
	// AzureTargetAzureVM - AzureVM - Azure Target
	AzureTargetAzureVM AzureTarget = "AzureVM"
	// AzureTargetFlexServerPG - FlexServerPG - Azure Target
	AzureTargetFlexServerPG AzureTarget = "FlexServerPG"
	// AzureTargetMySQLAzureFlexServer - MySQLAzureFlexServer - Azure Target
	AzureTargetMySQLAzureFlexServer AzureTarget = "MySQLAzureFlexServer"
	// AzureTargetOracleIaasVM - OracleIaasVM - Azure Target
	AzureTargetOracleIaasVM AzureTarget = "OracleIaasVM"
	// AzureTargetSAPAzureInstance - SAPAzureInstance - Azure Target
	AzureTargetSAPAzureInstance AzureTarget = "SAPAzureInstance"
	// AzureTargetSQLDatabase - SqlDatabase - Azure Target
	AzureTargetSQLDatabase AzureTarget = "SqlDatabase"
	// AzureTargetSQLMI - SqlMI - Azure Target
	AzureTargetSQLMI AzureTarget = "SqlMI"
	// AzureTargetUnknown - Unknown - Azure Target
	AzureTargetUnknown AzureTarget = "Unknown"
)

// PossibleAzureTargetValues returns the possible values for the AzureTarget const type.
func PossibleAzureTargetValues() []AzureTarget {
	return []AzureTarget{
		AzureTargetAKS,
		AzureTargetAvs,
		AzureTargetAzureAppService,
		AzureTargetAzureAppServiceContainer,
		AzureTargetAzureSQLVM,
		AzureTargetAzureSpringApps,
		AzureTargetAzureVM,
		AzureTargetFlexServerPG,
		AzureTargetMySQLAzureFlexServer,
		AzureTargetOracleIaasVM,
		AzureTargetSAPAzureInstance,
		AzureTargetSQLDatabase,
		AzureTargetSQLMI,
		AzureTargetUnknown,
	}
}

// CloudSuitabilityCommon - Cloud Suitability Common
type CloudSuitabilityCommon string

const (
	// CloudSuitabilityCommonConditionallySuitable - ConditionallySuitable - Cloud Suitability Common
	CloudSuitabilityCommonConditionallySuitable CloudSuitabilityCommon = "ConditionallySuitable"
	// CloudSuitabilityCommonNotSuitable - NotSuitable - Cloud Suitability Common
	CloudSuitabilityCommonNotSuitable CloudSuitabilityCommon = "NotSuitable"
	// CloudSuitabilityCommonReadinessUnknown - ReadinessUnknown - Cloud Suitability Common
	CloudSuitabilityCommonReadinessUnknown CloudSuitabilityCommon = "ReadinessUnknown"
	// CloudSuitabilityCommonSuitable - Suitable - Cloud Suitability Common
	CloudSuitabilityCommonSuitable CloudSuitabilityCommon = "Suitable"
	// CloudSuitabilityCommonSuitableWithWarnings - SuitableWithWarnings - Cloud Suitability Common
	CloudSuitabilityCommonSuitableWithWarnings CloudSuitabilityCommon = "SuitableWithWarnings"
	// CloudSuitabilityCommonUnknown - Unknown - Cloud Suitability Common
	CloudSuitabilityCommonUnknown CloudSuitabilityCommon = "Unknown"
)

// PossibleCloudSuitabilityCommonValues returns the possible values for the CloudSuitabilityCommon const type.
func PossibleCloudSuitabilityCommonValues() []CloudSuitabilityCommon {
	return []CloudSuitabilityCommon{
		CloudSuitabilityCommonConditionallySuitable,
		CloudSuitabilityCommonNotSuitable,
		CloudSuitabilityCommonReadinessUnknown,
		CloudSuitabilityCommonSuitable,
		CloudSuitabilityCommonSuitableWithWarnings,
		CloudSuitabilityCommonUnknown,
	}
}

// CostType - Cost type
type CostType string

const (
	// CostTypeDataProtectionService - DataProtectionService - Cost type
	CostTypeDataProtectionService CostType = "DataProtectionService"
	// CostTypeMonitoringService - MonitoringService - Cost type
	CostTypeMonitoringService CostType = "MonitoringService"
	// CostTypeMonthlyAvsExternalStorageCost - MonthlyAvsExternalStorageCost - Cost type
	CostTypeMonthlyAvsExternalStorageCost CostType = "MonthlyAvsExternalStorageCost"
	// CostTypeMonthlyAvsNetworkCost - MonthlyAvsNetworkCost - Cost type
	CostTypeMonthlyAvsNetworkCost CostType = "MonthlyAvsNetworkCost"
	// CostTypeMonthlyAvsNodeCost - MonthlyAvsNodeCost - Cost type
	CostTypeMonthlyAvsNodeCost CostType = "MonthlyAvsNodeCost"
	// CostTypeMonthlyAzureHybridCost - MonthlyAzureHybridCost - Cost type
	CostTypeMonthlyAzureHybridCost CostType = "MonthlyAzureHybridCost"
	// CostTypeMonthlyBandwidthCost - MonthlyBandwidthCost - Cost type
	CostTypeMonthlyBandwidthCost CostType = "MonthlyBandwidthCost"
	// CostTypeMonthlyComputeCost - MonthlyComputeCost - Cost type
	CostTypeMonthlyComputeCost CostType = "MonthlyComputeCost"
	// CostTypeMonthlyLicensingCost - MonthlyLicensingCost - Cost type
	CostTypeMonthlyLicensingCost CostType = "MonthlyLicensingCost"
	// CostTypeMonthlyLinuxAzureHybridCost - MonthlyLinuxAzureHybridCost - Cost type
	CostTypeMonthlyLinuxAzureHybridCost CostType = "MonthlyLinuxAzureHybridCost"
	// CostTypeMonthlyManagementCost - MonthlyManagementCost - Cost type
	CostTypeMonthlyManagementCost CostType = "MonthlyManagementCost"
	// CostTypeMonthlyPremiumStorageCost - MonthlyPremiumStorageCost - Cost type
	CostTypeMonthlyPremiumStorageCost CostType = "MonthlyPremiumStorageCost"
	// CostTypeMonthlyPremiumV2StorageCost - MonthlyPremiumV2StorageCost - Cost type
	CostTypeMonthlyPremiumV2StorageCost CostType = "MonthlyPremiumV2StorageCost"
	// CostTypeMonthlySecurityCost - MonthlySecurityCost - Cost type
	CostTypeMonthlySecurityCost CostType = "MonthlySecurityCost"
	// CostTypeMonthlyStandardHddStorageCost - MonthlyStandardHddStorageCost - Cost type
	CostTypeMonthlyStandardHddStorageCost CostType = "MonthlyStandardHddStorageCost"
	// CostTypeMonthlyStandardSsdStorageCost - MonthlyStandardSsdStorageCost - Cost type
	CostTypeMonthlyStandardSsdStorageCost CostType = "MonthlyStandardSsdStorageCost"
	// CostTypeMonthlyStorageCost - MonthlyStorageCost - Cost type
	CostTypeMonthlyStorageCost CostType = "MonthlyStorageCost"
	// CostTypeMonthlyUltraDiskCost - MonthlyUltraDiskCost - Cost type
	CostTypeMonthlyUltraDiskCost CostType = "MonthlyUltraDiskCost"
	// CostTypeMonthlyUltraStorageCost - MonthlyUltraStorageCost - Cost type
	CostTypeMonthlyUltraStorageCost CostType = "MonthlyUltraStorageCost"
	// CostTypePatchingService - PatchingService - Cost type
	CostTypePatchingService CostType = "PatchingService"
	// CostTypeTotalMonthlyCost - TotalMonthlyCost - Cost type
	CostTypeTotalMonthlyCost CostType = "TotalMonthlyCost"
)

// PossibleCostTypeValues returns the possible values for the CostType const type.
func PossibleCostTypeValues() []CostType {
	return []CostType{
		CostTypeDataProtectionService,
		CostTypeMonitoringService,
		CostTypeMonthlyAvsExternalStorageCost,
		CostTypeMonthlyAvsNetworkCost,
		CostTypeMonthlyAvsNodeCost,
		CostTypeMonthlyAzureHybridCost,
		CostTypeMonthlyBandwidthCost,
		CostTypeMonthlyComputeCost,
		CostTypeMonthlyLicensingCost,
		CostTypeMonthlyLinuxAzureHybridCost,
		CostTypeMonthlyManagementCost,
		CostTypeMonthlyPremiumStorageCost,
		CostTypeMonthlyPremiumV2StorageCost,
		CostTypeMonthlySecurityCost,
		CostTypeMonthlyStandardHddStorageCost,
		CostTypeMonthlyStandardSsdStorageCost,
		CostTypeMonthlyStorageCost,
		CostTypeMonthlyUltraDiskCost,
		CostTypeMonthlyUltraStorageCost,
		CostTypePatchingService,
		CostTypeTotalMonthlyCost,
	}
}

// CreatedByType - The kind of entity that created the resource.
type CreatedByType string

const (
	// CreatedByTypeApplication - The entity was created by an application.
	CreatedByTypeApplication CreatedByType = "Application"
	// CreatedByTypeKey - The entity was created by a key.
	CreatedByTypeKey CreatedByType = "Key"
	// CreatedByTypeManagedIdentity - The entity was created by a managed identity.
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	// CreatedByTypeUser - The entity was created by a user.
	CreatedByTypeUser CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// MigrationPlatform - Migration Platform
type MigrationPlatform string

const (
	// MigrationPlatformIaaS - IaaS - Migration Platform
	MigrationPlatformIaaS MigrationPlatform = "IaaS"
	// MigrationPlatformPaaS - PaaS - Migration Platform
	MigrationPlatformPaaS MigrationPlatform = "PaaS"
	// MigrationPlatformSaaS - SaaS - Migration Platform
	MigrationPlatformSaaS MigrationPlatform = "SaaS"
	// MigrationPlatformUnknown - Unknown - Migration Platform
	MigrationPlatformUnknown MigrationPlatform = "Unknown"
)

// PossibleMigrationPlatformValues returns the possible values for the MigrationPlatform const type.
func PossibleMigrationPlatformValues() []MigrationPlatform {
	return []MigrationPlatform{
		MigrationPlatformIaaS,
		MigrationPlatformPaaS,
		MigrationPlatformSaaS,
		MigrationPlatformUnknown,
	}
}

// MigrationType - Migration Type
type MigrationType string

const (
	// MigrationTypeRearchitect - Rearchitect - Migration Type
	MigrationTypeRearchitect MigrationType = "Rearchitect"
	// MigrationTypeRehost - Rehost - Migration Type
	MigrationTypeRehost MigrationType = "Rehost"
	// MigrationTypeReplatform - Replatform - Migration Type
	MigrationTypeReplatform MigrationType = "Replatform"
	// MigrationTypeRetain - Retain - Migration Type
	MigrationTypeRetain MigrationType = "Retain"
	// MigrationTypeUnknown - Unknown - Migration Type
	MigrationTypeUnknown MigrationType = "Unknown"
)

// PossibleMigrationTypeValues returns the possible values for the MigrationType const type.
func PossibleMigrationTypeValues() []MigrationType {
	return []MigrationType{
		MigrationTypeRearchitect,
		MigrationTypeRehost,
		MigrationTypeReplatform,
		MigrationTypeRetain,
		MigrationTypeUnknown,
	}
}

// ProvisioningState - The status of the current operation.
type ProvisioningState string

const (
	// ProvisioningStateAccepted - Resource is being Accepted.
	ProvisioningStateAccepted ProvisioningState = "Accepted"
	// ProvisioningStateCanceled - Resource provisioning Canceled.
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateDeleting - Resource is being Deleted.
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed - Resource provisioning Failed.
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateProvisioning - Resource is being Provisioned.
	ProvisioningStateProvisioning ProvisioningState = "Provisioning"
	// ProvisioningStateSucceeded - Resource provisioning Successful.
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating - Resource is being Updated.
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateAccepted,
		ProvisioningStateCanceled,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateProvisioning,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}

// SavingsOptions - The savings options.
type SavingsOptions string

const (
	// SavingsOptionsCustomAzureOfferCode - Custom azure offer code.
	SavingsOptionsCustomAzureOfferCode SavingsOptions = "CustomAzureOfferCode"
	// SavingsOptionsNone - No savings options.
	SavingsOptionsNone SavingsOptions = "None"
	// SavingsOptionsRI1Year - Reserved Instance for 1 year.
	SavingsOptionsRI1Year SavingsOptions = "RI1Year"
	// SavingsOptionsRI3Year - Reserved Instance for 3 years.
	SavingsOptionsRI3Year SavingsOptions = "RI3Year"
	// SavingsOptionsSavingsPlan1Year - The savings plan for 1 year.
	SavingsOptionsSavingsPlan1Year SavingsOptions = "SavingsPlan1Year"
	// SavingsOptionsSavingsPlan3Year - The savings plan for 3 years.
	SavingsOptionsSavingsPlan3Year SavingsOptions = "SavingsPlan3Year"
)

// PossibleSavingsOptionsValues returns the possible values for the SavingsOptions const type.
func PossibleSavingsOptionsValues() []SavingsOptions {
	return []SavingsOptions{
		SavingsOptionsCustomAzureOfferCode,
		SavingsOptionsNone,
		SavingsOptionsRI1Year,
		SavingsOptionsRI3Year,
		SavingsOptionsSavingsPlan1Year,
		SavingsOptionsSavingsPlan3Year,
	}
}

// SavingsType - Savings type
type SavingsType string

const (
	// SavingsTypeMonthlyAhubSQLCostSavings - MonthlyAhubSqlCostSavings - Savings type
	SavingsTypeMonthlyAhubSQLCostSavings SavingsType = "MonthlyAhubSqlCostSavings"
	// SavingsTypeMonthlyAzureHybridCostSavings - MonthlyAzureHybridCostSavings - Savings type
	SavingsTypeMonthlyAzureHybridCostSavings SavingsType = "MonthlyAzureHybridCostSavings"
	// SavingsTypeMonthlyLinuxAzureHybridCostSavings - MonthlyLinuxAzureHybridCostSavings - Savings type
	SavingsTypeMonthlyLinuxAzureHybridCostSavings SavingsType = "MonthlyLinuxAzureHybridCostSavings"
	// SavingsTypeMonthlyVcfByolCostDifference - MonthlyVcfByolCostDifference - Savings type
	SavingsTypeMonthlyVcfByolCostDifference SavingsType = "MonthlyVcfByolCostDifference"
)

// PossibleSavingsTypeValues returns the possible values for the SavingsType const type.
func PossibleSavingsTypeValues() []SavingsType {
	return []SavingsType{
		SavingsTypeMonthlyAhubSQLCostSavings,
		SavingsTypeMonthlyAzureHybridCostSavings,
		SavingsTypeMonthlyLinuxAzureHybridCostSavings,
		SavingsTypeMonthlyVcfByolCostDifference,
	}
}

// SummaryType - Summary Type
type SummaryType string

const (
	// SummaryTypeStrategy - Strategy - Summary Type
	SummaryTypeStrategy SummaryType = "Strategy"
	// SummaryTypeTarget - Target - Summary Type
	SummaryTypeTarget SummaryType = "Target"
	// SummaryTypeUnknown - Unknown - Summary Type
	SummaryTypeUnknown SummaryType = "Unknown"
)

// PossibleSummaryTypeValues returns the possible values for the SummaryType const type.
func PossibleSummaryTypeValues() []SummaryType {
	return []SummaryType{
		SummaryTypeStrategy,
		SummaryTypeTarget,
		SummaryTypeUnknown,
	}
}

// WebAppType - Web App Type.
type WebAppType string

const (
	// WebAppTypeASPNET - ASP.NET Web App.
	WebAppTypeASPNET WebAppType = "ASP.Net"
	// WebAppTypeJava - Java Web App.
	WebAppTypeJava WebAppType = "Java"
	// WebAppTypeUnknown - Unknown. Indicates Missing Data.
	WebAppTypeUnknown WebAppType = "Unknown"
)

// PossibleWebAppTypeValues returns the possible values for the WebAppType const type.
func PossibleWebAppTypeValues() []WebAppType {
	return []WebAppType{
		WebAppTypeASPNET,
		WebAppTypeJava,
		WebAppTypeUnknown,
	}
}

// WebServerType - Web Server Type.
type WebServerType string

const (
	// WebServerTypeIIS - ASP.NET Web App.
	WebServerTypeIIS WebServerType = "IIS"
	// WebServerTypeTomcat - Java Web App.
	WebServerTypeTomcat WebServerType = "Tomcat"
	// WebServerTypeUnknown - Unknown. Indicates Missing Data.
	WebServerTypeUnknown WebServerType = "Unknown"
)

// PossibleWebServerTypeValues returns the possible values for the WebServerType const type.
func PossibleWebServerTypeValues() []WebServerType {
	return []WebServerType{
		WebServerTypeIIS,
		WebServerTypeTomcat,
		WebServerTypeUnknown,
	}
}

// WorkloadType - Migration Workload type
type WorkloadType string

const (
	// WorkloadTypeDatabase - Database - Migration Workload type
	WorkloadTypeDatabase WorkloadType = "Database"
	// WorkloadTypeHost - Host - Migration Workload type
	WorkloadTypeHost WorkloadType = "Host"
	// WorkloadTypeInstance - Instance - Migration Workload type
	WorkloadTypeInstance WorkloadType = "Instance"
	// WorkloadTypeMachine - Machine - Migration Workload type
	WorkloadTypeMachine WorkloadType = "Machine"
	// WorkloadTypeManagementServer - ManagementServer - Migration Workload type
	WorkloadTypeManagementServer WorkloadType = "ManagementServer"
	// WorkloadTypeServer - Server - Migration Workload type
	WorkloadTypeServer WorkloadType = "Server"
	// WorkloadTypeUnknown - Unknown - Migration Workload type
	WorkloadTypeUnknown WorkloadType = "Unknown"
	// WorkloadTypeWebApplication - WebApplication - Migration Workload type
	WorkloadTypeWebApplication WorkloadType = "WebApplication"
	// WorkloadTypeWebServer - WebServer - Migration Workload type
	WorkloadTypeWebServer WorkloadType = "WebServer"
)

// PossibleWorkloadTypeValues returns the possible values for the WorkloadType const type.
func PossibleWorkloadTypeValues() []WorkloadType {
	return []WorkloadType{
		WorkloadTypeDatabase,
		WorkloadTypeHost,
		WorkloadTypeInstance,
		WorkloadTypeMachine,
		WorkloadTypeManagementServer,
		WorkloadTypeServer,
		WorkloadTypeUnknown,
		WorkloadTypeWebApplication,
		WorkloadTypeWebServer,
	}
}
