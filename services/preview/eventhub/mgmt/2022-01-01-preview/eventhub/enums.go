package eventhub

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// AccessRights enumerates the values for access rights.
type AccessRights string

const (
	// Listen ...
	Listen AccessRights = "Listen"
	// Manage ...
	Manage AccessRights = "Manage"
	// SendEnumValue ...
	SendEnumValue AccessRights = "Send"
)

// PossibleAccessRightsValues returns an array of possible values for the AccessRights const type.
func PossibleAccessRightsValues() []AccessRights {
	return []AccessRights{Listen, Manage, SendEnumValue}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// DefaultAction enumerates the values for default action.
type DefaultAction string

const (
	// Allow ...
	Allow DefaultAction = "Allow"
	// Deny ...
	Deny DefaultAction = "Deny"
)

// PossibleDefaultActionValues returns an array of possible values for the DefaultAction const type.
func PossibleDefaultActionValues() []DefaultAction {
	return []DefaultAction{Allow, Deny}
}

// EncodingCaptureDescription enumerates the values for encoding capture description.
type EncodingCaptureDescription string

const (
	// Avro ...
	Avro EncodingCaptureDescription = "Avro"
	// AvroDeflate ...
	AvroDeflate EncodingCaptureDescription = "AvroDeflate"
)

// PossibleEncodingCaptureDescriptionValues returns an array of possible values for the EncodingCaptureDescription const type.
func PossibleEncodingCaptureDescriptionValues() []EncodingCaptureDescription {
	return []EncodingCaptureDescription{Avro, AvroDeflate}
}

// EndPointProvisioningState enumerates the values for end point provisioning state.
type EndPointProvisioningState string

const (
	// Canceled ...
	Canceled EndPointProvisioningState = "Canceled"
	// Creating ...
	Creating EndPointProvisioningState = "Creating"
	// Deleting ...
	Deleting EndPointProvisioningState = "Deleting"
	// Failed ...
	Failed EndPointProvisioningState = "Failed"
	// Succeeded ...
	Succeeded EndPointProvisioningState = "Succeeded"
	// Updating ...
	Updating EndPointProvisioningState = "Updating"
)

// PossibleEndPointProvisioningStateValues returns an array of possible values for the EndPointProvisioningState const type.
func PossibleEndPointProvisioningStateValues() []EndPointProvisioningState {
	return []EndPointProvisioningState{Canceled, Creating, Deleting, Failed, Succeeded, Updating}
}

// EntityStatus enumerates the values for entity status.
type EntityStatus string

const (
	// EntityStatusActive ...
	EntityStatusActive EntityStatus = "Active"
	// EntityStatusCreating ...
	EntityStatusCreating EntityStatus = "Creating"
	// EntityStatusDeleting ...
	EntityStatusDeleting EntityStatus = "Deleting"
	// EntityStatusDisabled ...
	EntityStatusDisabled EntityStatus = "Disabled"
	// EntityStatusReceiveDisabled ...
	EntityStatusReceiveDisabled EntityStatus = "ReceiveDisabled"
	// EntityStatusRenaming ...
	EntityStatusRenaming EntityStatus = "Renaming"
	// EntityStatusRestoring ...
	EntityStatusRestoring EntityStatus = "Restoring"
	// EntityStatusSendDisabled ...
	EntityStatusSendDisabled EntityStatus = "SendDisabled"
	// EntityStatusUnknown ...
	EntityStatusUnknown EntityStatus = "Unknown"
)

// PossibleEntityStatusValues returns an array of possible values for the EntityStatus const type.
func PossibleEntityStatusValues() []EntityStatus {
	return []EntityStatus{EntityStatusActive, EntityStatusCreating, EntityStatusDeleting, EntityStatusDisabled, EntityStatusReceiveDisabled, EntityStatusRenaming, EntityStatusRestoring, EntityStatusSendDisabled, EntityStatusUnknown}
}

// KeySource enumerates the values for key source.
type KeySource string

const (
	// MicrosoftKeyVault ...
	MicrosoftKeyVault KeySource = "Microsoft.KeyVault"
)

// PossibleKeySourceValues returns an array of possible values for the KeySource const type.
func PossibleKeySourceValues() []KeySource {
	return []KeySource{MicrosoftKeyVault}
}

// KeyType enumerates the values for key type.
type KeyType string

const (
	// PrimaryKey ...
	PrimaryKey KeyType = "PrimaryKey"
	// SecondaryKey ...
	SecondaryKey KeyType = "SecondaryKey"
)

// PossibleKeyTypeValues returns an array of possible values for the KeyType const type.
func PossibleKeyTypeValues() []KeyType {
	return []KeyType{PrimaryKey, SecondaryKey}
}

// ManagedServiceIdentityType enumerates the values for managed service identity type.
type ManagedServiceIdentityType string

const (
	// None ...
	None ManagedServiceIdentityType = "None"
	// SystemAssigned ...
	SystemAssigned ManagedServiceIdentityType = "SystemAssigned"
	// SystemAssignedUserAssigned ...
	SystemAssignedUserAssigned ManagedServiceIdentityType = "SystemAssigned, UserAssigned"
	// UserAssigned ...
	UserAssigned ManagedServiceIdentityType = "UserAssigned"
)

// PossibleManagedServiceIdentityTypeValues returns an array of possible values for the ManagedServiceIdentityType const type.
func PossibleManagedServiceIdentityTypeValues() []ManagedServiceIdentityType {
	return []ManagedServiceIdentityType{None, SystemAssigned, SystemAssignedUserAssigned, UserAssigned}
}

// MetricID enumerates the values for metric id.
type MetricID string

const (
	// IncomingBytes ...
	IncomingBytes MetricID = "IncomingBytes"
	// IncomingMessages ...
	IncomingMessages MetricID = "IncomingMessages"
	// OutgoingBytes ...
	OutgoingBytes MetricID = "OutgoingBytes"
	// OutgoingMessages ...
	OutgoingMessages MetricID = "OutgoingMessages"
)

// PossibleMetricIDValues returns an array of possible values for the MetricID const type.
func PossibleMetricIDValues() []MetricID {
	return []MetricID{IncomingBytes, IncomingMessages, OutgoingBytes, OutgoingMessages}
}

// NetworkRuleIPAction enumerates the values for network rule ip action.
type NetworkRuleIPAction string

const (
	// NetworkRuleIPActionAllow ...
	NetworkRuleIPActionAllow NetworkRuleIPAction = "Allow"
)

// PossibleNetworkRuleIPActionValues returns an array of possible values for the NetworkRuleIPAction const type.
func PossibleNetworkRuleIPActionValues() []NetworkRuleIPAction {
	return []NetworkRuleIPAction{NetworkRuleIPActionAllow}
}

// NetworkSecurityPerimeterConfigurationProvisioningState enumerates the values for network security perimeter
// configuration provisioning state.
type NetworkSecurityPerimeterConfigurationProvisioningState string

const (
	// NetworkSecurityPerimeterConfigurationProvisioningStateAccepted ...
	NetworkSecurityPerimeterConfigurationProvisioningStateAccepted NetworkSecurityPerimeterConfigurationProvisioningState = "Accepted"
	// NetworkSecurityPerimeterConfigurationProvisioningStateCanceled ...
	NetworkSecurityPerimeterConfigurationProvisioningStateCanceled NetworkSecurityPerimeterConfigurationProvisioningState = "Canceled"
	// NetworkSecurityPerimeterConfigurationProvisioningStateCreating ...
	NetworkSecurityPerimeterConfigurationProvisioningStateCreating NetworkSecurityPerimeterConfigurationProvisioningState = "Creating"
	// NetworkSecurityPerimeterConfigurationProvisioningStateDeleted ...
	NetworkSecurityPerimeterConfigurationProvisioningStateDeleted NetworkSecurityPerimeterConfigurationProvisioningState = "Deleted"
	// NetworkSecurityPerimeterConfigurationProvisioningStateDeleting ...
	NetworkSecurityPerimeterConfigurationProvisioningStateDeleting NetworkSecurityPerimeterConfigurationProvisioningState = "Deleting"
	// NetworkSecurityPerimeterConfigurationProvisioningStateFailed ...
	NetworkSecurityPerimeterConfigurationProvisioningStateFailed NetworkSecurityPerimeterConfigurationProvisioningState = "Failed"
	// NetworkSecurityPerimeterConfigurationProvisioningStateInvalidResponse ...
	NetworkSecurityPerimeterConfigurationProvisioningStateInvalidResponse NetworkSecurityPerimeterConfigurationProvisioningState = "InvalidResponse"
	// NetworkSecurityPerimeterConfigurationProvisioningStateSucceeded ...
	NetworkSecurityPerimeterConfigurationProvisioningStateSucceeded NetworkSecurityPerimeterConfigurationProvisioningState = "Succeeded"
	// NetworkSecurityPerimeterConfigurationProvisioningStateSucceededWithIssues ...
	NetworkSecurityPerimeterConfigurationProvisioningStateSucceededWithIssues NetworkSecurityPerimeterConfigurationProvisioningState = "SucceededWithIssues"
	// NetworkSecurityPerimeterConfigurationProvisioningStateUnknown ...
	NetworkSecurityPerimeterConfigurationProvisioningStateUnknown NetworkSecurityPerimeterConfigurationProvisioningState = "Unknown"
	// NetworkSecurityPerimeterConfigurationProvisioningStateUpdating ...
	NetworkSecurityPerimeterConfigurationProvisioningStateUpdating NetworkSecurityPerimeterConfigurationProvisioningState = "Updating"
)

// PossibleNetworkSecurityPerimeterConfigurationProvisioningStateValues returns an array of possible values for the NetworkSecurityPerimeterConfigurationProvisioningState const type.
func PossibleNetworkSecurityPerimeterConfigurationProvisioningStateValues() []NetworkSecurityPerimeterConfigurationProvisioningState {
	return []NetworkSecurityPerimeterConfigurationProvisioningState{NetworkSecurityPerimeterConfigurationProvisioningStateAccepted, NetworkSecurityPerimeterConfigurationProvisioningStateCanceled, NetworkSecurityPerimeterConfigurationProvisioningStateCreating, NetworkSecurityPerimeterConfigurationProvisioningStateDeleted, NetworkSecurityPerimeterConfigurationProvisioningStateDeleting, NetworkSecurityPerimeterConfigurationProvisioningStateFailed, NetworkSecurityPerimeterConfigurationProvisioningStateInvalidResponse, NetworkSecurityPerimeterConfigurationProvisioningStateSucceeded, NetworkSecurityPerimeterConfigurationProvisioningStateSucceededWithIssues, NetworkSecurityPerimeterConfigurationProvisioningStateUnknown, NetworkSecurityPerimeterConfigurationProvisioningStateUpdating}
}

// NspAccessRuleDirection enumerates the values for nsp access rule direction.
type NspAccessRuleDirection string

const (
	// Inbound ...
	Inbound NspAccessRuleDirection = "Inbound"
	// Outbound ...
	Outbound NspAccessRuleDirection = "Outbound"
)

// PossibleNspAccessRuleDirectionValues returns an array of possible values for the NspAccessRuleDirection const type.
func PossibleNspAccessRuleDirectionValues() []NspAccessRuleDirection {
	return []NspAccessRuleDirection{Inbound, Outbound}
}

// PrivateLinkConnectionStatus enumerates the values for private link connection status.
type PrivateLinkConnectionStatus string

const (
	// Approved ...
	Approved PrivateLinkConnectionStatus = "Approved"
	// Disconnected ...
	Disconnected PrivateLinkConnectionStatus = "Disconnected"
	// Pending ...
	Pending PrivateLinkConnectionStatus = "Pending"
	// Rejected ...
	Rejected PrivateLinkConnectionStatus = "Rejected"
)

// PossiblePrivateLinkConnectionStatusValues returns an array of possible values for the PrivateLinkConnectionStatus const type.
func PossiblePrivateLinkConnectionStatusValues() []PrivateLinkConnectionStatus {
	return []PrivateLinkConnectionStatus{Approved, Disconnected, Pending, Rejected}
}

// ProvisioningStateDR enumerates the values for provisioning state dr.
type ProvisioningStateDR string

const (
	// ProvisioningStateDRAccepted ...
	ProvisioningStateDRAccepted ProvisioningStateDR = "Accepted"
	// ProvisioningStateDRFailed ...
	ProvisioningStateDRFailed ProvisioningStateDR = "Failed"
	// ProvisioningStateDRSucceeded ...
	ProvisioningStateDRSucceeded ProvisioningStateDR = "Succeeded"
)

// PossibleProvisioningStateDRValues returns an array of possible values for the ProvisioningStateDR const type.
func PossibleProvisioningStateDRValues() []ProvisioningStateDR {
	return []ProvisioningStateDR{ProvisioningStateDRAccepted, ProvisioningStateDRFailed, ProvisioningStateDRSucceeded}
}

// PublicNetworkAccess enumerates the values for public network access.
type PublicNetworkAccess string

const (
	// Disabled ...
	Disabled PublicNetworkAccess = "Disabled"
	// Enabled ...
	Enabled PublicNetworkAccess = "Enabled"
	// SecuredByPerimeter ...
	SecuredByPerimeter PublicNetworkAccess = "SecuredByPerimeter"
)

// PossiblePublicNetworkAccessValues returns an array of possible values for the PublicNetworkAccess const type.
func PossiblePublicNetworkAccessValues() []PublicNetworkAccess {
	return []PublicNetworkAccess{Disabled, Enabled, SecuredByPerimeter}
}

// PublicNetworkAccessFlag enumerates the values for public network access flag.
type PublicNetworkAccessFlag string

const (
	// PublicNetworkAccessFlagDisabled ...
	PublicNetworkAccessFlagDisabled PublicNetworkAccessFlag = "Disabled"
	// PublicNetworkAccessFlagEnabled ...
	PublicNetworkAccessFlagEnabled PublicNetworkAccessFlag = "Enabled"
	// PublicNetworkAccessFlagSecuredByPerimeter ...
	PublicNetworkAccessFlagSecuredByPerimeter PublicNetworkAccessFlag = "SecuredByPerimeter"
)

// PossiblePublicNetworkAccessFlagValues returns an array of possible values for the PublicNetworkAccessFlag const type.
func PossiblePublicNetworkAccessFlagValues() []PublicNetworkAccessFlag {
	return []PublicNetworkAccessFlag{PublicNetworkAccessFlagDisabled, PublicNetworkAccessFlagEnabled, PublicNetworkAccessFlagSecuredByPerimeter}
}

// ResourceAssociationAccessMode enumerates the values for resource association access mode.
type ResourceAssociationAccessMode string

const (
	// AuditMode ...
	AuditMode ResourceAssociationAccessMode = "AuditMode"
	// EnforcedMode ...
	EnforcedMode ResourceAssociationAccessMode = "EnforcedMode"
	// LearningMode ...
	LearningMode ResourceAssociationAccessMode = "LearningMode"
	// NoAssociationMode ...
	NoAssociationMode ResourceAssociationAccessMode = "NoAssociationMode"
	// UnspecifiedMode ...
	UnspecifiedMode ResourceAssociationAccessMode = "UnspecifiedMode"
)

// PossibleResourceAssociationAccessModeValues returns an array of possible values for the ResourceAssociationAccessMode const type.
func PossibleResourceAssociationAccessModeValues() []ResourceAssociationAccessMode {
	return []ResourceAssociationAccessMode{AuditMode, EnforcedMode, LearningMode, NoAssociationMode, UnspecifiedMode}
}

// RoleDisasterRecovery enumerates the values for role disaster recovery.
type RoleDisasterRecovery string

const (
	// Primary ...
	Primary RoleDisasterRecovery = "Primary"
	// PrimaryNotReplicating ...
	PrimaryNotReplicating RoleDisasterRecovery = "PrimaryNotReplicating"
	// Secondary ...
	Secondary RoleDisasterRecovery = "Secondary"
)

// PossibleRoleDisasterRecoveryValues returns an array of possible values for the RoleDisasterRecovery const type.
func PossibleRoleDisasterRecoveryValues() []RoleDisasterRecovery {
	return []RoleDisasterRecovery{Primary, PrimaryNotReplicating, Secondary}
}

// SchemaCompatibility enumerates the values for schema compatibility.
type SchemaCompatibility string

const (
	// SchemaCompatibilityBackward ...
	SchemaCompatibilityBackward SchemaCompatibility = "Backward"
	// SchemaCompatibilityForward ...
	SchemaCompatibilityForward SchemaCompatibility = "Forward"
	// SchemaCompatibilityNone ...
	SchemaCompatibilityNone SchemaCompatibility = "None"
)

// PossibleSchemaCompatibilityValues returns an array of possible values for the SchemaCompatibility const type.
func PossibleSchemaCompatibilityValues() []SchemaCompatibility {
	return []SchemaCompatibility{SchemaCompatibilityBackward, SchemaCompatibilityForward, SchemaCompatibilityNone}
}

// SchemaType enumerates the values for schema type.
type SchemaType string

const (
	// SchemaTypeAvro ...
	SchemaTypeAvro SchemaType = "Avro"
	// SchemaTypeUnknown ...
	SchemaTypeUnknown SchemaType = "Unknown"
)

// PossibleSchemaTypeValues returns an array of possible values for the SchemaType const type.
func PossibleSchemaTypeValues() []SchemaType {
	return []SchemaType{SchemaTypeAvro, SchemaTypeUnknown}
}

// SkuName enumerates the values for sku name.
type SkuName string

const (
	// Basic ...
	Basic SkuName = "Basic"
	// Premium ...
	Premium SkuName = "Premium"
	// Standard ...
	Standard SkuName = "Standard"
)

// PossibleSkuNameValues returns an array of possible values for the SkuName const type.
func PossibleSkuNameValues() []SkuName {
	return []SkuName{Basic, Premium, Standard}
}

// SkuTier enumerates the values for sku tier.
type SkuTier string

const (
	// SkuTierBasic ...
	SkuTierBasic SkuTier = "Basic"
	// SkuTierPremium ...
	SkuTierPremium SkuTier = "Premium"
	// SkuTierStandard ...
	SkuTierStandard SkuTier = "Standard"
)

// PossibleSkuTierValues returns an array of possible values for the SkuTier const type.
func PossibleSkuTierValues() []SkuTier {
	return []SkuTier{SkuTierBasic, SkuTierPremium, SkuTierStandard}
}

// TLSVersion enumerates the values for tls version.
type TLSVersion string

const (
	// OneFullStopOne ...
	OneFullStopOne TLSVersion = "1.1"
	// OneFullStopTwo ...
	OneFullStopTwo TLSVersion = "1.2"
	// OneFullStopZero ...
	OneFullStopZero TLSVersion = "1.0"
)

// PossibleTLSVersionValues returns an array of possible values for the TLSVersion const type.
func PossibleTLSVersionValues() []TLSVersion {
	return []TLSVersion{OneFullStopOne, OneFullStopTwo, OneFullStopZero}
}

// Type enumerates the values for type.
type Type string

const (
	// TypeApplicationGroupPolicy ...
	TypeApplicationGroupPolicy Type = "ApplicationGroupPolicy"
	// TypeThrottlingPolicy ...
	TypeThrottlingPolicy Type = "ThrottlingPolicy"
)

// PossibleTypeValues returns an array of possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{TypeApplicationGroupPolicy, TypeThrottlingPolicy}
}

// UnavailableReason enumerates the values for unavailable reason.
type UnavailableReason string

const (
	// UnavailableReasonInvalidName ...
	UnavailableReasonInvalidName UnavailableReason = "InvalidName"
	// UnavailableReasonNameInLockdown ...
	UnavailableReasonNameInLockdown UnavailableReason = "NameInLockdown"
	// UnavailableReasonNameInUse ...
	UnavailableReasonNameInUse UnavailableReason = "NameInUse"
	// UnavailableReasonNone ...
	UnavailableReasonNone UnavailableReason = "None"
	// UnavailableReasonSubscriptionIsDisabled ...
	UnavailableReasonSubscriptionIsDisabled UnavailableReason = "SubscriptionIsDisabled"
	// UnavailableReasonTooManyNamespaceInCurrentSubscription ...
	UnavailableReasonTooManyNamespaceInCurrentSubscription UnavailableReason = "TooManyNamespaceInCurrentSubscription"
)

// PossibleUnavailableReasonValues returns an array of possible values for the UnavailableReason const type.
func PossibleUnavailableReasonValues() []UnavailableReason {
	return []UnavailableReason{UnavailableReasonInvalidName, UnavailableReasonNameInLockdown, UnavailableReasonNameInUse, UnavailableReasonNone, UnavailableReasonSubscriptionIsDisabled, UnavailableReasonTooManyNamespaceInCurrentSubscription}
}
