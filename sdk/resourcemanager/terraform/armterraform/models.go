//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armterraform

import "time"

// BaseExportModel - The base export parameter
type BaseExportModel struct {
	// REQUIRED; The parameter type
	Type *Type

	// Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications
	// to make it valid
	FullProperties *bool

	// Mask sensitive attributes in the Terraform configuration
	MaskSensitive *bool

	// The target Azure Terraform Provider
	TargetProvider *TargetProvider
}

// GetBaseExportModel implements the BaseExportModelClassification interface for type BaseExportModel.
func (b *BaseExportModel) GetBaseExportModel() *BaseExportModel { return b }

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any

	// READ-ONLY; The additional info type.
	Type *string
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo

	// READ-ONLY; The error code.
	Code *string

	// READ-ONLY; The error details.
	Details []*ErrorDetail

	// READ-ONLY; The error message.
	Message *string

	// READ-ONLY; The error target.
	Target *string
}

// ExportQuery - Export parameter for resources queried by ARG (Azure Resource Graph)
type ExportQuery struct {
	// REQUIRED; The ARG where predicate. Note that you can combine multiple conditions in one where predicate, e.g. resourceGroup
	// =~ "my-rg" and type =~ "microsoft.network/virtualnetworks"
	Query *string

	// REQUIRED; The parameter type
	Type *Type

	// Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications
	// to make it valid
	FullProperties *bool

	// Mask sensitive attributes in the Terraform configuration
	MaskSensitive *bool

	// The name pattern of the Terraform resources
	NamePattern *string

	// Whether to recursively list child resources of the query result
	Recursive *bool

	// The target Azure Terraform Provider
	TargetProvider *TargetProvider
}

// GetBaseExportModel implements the BaseExportModelClassification interface for type ExportQuery.
func (e *ExportQuery) GetBaseExportModel() *BaseExportModel {
	return &BaseExportModel{
		FullProperties: e.FullProperties,
		MaskSensitive:  e.MaskSensitive,
		TargetProvider: e.TargetProvider,
		Type:           e.Type,
	}
}

// ExportResource - Export parameter for individual resources.
type ExportResource struct {
	// REQUIRED; The id of the resource to be exported
	ResourceIDs []*string

	// REQUIRED; The parameter type
	Type *Type

	// Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications
	// to make it valid
	FullProperties *bool

	// Mask sensitive attributes in the Terraform configuration
	MaskSensitive *bool

	// The name pattern of the Terraform resources
	NamePattern *string

	// The Terraform resource name. Only works when resourceIds contains only one item.
	ResourceName *string

	// The Terraform resource type. Only works when resourceIds contains only one item.
	ResourceType *string

	// The target Azure Terraform Provider
	TargetProvider *TargetProvider
}

// GetBaseExportModel implements the BaseExportModelClassification interface for type ExportResource.
func (e *ExportResource) GetBaseExportModel() *BaseExportModel {
	return &BaseExportModel{
		FullProperties: e.FullProperties,
		MaskSensitive:  e.MaskSensitive,
		TargetProvider: e.TargetProvider,
		Type:           e.Type,
	}
}

// ExportResourceGroup - Export parameter for a resource group
type ExportResourceGroup struct {
	// REQUIRED; The name of the resource group to be exported
	ResourceGroupName *string

	// REQUIRED; The parameter type
	Type *Type

	// Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications
	// to make it valid
	FullProperties *bool

	// Mask sensitive attributes in the Terraform configuration
	MaskSensitive *bool

	// The name pattern of the Terraform resources
	NamePattern *string

	// The target Azure Terraform Provider
	TargetProvider *TargetProvider
}

// GetBaseExportModel implements the BaseExportModelClassification interface for type ExportResourceGroup.
func (e *ExportResourceGroup) GetBaseExportModel() *BaseExportModel {
	return &BaseExportModel{
		FullProperties: e.FullProperties,
		MaskSensitive:  e.MaskSensitive,
		TargetProvider: e.TargetProvider,
		Type:           e.Type,
	}
}

// ExportResult - The Terraform export result
type ExportResult struct {
	// The Terraform configuration content
	Configuration *string

	// A list of errors derived during exporting each resource
	Errors []*ErrorDetail

	// A list of Azure resources which are not exported to Terraform due to there is no corresponding resources in Terraform
	SkippedResources []*string
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation
}

// OperationStatus - The status of the LRO operation.
type OperationStatus struct {
	// The error object.
	Error *ErrorDetail

	// The operation status resource id.
	ID *string

	// The operation name.
	Name *string

	// The progress percentage of the operation, ranges from 0 to 100
	PercentComplete *float64

	// The Terraform export result
	Properties *ExportResult

	// The status of the operation.
	Status *string

	// READ-ONLY; The end time of the operation.
	EndTime *time.Time

	// READ-ONLY; The fully qualified resource id of the resource for which the operation was performed.
	ResourceID *string

	// READ-ONLY; The start time of the operation.
	StartTime *time.Time
}
