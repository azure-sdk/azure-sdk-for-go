//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsecurity

import "time"

// AwsEnvironmentData - The AWS connector environment data
type AwsEnvironmentData struct {
	// REQUIRED; The type of the environment data.
	EnvironmentType *EnvironmentType

	// The AWS account's organizational data
	OrganizationalData AwsOrganizationalDataClassification

	// list of regions to scan
	Regions []*string

	// Scan interval in hours (value should be between 1-hour to 24-hours)
	ScanInterval *int64

	// READ-ONLY; The AWS account name
	AccountName *string
}

// GetEnvironmentData implements the EnvironmentDataClassification interface for type AwsEnvironmentData.
func (a *AwsEnvironmentData) GetEnvironmentData() *EnvironmentData {
	return &EnvironmentData{
		EnvironmentType: a.EnvironmentType,
	}
}

// AwsOrganizationalData - The AWS organization data
type AwsOrganizationalData struct {
	// REQUIRED; The multi cloud account's membership type in the organization
	OrganizationMembershipType *OrganizationMembershipType
}

// GetAwsOrganizationalData implements the AwsOrganizationalDataClassification interface for type AwsOrganizationalData.
func (a *AwsOrganizationalData) GetAwsOrganizationalData() *AwsOrganizationalData { return a }

// AwsOrganizationalDataMaster - The AWS organization data for the master account
type AwsOrganizationalDataMaster struct {
	// REQUIRED; The multi cloud account's membership type in the organization
	OrganizationMembershipType *OrganizationMembershipType

	// If the multi cloud account is of membership type organization, list of accounts excluded from offering
	ExcludedAccountIDs []*string

	// If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
	StacksetName *string
}

// GetAwsOrganizationalData implements the AwsOrganizationalDataClassification interface for type AwsOrganizationalDataMaster.
func (a *AwsOrganizationalDataMaster) GetAwsOrganizationalData() *AwsOrganizationalData {
	return &AwsOrganizationalData{
		OrganizationMembershipType: a.OrganizationMembershipType,
	}
}

// AwsOrganizationalDataMember - The AWS organization data for the member account
type AwsOrganizationalDataMember struct {
	// REQUIRED; The multi cloud account's membership type in the organization
	OrganizationMembershipType *OrganizationMembershipType

	// If the multi cloud account is not of membership type organization, this will be the ID of the account's parent
	ParentHierarchyID *string
}

// GetAwsOrganizationalData implements the AwsOrganizationalDataClassification interface for type AwsOrganizationalDataMember.
func (a *AwsOrganizationalDataMember) GetAwsOrganizationalData() *AwsOrganizationalData {
	return &AwsOrganizationalData{
		OrganizationMembershipType: a.OrganizationMembershipType,
	}
}

// AzureDevOpsScopeEnvironmentData - The AzureDevOps scope connector's environment data
type AzureDevOpsScopeEnvironmentData struct {
	// REQUIRED; The type of the environment data.
	EnvironmentType *EnvironmentType
}

// GetEnvironmentData implements the EnvironmentDataClassification interface for type AzureDevOpsScopeEnvironmentData.
func (a *AzureDevOpsScopeEnvironmentData) GetEnvironmentData() *EnvironmentData {
	return &EnvironmentData{
		EnvironmentType: a.EnvironmentType,
	}
}

// AzureTrackedResourceLocation - Describes an Azure resource with location
type AzureTrackedResourceLocation struct {
	// Location where the resource is stored
	Location *string
}

// CloudOffering - The security offering details
type CloudOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type CloudOffering.
func (c *CloudOffering) GetCloudOffering() *CloudOffering { return c }

// Connector - The security connector resource.
type Connector struct {
	// Entity tag is used for comparing two or more entities from the same requested resource.
	Etag *string

	// Kind of the resource
	Kind *string

	// Location where the resource is stored
	Location *string

	// Security connector data
	Properties *ConnectorProperties

	// A list of key value pairs that describe the resource.
	Tags map[string]*string

	// READ-ONLY; Resource Id
	ID *string

	// READ-ONLY; Resource name
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; Resource type
	Type *string
}

// ConnectorProperties - A set of properties that defines the security connector configuration.
type ConnectorProperties struct {
	// The security connector environment data.
	EnvironmentData EnvironmentDataClassification

	// The multi cloud resource's cloud name.
	EnvironmentName *CloudName

	// The multi cloud resource identifier (account id in case of AWS connector, project number in case of GCP connector).
	HierarchyIdentifier *string

	// A collection of offerings for the security connector.
	Offerings []CloudOfferingClassification

	// READ-ONLY; The date on which the trial period will end, if applicable. Trial period exists for 30 days after upgrading
	// to payed offerings.
	HierarchyIdentifierTrialEndDate *time.Time
}

// ConnectorsList - List of security connectors response.
type ConnectorsList struct {
	// REQUIRED; The list of security connectors under the given scope.
	Value []*Connector

	// READ-ONLY; The URI to fetch the next page.
	NextLink *string
}

// CspmMonitorAwsOffering - The CSPM monitoring for AWS offering
type CspmMonitorAwsOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// The native cloud connection configuration
	NativeCloudConnection *CspmMonitorAwsOfferingNativeCloudConnection

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type CspmMonitorAwsOffering.
func (c *CspmMonitorAwsOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  c.Description,
		OfferingType: c.OfferingType,
	}
}

// CspmMonitorAwsOfferingNativeCloudConnection - The native cloud connection configuration
type CspmMonitorAwsOfferingNativeCloudConnection struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string
}

// CspmMonitorAzureDevOpsOffering - The CSPM monitoring for AzureDevOps offering
type CspmMonitorAzureDevOpsOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type CspmMonitorAzureDevOpsOffering.
func (c *CspmMonitorAzureDevOpsOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  c.Description,
		OfferingType: c.OfferingType,
	}
}

// CspmMonitorGcpOffering - The CSPM monitoring for GCP offering
type CspmMonitorGcpOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// The native cloud connection configuration
	NativeCloudConnection *CspmMonitorGcpOfferingNativeCloudConnection

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type CspmMonitorGcpOffering.
func (c *CspmMonitorGcpOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  c.Description,
		OfferingType: c.OfferingType,
	}
}

// CspmMonitorGcpOfferingNativeCloudConnection - The native cloud connection configuration
type CspmMonitorGcpOfferingNativeCloudConnection struct {
	// The service account email address in GCP for this offering
	ServiceAccountEmailAddress *string

	// The GCP workload identity provider id for the offering
	WorkloadIdentityProviderID *string
}

// CspmMonitorGitLabOffering - The CSPM (Cloud security posture management) monitoring for gitlab offering
type CspmMonitorGitLabOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type CspmMonitorGitLabOffering.
func (c *CspmMonitorGitLabOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  c.Description,
		OfferingType: c.OfferingType,
	}
}

// CspmMonitorGithubOffering - The CSPM monitoring for github offering
type CspmMonitorGithubOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type CspmMonitorGithubOffering.
func (c *CspmMonitorGithubOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  c.Description,
		OfferingType: c.OfferingType,
	}
}

// DefenderCspmAwsOffering - The CSPM P1 for AWS offering
type DefenderCspmAwsOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// Defenders CSPM Cloud infrastructure entitlement management (CIEM) offering configurations
	Ciem *DefenderCspmAwsOfferingCiem

	// The Microsoft Defender Data Sensitivity discovery configuration
	DataSensitivityDiscovery *DefenderCspmAwsOfferingDataSensitivityDiscovery

	// The databases DSPM configuration
	DatabasesDspm *DefenderCspmAwsOfferingDatabasesDspm

	// The Microsoft Defender container agentless discovery K8s configuration
	MdcContainersAgentlessDiscoveryK8S *DefenderCspmAwsOfferingMdcContainersAgentlessDiscoveryK8S

	// The Microsoft Defender container image assessment configuration
	MdcContainersImageAssessment *DefenderCspmAwsOfferingMdcContainersImageAssessment

	// The Microsoft Defender for Server VM scanning configuration
	VMScanners *DefenderCspmAwsOfferingVMScanners

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderCspmAwsOffering.
func (d *DefenderCspmAwsOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderCspmAwsOfferingCiem - Defenders CSPM Cloud infrastructure entitlement management (CIEM) offering configurations
type DefenderCspmAwsOfferingCiem struct {
	// Defender CSPM CIEM discovery configuration
	CiemDiscovery *DefenderCspmAwsOfferingCiemDiscovery

	// Defender CSPM CIEM AWS OIDC (open id connect) configuration
	CiemOidc *DefenderCspmAwsOfferingCiemOidc
}

// DefenderCspmAwsOfferingCiemDiscovery - Defender CSPM CIEM discovery configuration
type DefenderCspmAwsOfferingCiemDiscovery struct {
	// The cloud role ARN in AWS for CIEM discovery
	CloudRoleArn *string
}

// DefenderCspmAwsOfferingCiemOidc - Defender CSPM CIEM AWS OIDC (open id connect) configuration
type DefenderCspmAwsOfferingCiemOidc struct {
	// the azure active directory app name used of authenticating against AWS
	AzureActiveDirectoryAppName *string

	// The cloud role ARN in AWS for CIEM oidc connection
	CloudRoleArn *string
}

// DefenderCspmAwsOfferingDataSensitivityDiscovery - The Microsoft Defender Data Sensitivity discovery configuration
type DefenderCspmAwsOfferingDataSensitivityDiscovery struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// Is Microsoft Defender Data Sensitivity discovery enabled
	Enabled *bool
}

// DefenderCspmAwsOfferingDatabasesDspm - The databases DSPM configuration
type DefenderCspmAwsOfferingDatabasesDspm struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// Is databases DSPM protection enabled
	Enabled *bool
}

// DefenderCspmAwsOfferingMdcContainersAgentlessDiscoveryK8S - The Microsoft Defender container agentless discovery K8s configuration
type DefenderCspmAwsOfferingMdcContainersAgentlessDiscoveryK8S struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// Is Microsoft Defender container agentless discovery K8s enabled
	Enabled *bool
}

// DefenderCspmAwsOfferingMdcContainersImageAssessment - The Microsoft Defender container image assessment configuration
type DefenderCspmAwsOfferingMdcContainersImageAssessment struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// Is Microsoft Defender container image assessment enabled
	Enabled *bool
}

// DefenderCspmAwsOfferingVMScanners - The Microsoft Defender for Server VM scanning configuration
type DefenderCspmAwsOfferingVMScanners struct {
	// configuration for Microsoft Defender for Server VM scanning
	Configuration *DefenderCspmAwsOfferingVMScannersConfiguration

	// Is Microsoft Defender for Server VM scanning enabled
	Enabled *bool
}

// DefenderCspmAwsOfferingVMScannersConfiguration - configuration for Microsoft Defender for Server VM scanning
type DefenderCspmAwsOfferingVMScannersConfiguration struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// VM tags that indicates that VM should not be scanned
	ExclusionTags map[string]*string

	// The scanning mode for the VM scan.
	ScanningMode *ScanningMode
}

// DefenderCspmGcpOffering - The CSPM P1 for GCP offering
type DefenderCspmGcpOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// GCP Defenders CSPM Cloud infrastructure entitlement management (CIEM) discovery offering configurations
	CiemDiscovery *DefenderCspmGcpOfferingCiemDiscovery

	// The Microsoft Defender Data Sensitivity discovery configuration
	DataSensitivityDiscovery *DefenderCspmGcpOfferingDataSensitivityDiscovery

	// The Microsoft Defender Container agentless discovery configuration
	MdcContainersAgentlessDiscoveryK8S *DefenderCspmGcpOfferingMdcContainersAgentlessDiscoveryK8S

	// The Microsoft Defender Container image assessment configuration
	MdcContainersImageAssessment *DefenderCspmGcpOfferingMdcContainersImageAssessment

	// The Microsoft Defender for Server VM scanning configuration
	VMScanners *DefenderCspmGcpOfferingVMScanners

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderCspmGcpOffering.
func (d *DefenderCspmGcpOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderCspmGcpOfferingCiemDiscovery - GCP Defenders CSPM Cloud infrastructure entitlement management (CIEM) discovery
// offering configurations
type DefenderCspmGcpOfferingCiemDiscovery struct {
	// the azure active directory app name used of authenticating against GCP workload identity federation
	AzureActiveDirectoryAppName *string

	// The service account email address in GCP for CIEM discovery offering
	ServiceAccountEmailAddress *string

	// The GCP workload identity provider id for CIEM discovery offering
	WorkloadIdentityProviderID *string
}

// DefenderCspmGcpOfferingDataSensitivityDiscovery - The Microsoft Defender Data Sensitivity discovery configuration
type DefenderCspmGcpOfferingDataSensitivityDiscovery struct {
	// Is Microsoft Defender Data Sensitivity discovery enabled
	Enabled *bool

	// The service account email address in GCP for this feature
	ServiceAccountEmailAddress *string

	// The workload identity provider id in GCP for this feature
	WorkloadIdentityProviderID *string
}

// DefenderCspmGcpOfferingMdcContainersAgentlessDiscoveryK8S - The Microsoft Defender Container agentless discovery configuration
type DefenderCspmGcpOfferingMdcContainersAgentlessDiscoveryK8S struct {
	// Is Microsoft Defender container agentless discovery enabled
	Enabled *bool

	// The service account email address in GCP for this feature
	ServiceAccountEmailAddress *string

	// The workload identity provider id in GCP for this feature
	WorkloadIdentityProviderID *string
}

// DefenderCspmGcpOfferingMdcContainersImageAssessment - The Microsoft Defender Container image assessment configuration
type DefenderCspmGcpOfferingMdcContainersImageAssessment struct {
	// Is Microsoft Defender container image assessment enabled
	Enabled *bool

	// The service account email address in GCP for this feature
	ServiceAccountEmailAddress *string

	// The workload identity provider id in GCP for this feature
	WorkloadIdentityProviderID *string
}

// DefenderCspmGcpOfferingVMScanners - The Microsoft Defender for Server VM scanning configuration
type DefenderCspmGcpOfferingVMScanners struct {
	// configuration for Microsoft Defender for Server VM scanning
	Configuration *DefenderCspmGcpOfferingVMScannersConfiguration

	// Is Microsoft Defender for Server VM scanning enabled
	Enabled *bool
}

// DefenderCspmGcpOfferingVMScannersConfiguration - configuration for Microsoft Defender for Server VM scanning
type DefenderCspmGcpOfferingVMScannersConfiguration struct {
	// VM tags that indicates that VM should not be scanned
	ExclusionTags map[string]*string

	// The scanning mode for the VM scan.
	ScanningMode *ScanningMode
}

// DefenderFoDatabasesAwsOffering - The Defender for Databases AWS offering
type DefenderFoDatabasesAwsOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// The ARC autoprovisioning configuration
	ArcAutoProvisioning *DefenderFoDatabasesAwsOfferingArcAutoProvisioning

	// The databases data security posture management (DSPM) configuration
	DatabasesDspm *DefenderFoDatabasesAwsOfferingDatabasesDspm

	// The RDS configuration
	Rds *DefenderFoDatabasesAwsOfferingRds

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderFoDatabasesAwsOffering.
func (d *DefenderFoDatabasesAwsOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderFoDatabasesAwsOfferingArcAutoProvisioning - The ARC autoprovisioning configuration
type DefenderFoDatabasesAwsOfferingArcAutoProvisioning struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// Configuration for servers Arc auto provisioning
	Configuration *DefenderFoDatabasesAwsOfferingArcAutoProvisioningConfiguration

	// Is arc auto provisioning enabled
	Enabled *bool
}

// DefenderFoDatabasesAwsOfferingArcAutoProvisioningConfiguration - Configuration for servers Arc auto provisioning
type DefenderFoDatabasesAwsOfferingArcAutoProvisioningConfiguration struct {
	// Optional Arc private link scope resource id to link the Arc agent
	PrivateLinkScope *string

	// Optional http proxy endpoint to use for the Arc agent
	Proxy *string
}

// DefenderFoDatabasesAwsOfferingDatabasesDspm - The databases data security posture management (DSPM) configuration
type DefenderFoDatabasesAwsOfferingDatabasesDspm struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// Is databases data security posture management (DSPM) protection enabled
	Enabled *bool
}

// DefenderFoDatabasesAwsOfferingRds - The RDS configuration
type DefenderFoDatabasesAwsOfferingRds struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// Is RDS protection enabled
	Enabled *bool
}

// DefenderForContainersAwsOffering - The Defender for Containers AWS offering
type DefenderForContainersAwsOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// Is audit logs pipeline auto provisioning enabled
	AutoProvisioning *bool

	// The cloudwatch to kinesis connection configuration
	CloudWatchToKinesis *DefenderForContainersAwsOfferingCloudWatchToKinesis

	// The container vulnerability assessment configuration
	ContainerVulnerabilityAssessment *DefenderForContainersAwsOfferingContainerVulnerabilityAssessment

	// The container vulnerability assessment task configuration
	ContainerVulnerabilityAssessmentTask *DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTask

	// Enable container vulnerability assessment feature
	EnableContainerVulnerabilityAssessment *bool

	// The kinesis to s3 connection configuration
	KinesisToS3 *DefenderForContainersAwsOfferingKinesisToS3

	// The retention time in days of kube audit logs set on the CloudWatch log group
	KubeAuditRetentionTime *int64

	// The kubernetes to scuba connection configuration
	KubernetesScubaReader *DefenderForContainersAwsOfferingKubernetesScubaReader

	// The kubernetes service connection configuration
	KubernetesService *DefenderForContainersAwsOfferingKubernetesService

	// The Microsoft Defender container agentless discovery K8s configuration
	MdcContainersAgentlessDiscoveryK8S *DefenderForContainersAwsOfferingMdcContainersAgentlessDiscoveryK8S

	// The Microsoft Defender container image assessment configuration
	MdcContainersImageAssessment *DefenderForContainersAwsOfferingMdcContainersImageAssessment

	// The externalId used by the data reader to prevent the confused deputy attack
	ScubaExternalID *string

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderForContainersAwsOffering.
func (d *DefenderForContainersAwsOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderForContainersAwsOfferingCloudWatchToKinesis - The cloudwatch to kinesis connection configuration
type DefenderForContainersAwsOfferingCloudWatchToKinesis struct {
	// The cloud role ARN in AWS used by CloudWatch to transfer data into Kinesis
	CloudRoleArn *string
}

// DefenderForContainersAwsOfferingContainerVulnerabilityAssessment - The container vulnerability assessment configuration
type DefenderForContainersAwsOfferingContainerVulnerabilityAssessment struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string
}

// DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTask - The container vulnerability assessment task configuration
type DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTask struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string
}

// DefenderForContainersAwsOfferingKinesisToS3 - The kinesis to s3 connection configuration
type DefenderForContainersAwsOfferingKinesisToS3 struct {
	// The cloud role ARN in AWS used by Kinesis to transfer data into S3
	CloudRoleArn *string
}

// DefenderForContainersAwsOfferingKubernetesScubaReader - The kubernetes to scuba connection configuration
type DefenderForContainersAwsOfferingKubernetesScubaReader struct {
	// The cloud role ARN in AWS for this feature used for reading data
	CloudRoleArn *string
}

// DefenderForContainersAwsOfferingKubernetesService - The kubernetes service connection configuration
type DefenderForContainersAwsOfferingKubernetesService struct {
	// The cloud role ARN in AWS for this feature used for provisioning resources
	CloudRoleArn *string
}

// DefenderForContainersAwsOfferingMdcContainersAgentlessDiscoveryK8S - The Microsoft Defender container agentless discovery
// K8s configuration
type DefenderForContainersAwsOfferingMdcContainersAgentlessDiscoveryK8S struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// Is Microsoft Defender container agentless discovery K8s enabled
	Enabled *bool
}

// DefenderForContainersAwsOfferingMdcContainersImageAssessment - The Microsoft Defender container image assessment configuration
type DefenderForContainersAwsOfferingMdcContainersImageAssessment struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// Is Microsoft Defender container image assessment enabled
	Enabled *bool
}

// DefenderForContainersGcpOffering - The containers GCP offering
type DefenderForContainersGcpOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// Is audit logs data collection enabled
	AuditLogsAutoProvisioningFlag *bool

	// The native cloud connection configuration
	DataPipelineNativeCloudConnection *DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection

	// Is Microsoft Defender for Cloud Kubernetes agent auto provisioning enabled
	DefenderAgentAutoProvisioningFlag *bool

	// The Microsoft Defender Container agentless discovery configuration
	MdcContainersAgentlessDiscoveryK8S *DefenderForContainersGcpOfferingMdcContainersAgentlessDiscoveryK8S

	// The Microsoft Defender Container image assessment configuration
	MdcContainersImageAssessment *DefenderForContainersGcpOfferingMdcContainersImageAssessment

	// The native cloud connection configuration
	NativeCloudConnection *DefenderForContainersGcpOfferingNativeCloudConnection

	// Is Policy Kubernetes agent auto provisioning enabled
	PolicyAgentAutoProvisioningFlag *bool

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderForContainersGcpOffering.
func (d *DefenderForContainersGcpOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection - The native cloud connection configuration
type DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection struct {
	// The data collection service account email address in GCP for this offering
	ServiceAccountEmailAddress *string

	// The data collection GCP workload identity provider id for this offering
	WorkloadIdentityProviderID *string
}

// DefenderForContainersGcpOfferingMdcContainersAgentlessDiscoveryK8S - The Microsoft Defender Container agentless discovery
// configuration
type DefenderForContainersGcpOfferingMdcContainersAgentlessDiscoveryK8S struct {
	// Is Microsoft Defender container agentless discovery enabled
	Enabled *bool

	// The service account email address in GCP for this feature
	ServiceAccountEmailAddress *string

	// The workload identity provider id in GCP for this feature
	WorkloadIdentityProviderID *string
}

// DefenderForContainersGcpOfferingMdcContainersImageAssessment - The Microsoft Defender Container image assessment configuration
type DefenderForContainersGcpOfferingMdcContainersImageAssessment struct {
	// Is Microsoft Defender container image assessment enabled
	Enabled *bool

	// The service account email address in GCP for this feature
	ServiceAccountEmailAddress *string

	// The workload identity provider id in GCP for this feature
	WorkloadIdentityProviderID *string
}

// DefenderForContainersGcpOfferingNativeCloudConnection - The native cloud connection configuration
type DefenderForContainersGcpOfferingNativeCloudConnection struct {
	// The service account email address in GCP for this offering
	ServiceAccountEmailAddress *string

	// The GCP workload identity provider id for this offering
	WorkloadIdentityProviderID *string
}

// DefenderForDatabasesGcpOffering - The Defender for Databases GCP offering configurations
type DefenderForDatabasesGcpOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// The ARC autoprovisioning configuration
	ArcAutoProvisioning *DefenderForDatabasesGcpOfferingArcAutoProvisioning

	// The native cloud connection configuration
	DefenderForDatabasesArcAutoProvisioning *DefenderForDatabasesGcpOfferingDefenderForDatabasesArcAutoProvisioning

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderForDatabasesGcpOffering.
func (d *DefenderForDatabasesGcpOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderForDatabasesGcpOfferingArcAutoProvisioning - The ARC autoprovisioning configuration
type DefenderForDatabasesGcpOfferingArcAutoProvisioning struct {
	// Configuration for servers Arc auto provisioning
	Configuration *DefenderForDatabasesGcpOfferingArcAutoProvisioningConfiguration

	// Is arc auto provisioning enabled
	Enabled *bool
}

// DefenderForDatabasesGcpOfferingArcAutoProvisioningConfiguration - Configuration for servers Arc auto provisioning
type DefenderForDatabasesGcpOfferingArcAutoProvisioningConfiguration struct {
	// Optional Arc private link scope resource id to link the Arc agent
	PrivateLinkScope *string

	// Optional http proxy endpoint to use for the Arc agent
	Proxy *string
}

// DefenderForDatabasesGcpOfferingDefenderForDatabasesArcAutoProvisioning - The native cloud connection configuration
type DefenderForDatabasesGcpOfferingDefenderForDatabasesArcAutoProvisioning struct {
	// The service account email address in GCP for this offering
	ServiceAccountEmailAddress *string

	// The GCP workload identity provider id for this offering
	WorkloadIdentityProviderID *string
}

// DefenderForDevOpsAzureDevOpsOffering - The Defender for DevOps for Azure DevOps offering
type DefenderForDevOpsAzureDevOpsOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderForDevOpsAzureDevOpsOffering.
func (d *DefenderForDevOpsAzureDevOpsOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderForDevOpsGitLabOffering - The Defender for DevOps for Gitlab offering
type DefenderForDevOpsGitLabOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderForDevOpsGitLabOffering.
func (d *DefenderForDevOpsGitLabOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderForDevOpsGithubOffering - The Defender for DevOps for Github offering
type DefenderForDevOpsGithubOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderForDevOpsGithubOffering.
func (d *DefenderForDevOpsGithubOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderForServersAwsOffering - The Defender for Servers AWS offering
type DefenderForServersAwsOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// The ARC autoprovisioning configuration
	ArcAutoProvisioning *DefenderForServersAwsOfferingArcAutoProvisioning

	// The Defender for servers connection configuration
	DefenderForServers *DefenderForServersAwsOfferingDefenderForServers

	// The Microsoft Defender for Endpoint autoprovisioning configuration
	MdeAutoProvisioning *DefenderForServersAwsOfferingMdeAutoProvisioning

	// configuration for the servers offering subPlan
	SubPlan *DefenderForServersAwsOfferingSubPlan

	// The Microsoft Defender for Server VM scanning configuration
	VMScanners *DefenderForServersAwsOfferingVMScanners

	// The Vulnerability Assessment autoprovisioning configuration
	VaAutoProvisioning *DefenderForServersAwsOfferingVaAutoProvisioning

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderForServersAwsOffering.
func (d *DefenderForServersAwsOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderForServersAwsOfferingArcAutoProvisioning - The ARC autoprovisioning configuration
type DefenderForServersAwsOfferingArcAutoProvisioning struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// Configuration for servers Arc auto provisioning
	Configuration *DefenderForServersAwsOfferingArcAutoProvisioningConfiguration

	// Is arc auto provisioning enabled
	Enabled *bool
}

// DefenderForServersAwsOfferingArcAutoProvisioningConfiguration - Configuration for servers Arc auto provisioning
type DefenderForServersAwsOfferingArcAutoProvisioningConfiguration struct {
	// Optional Arc private link scope resource id to link the Arc agent
	PrivateLinkScope *string

	// Optional HTTP proxy endpoint to use for the Arc agent
	Proxy *string
}

// DefenderForServersAwsOfferingDefenderForServers - The Defender for servers connection configuration
type DefenderForServersAwsOfferingDefenderForServers struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string
}

// DefenderForServersAwsOfferingMdeAutoProvisioning - The Microsoft Defender for Endpoint autoprovisioning configuration
type DefenderForServersAwsOfferingMdeAutoProvisioning struct {
	// configuration for Microsoft Defender for Endpoint autoprovisioning
	Configuration any

	// Is Microsoft Defender for Endpoint auto provisioning enabled
	Enabled *bool
}

// DefenderForServersAwsOfferingSubPlan - configuration for the servers offering subPlan
type DefenderForServersAwsOfferingSubPlan struct {
	// The available sub plans
	Type *SubPlan
}

// DefenderForServersAwsOfferingVMScanners - The Microsoft Defender for Server VM scanning configuration
type DefenderForServersAwsOfferingVMScanners struct {
	// configuration for Microsoft Defender for Server VM scanning
	Configuration *DefenderForServersAwsOfferingVMScannersConfiguration

	// Is Microsoft Defender for Server VM scanning enabled
	Enabled *bool
}

// DefenderForServersAwsOfferingVMScannersConfiguration - configuration for Microsoft Defender for Server VM scanning
type DefenderForServersAwsOfferingVMScannersConfiguration struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string

	// VM tags that indicates that VM should not be scanned
	ExclusionTags map[string]*string

	// The scanning mode for the VM scan.
	ScanningMode *ScanningMode
}

// DefenderForServersAwsOfferingVaAutoProvisioning - The Vulnerability Assessment autoprovisioning configuration
type DefenderForServersAwsOfferingVaAutoProvisioning struct {
	// configuration for Vulnerability Assessment autoprovisioning
	Configuration *DefenderForServersAwsOfferingVaAutoProvisioningConfiguration

	// Is Vulnerability Assessment auto provisioning enabled
	Enabled *bool
}

// DefenderForServersAwsOfferingVaAutoProvisioningConfiguration - configuration for Vulnerability Assessment autoprovisioning
type DefenderForServersAwsOfferingVaAutoProvisioningConfiguration struct {
	// The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
	Type *Type
}

// DefenderForServersGcpOffering - The Defender for Servers GCP offering configurations
type DefenderForServersGcpOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// The ARC autoprovisioning configuration
	ArcAutoProvisioning *DefenderForServersGcpOfferingArcAutoProvisioning

	// The Defender for servers connection configuration
	DefenderForServers *DefenderForServersGcpOfferingDefenderForServers

	// The Microsoft Defender for Endpoint autoprovisioning configuration
	MdeAutoProvisioning *DefenderForServersGcpOfferingMdeAutoProvisioning

	// configuration for the servers offering subPlan
	SubPlan *DefenderForServersGcpOfferingSubPlan

	// The Microsoft Defender for Server VM scanning configuration
	VMScanners *DefenderForServersGcpOfferingVMScanners

	// The Vulnerability Assessment autoprovisioning configuration
	VaAutoProvisioning *DefenderForServersGcpOfferingVaAutoProvisioning

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type DefenderForServersGcpOffering.
func (d *DefenderForServersGcpOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  d.Description,
		OfferingType: d.OfferingType,
	}
}

// DefenderForServersGcpOfferingArcAutoProvisioning - The ARC autoprovisioning configuration
type DefenderForServersGcpOfferingArcAutoProvisioning struct {
	// Configuration for servers Arc auto provisioning
	Configuration *DefenderForServersGcpOfferingArcAutoProvisioningConfiguration

	// Is arc auto provisioning enabled
	Enabled *bool
}

// DefenderForServersGcpOfferingArcAutoProvisioningConfiguration - Configuration for servers Arc auto provisioning
type DefenderForServersGcpOfferingArcAutoProvisioningConfiguration struct {
	// Optional Arc private link scope resource id to link the Arc agent
	PrivateLinkScope *string

	// Optional HTTP proxy endpoint to use for the Arc agent
	Proxy *string
}

// DefenderForServersGcpOfferingDefenderForServers - The Defender for servers connection configuration
type DefenderForServersGcpOfferingDefenderForServers struct {
	// The service account email address in GCP for this feature
	ServiceAccountEmailAddress *string

	// The workload identity provider id in GCP for this feature
	WorkloadIdentityProviderID *string
}

// DefenderForServersGcpOfferingMdeAutoProvisioning - The Microsoft Defender for Endpoint autoprovisioning configuration
type DefenderForServersGcpOfferingMdeAutoProvisioning struct {
	// configuration for Microsoft Defender for Endpoint autoprovisioning
	Configuration any

	// Is Microsoft Defender for Endpoint auto provisioning enabled
	Enabled *bool
}

// DefenderForServersGcpOfferingSubPlan - configuration for the servers offering subPlan
type DefenderForServersGcpOfferingSubPlan struct {
	// The available sub plans
	Type *SubPlan
}

// DefenderForServersGcpOfferingVMScanners - The Microsoft Defender for Server VM scanning configuration
type DefenderForServersGcpOfferingVMScanners struct {
	// configuration for Microsoft Defender for Server VM scanning
	Configuration *DefenderForServersGcpOfferingVMScannersConfiguration

	// Is Microsoft Defender for Server VM scanning enabled
	Enabled *bool
}

// DefenderForServersGcpOfferingVMScannersConfiguration - configuration for Microsoft Defender for Server VM scanning
type DefenderForServersGcpOfferingVMScannersConfiguration struct {
	// VM tags that indicate that VM should not be scanned
	ExclusionTags map[string]*string

	// The scanning mode for the VM scan.
	ScanningMode *ScanningMode
}

// DefenderForServersGcpOfferingVaAutoProvisioning - The Vulnerability Assessment autoprovisioning configuration
type DefenderForServersGcpOfferingVaAutoProvisioning struct {
	// configuration for Vulnerability Assessment autoprovisioning
	Configuration *DefenderForServersGcpOfferingVaAutoProvisioningConfiguration

	// Is Vulnerability Assessment auto provisioning enabled
	Enabled *bool
}

// DefenderForServersGcpOfferingVaAutoProvisioningConfiguration - configuration for Vulnerability Assessment autoprovisioning
type DefenderForServersGcpOfferingVaAutoProvisioningConfiguration struct {
	// The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
	Type *Type
}

// ETag - Entity tag is used for comparing two or more entities from the same requested resource.
type ETag struct {
	// Entity tag is used for comparing two or more entities from the same requested resource.
	Etag *string
}

// EnvironmentData - The security connector environment data.
type EnvironmentData struct {
	// REQUIRED; The type of the environment data.
	EnvironmentType *EnvironmentType
}

// GetEnvironmentData implements the EnvironmentDataClassification interface for type EnvironmentData.
func (e *EnvironmentData) GetEnvironmentData() *EnvironmentData { return e }

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any

	// READ-ONLY; The additional info type.
	Type *string
}

// GcpOrganizationalData - The gcpOrganization data
type GcpOrganizationalData struct {
	// REQUIRED; The multi cloud account's membership type in the organization
	OrganizationMembershipType *OrganizationMembershipType
}

// GetGcpOrganizationalData implements the GcpOrganizationalDataClassification interface for type GcpOrganizationalData.
func (g *GcpOrganizationalData) GetGcpOrganizationalData() *GcpOrganizationalData { return g }

// GcpOrganizationalDataMember - The gcpOrganization data for the member account
type GcpOrganizationalDataMember struct {
	// REQUIRED; The multi cloud account's membership type in the organization
	OrganizationMembershipType *OrganizationMembershipType

	// The GCP management project number from organizational onboarding
	ManagementProjectNumber *string

	// If the multi cloud account is not of membership type organization, this will be the ID of the project's parent
	ParentHierarchyID *string
}

// GetGcpOrganizationalData implements the GcpOrganizationalDataClassification interface for type GcpOrganizationalDataMember.
func (g *GcpOrganizationalDataMember) GetGcpOrganizationalData() *GcpOrganizationalData {
	return &GcpOrganizationalData{
		OrganizationMembershipType: g.OrganizationMembershipType,
	}
}

// GcpOrganizationalDataOrganization - The gcpOrganization data for the parent account
type GcpOrganizationalDataOrganization struct {
	// REQUIRED; The multi cloud account's membership type in the organization
	OrganizationMembershipType *OrganizationMembershipType

	// If the multi cloud account is of membership type organization, list of accounts excluded from offering
	ExcludedProjectNumbers []*string

	// The service account email address which represents the organization level permissions container.
	ServiceAccountEmailAddress *string

	// The GCP workload identity provider id which represents the permissions required to auto provision security connectors
	WorkloadIdentityProviderID *string

	// READ-ONLY; GCP organization name
	OrganizationName *string
}

// GetGcpOrganizationalData implements the GcpOrganizationalDataClassification interface for type GcpOrganizationalDataOrganization.
func (g *GcpOrganizationalDataOrganization) GetGcpOrganizationalData() *GcpOrganizationalData {
	return &GcpOrganizationalData{
		OrganizationMembershipType: g.OrganizationMembershipType,
	}
}

// GcpProjectDetails - The details about the project represented by the security connector
type GcpProjectDetails struct {
	// The GCP Project id
	ProjectID *string

	// The unique GCP Project number
	ProjectNumber *string

	// READ-ONLY; GCP project name
	ProjectName *string

	// READ-ONLY; The GCP workload identity federation pool id
	WorkloadIdentityPoolID *string
}

// GcpProjectEnvironmentData - The GCP project connector environment data
type GcpProjectEnvironmentData struct {
	// REQUIRED; The type of the environment data.
	EnvironmentType *EnvironmentType

	// The Gcp project's organizational data
	OrganizationalData GcpOrganizationalDataClassification

	// The Gcp project's details
	ProjectDetails *GcpProjectDetails

	// Scan interval in hours (value should be between 1-hour to 24-hours)
	ScanInterval *int64
}

// GetEnvironmentData implements the EnvironmentDataClassification interface for type GcpProjectEnvironmentData.
func (g *GcpProjectEnvironmentData) GetEnvironmentData() *EnvironmentData {
	return &EnvironmentData{
		EnvironmentType: g.EnvironmentType,
	}
}

// GithubScopeEnvironmentData - The github scope connector's environment data
type GithubScopeEnvironmentData struct {
	// REQUIRED; The type of the environment data.
	EnvironmentType *EnvironmentType
}

// GetEnvironmentData implements the EnvironmentDataClassification interface for type GithubScopeEnvironmentData.
func (g *GithubScopeEnvironmentData) GetEnvironmentData() *EnvironmentData {
	return &EnvironmentData{
		EnvironmentType: g.EnvironmentType,
	}
}

// GitlabScopeEnvironmentData - The GitLab scope connector's environment data
type GitlabScopeEnvironmentData struct {
	// REQUIRED; The type of the environment data.
	EnvironmentType *EnvironmentType
}

// GetEnvironmentData implements the EnvironmentDataClassification interface for type GitlabScopeEnvironmentData.
func (g *GitlabScopeEnvironmentData) GetEnvironmentData() *EnvironmentData {
	return &EnvironmentData{
		EnvironmentType: g.EnvironmentType,
	}
}

// InformationProtectionAwsOffering - The information protection for AWS offering
type InformationProtectionAwsOffering struct {
	// REQUIRED; The type of the security offering.
	OfferingType *OfferingType

	// The native cloud connection configuration
	InformationProtection *InformationProtectionAwsOfferingInformationProtection

	// READ-ONLY; The offering description.
	Description *string
}

// GetCloudOffering implements the CloudOfferingClassification interface for type InformationProtectionAwsOffering.
func (i *InformationProtectionAwsOffering) GetCloudOffering() *CloudOffering {
	return &CloudOffering{
		Description:  i.Description,
		OfferingType: i.OfferingType,
	}
}

// InformationProtectionAwsOfferingInformationProtection - The native cloud connection configuration
type InformationProtectionAwsOfferingInformationProtection struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string
}

// Kind - Describes an Azure resource with kind
type Kind struct {
	// Kind of the resource
	Kind *string
}

// Resource - Describes an Azure resource.
type Resource struct {
	// READ-ONLY; Resource Id
	ID *string

	// READ-ONLY; Resource name
	Name *string

	// READ-ONLY; Resource type
	Type *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// Tags - A list of key value pairs that describe the resource.
type Tags struct {
	// A list of key value pairs that describe the resource.
	Tags map[string]*string
}

// TrackedResource - Describes an Azure tracked resource.
type TrackedResource struct {
	// Entity tag is used for comparing two or more entities from the same requested resource.
	Etag *string

	// Kind of the resource
	Kind *string

	// Location where the resource is stored
	Location *string

	// A list of key value pairs that describe the resource.
	Tags map[string]*string

	// READ-ONLY; Resource Id
	ID *string

	// READ-ONLY; Resource name
	Name *string

	// READ-ONLY; Resource type
	Type *string
}
