//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsecurity

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/security/armsecurity"
	moduleVersion = "v0.13.0"
)

// CloudName - The multi cloud resource's cloud name.
type CloudName string

const (
	CloudNameAWS         CloudName = "AWS"
	CloudNameAzure       CloudName = "Azure"
	CloudNameAzureDevOps CloudName = "AzureDevOps"
	CloudNameGCP         CloudName = "GCP"
	CloudNameGitLab      CloudName = "GitLab"
	CloudNameGithub      CloudName = "Github"
)

// PossibleCloudNameValues returns the possible values for the CloudName const type.
func PossibleCloudNameValues() []CloudName {
	return []CloudName{
		CloudNameAWS,
		CloudNameAzure,
		CloudNameAzureDevOps,
		CloudNameGCP,
		CloudNameGitLab,
		CloudNameGithub,
	}
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// EnvironmentType - The type of the environment data.
type EnvironmentType string

const (
	EnvironmentTypeAwsAccount       EnvironmentType = "AwsAccount"
	EnvironmentTypeAzureDevOpsScope EnvironmentType = "AzureDevOpsScope"
	EnvironmentTypeGcpProject       EnvironmentType = "GcpProject"
	EnvironmentTypeGithubScope      EnvironmentType = "GithubScope"
	EnvironmentTypeGitlabScope      EnvironmentType = "GitlabScope"
)

// PossibleEnvironmentTypeValues returns the possible values for the EnvironmentType const type.
func PossibleEnvironmentTypeValues() []EnvironmentType {
	return []EnvironmentType{
		EnvironmentTypeAwsAccount,
		EnvironmentTypeAzureDevOpsScope,
		EnvironmentTypeGcpProject,
		EnvironmentTypeGithubScope,
		EnvironmentTypeGitlabScope,
	}
}

// OfferingType - The type of the security offering.
type OfferingType string

const (
	OfferingTypeCspmMonitorAws               OfferingType = "CspmMonitorAws"
	OfferingTypeCspmMonitorAzureDevOps       OfferingType = "CspmMonitorAzureDevOps"
	OfferingTypeCspmMonitorGcp               OfferingType = "CspmMonitorGcp"
	OfferingTypeCspmMonitorGitLab            OfferingType = "CspmMonitorGitLab"
	OfferingTypeCspmMonitorGithub            OfferingType = "CspmMonitorGithub"
	OfferingTypeDefenderCspmAws              OfferingType = "DefenderCspmAws"
	OfferingTypeDefenderCspmGcp              OfferingType = "DefenderCspmGcp"
	OfferingTypeDefenderForContainersAws     OfferingType = "DefenderForContainersAws"
	OfferingTypeDefenderForContainersGcp     OfferingType = "DefenderForContainersGcp"
	OfferingTypeDefenderForDatabasesAws      OfferingType = "DefenderForDatabasesAws"
	OfferingTypeDefenderForDatabasesGcp      OfferingType = "DefenderForDatabasesGcp"
	OfferingTypeDefenderForDevOpsAzureDevOps OfferingType = "DefenderForDevOpsAzureDevOps"
	OfferingTypeDefenderForDevOpsGitLab      OfferingType = "DefenderForDevOpsGitLab"
	OfferingTypeDefenderForDevOpsGithub      OfferingType = "DefenderForDevOpsGithub"
	OfferingTypeDefenderForServersAws        OfferingType = "DefenderForServersAws"
	OfferingTypeDefenderForServersGcp        OfferingType = "DefenderForServersGcp"
	OfferingTypeInformationProtectionAws     OfferingType = "InformationProtectionAws"
)

// PossibleOfferingTypeValues returns the possible values for the OfferingType const type.
func PossibleOfferingTypeValues() []OfferingType {
	return []OfferingType{
		OfferingTypeCspmMonitorAws,
		OfferingTypeCspmMonitorAzureDevOps,
		OfferingTypeCspmMonitorGcp,
		OfferingTypeCspmMonitorGitLab,
		OfferingTypeCspmMonitorGithub,
		OfferingTypeDefenderCspmAws,
		OfferingTypeDefenderCspmGcp,
		OfferingTypeDefenderForContainersAws,
		OfferingTypeDefenderForContainersGcp,
		OfferingTypeDefenderForDatabasesAws,
		OfferingTypeDefenderForDatabasesGcp,
		OfferingTypeDefenderForDevOpsAzureDevOps,
		OfferingTypeDefenderForDevOpsGitLab,
		OfferingTypeDefenderForDevOpsGithub,
		OfferingTypeDefenderForServersAws,
		OfferingTypeDefenderForServersGcp,
		OfferingTypeInformationProtectionAws,
	}
}

// OrganizationMembershipType - The multi cloud account's membership type in the organization
type OrganizationMembershipType string

const (
	OrganizationMembershipTypeMember       OrganizationMembershipType = "Member"
	OrganizationMembershipTypeOrganization OrganizationMembershipType = "Organization"
)

// PossibleOrganizationMembershipTypeValues returns the possible values for the OrganizationMembershipType const type.
func PossibleOrganizationMembershipTypeValues() []OrganizationMembershipType {
	return []OrganizationMembershipType{
		OrganizationMembershipTypeMember,
		OrganizationMembershipTypeOrganization,
	}
}

// ScanningMode - The scanning mode for the VM scan.
type ScanningMode string

const (
	ScanningModeDefault ScanningMode = "Default"
)

// PossibleScanningModeValues returns the possible values for the ScanningMode const type.
func PossibleScanningModeValues() []ScanningMode {
	return []ScanningMode{
		ScanningModeDefault,
	}
}

// SubPlan - The available sub plans
type SubPlan string

const (
	SubPlanP1 SubPlan = "P1"
	SubPlanP2 SubPlan = "P2"
)

// PossibleSubPlanValues returns the possible values for the SubPlan const type.
func PossibleSubPlanValues() []SubPlan {
	return []SubPlan{
		SubPlanP1,
		SubPlanP2,
	}
}

// Type - The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
type Type string

const (
	TypeQualys Type = "Qualys"
	TypeTVM    Type = "TVM"
)

// PossibleTypeValues returns the possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{
		TypeQualys,
		TypeTVM,
	}
}
