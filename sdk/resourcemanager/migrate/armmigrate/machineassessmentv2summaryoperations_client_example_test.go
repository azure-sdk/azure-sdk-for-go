// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armmigrate_test

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/migrate/armmigrate/v2"
	"log"
)

// Generated from example definition: 2024-03-03-preview/MachineAssessmentV2SummaryOperations_Get_MaximumSet_Gen.json
func ExampleMachineAssessmentV2SummaryOperationsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := armmigrate.NewClientFactory("AEDD0824-BBE9-4E7C-8909-F46C68EA6BB9", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewMachineAssessmentV2SummaryOperationsClient().Get(ctx, "rgmachineAssessments", "contosoProject", "assessmentName", "PaaSPreferred", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res = armmigrate.MachineAssessmentV2SummaryOperationsClientGetResponse{
	// 	MachineAssessmentV2Summary: &armmigrate.MachineAssessmentV2Summary{
	// 		Properties: &armmigrate.SummaryProperties{
	// 			SummaryType: to.Ptr(armmigrate.SummaryTypeUnknown),
	// 			SummaryName: to.Ptr("tuwdzpdatrpmmmbaydfthidla"),
	// 			Sources: []*armmigrate.SourceDetails{
	// 				{
	// 					SourceName: to.Ptr(armmigrate.AssessmentSourceUnknown),
	// 					SourceType: to.Ptr(armmigrate.WorkloadTypeUnknown),
	// 					Platform: to.Ptr(armmigrate.MigrationPlatformUnknown),
	// 					Count: to.Ptr[int32](2),
	// 				},
	// 			},
	// 			Targets: []*armmigrate.TargetDetails{
	// 				{
	// 					TargetName: to.Ptr(armmigrate.AzureTargetUnknown),
	// 					TargetType: to.Ptr(armmigrate.WorkloadTypeUnknown),
	// 					Platform: to.Ptr(armmigrate.MigrationPlatformUnknown),
	// 					Count: to.Ptr[int32](15),
	// 				},
	// 			},
	// 			TargetSourceMapping: []*armmigrate.TargetSourcePair{
	// 				{
	// 					SourceRef: to.Ptr(armmigrate.AssessmentSourceUnknown),
	// 					TargetRef: to.Ptr(armmigrate.AzureTargetUnknown),
	// 					SourceCount: to.Ptr[int32](25),
	// 					TargetCount: to.Ptr[int32](17),
	// 					MigrationDetails: &armmigrate.MigrationDetails{
	// 						ReadinessSummary: []*armmigrate.NameValuePairCloudSuitabilityCommon{
	// 							{
	// 								Name: to.Ptr(armmigrate.CloudSuitabilityCommonUnknown),
	// 								Value: to.Ptr[int32](12),
	// 							},
	// 						},
	// 						MigrationType: to.Ptr(armmigrate.MigrationTypeUnknown),
	// 					},
	// 					ManagementDetails: []*armmigrate.ManagementDetails{
	// 						{
	// 							Name: to.Ptr(armmigrate.AzureManagementOfferingTypeNo),
	// 							ReadinessSummary: []*armmigrate.NameValuePairCloudSuitabilityCommon{
	// 								{
	// 									Name: to.Ptr(armmigrate.CloudSuitabilityCommonUnknown),
	// 									Value: to.Ptr[int32](30),
	// 								},
	// 							},
	// 						},
	// 					},
	// 					CostDetails: []*armmigrate.CostDetailsCommon{
	// 						{
	// 							CostDetail: []*armmigrate.NameValuePairCostType{
	// 								{
	// 									Name: to.Ptr(armmigrate.CostTypeMonthlyStorageCost),
	// 									Value: to.Ptr[float32](16),
	// 								},
	// 							},
	// 							SavingOptions: to.Ptr(armmigrate.SavingsOptionsNone),
	// 						},
	// 					},
	// 					SavingsDetails: []*armmigrate.SavingsDetailsCommon{
	// 						{
	// 							SavingsDetail: []*armmigrate.NameValuePairSavingsType{
	// 								{
	// 									Name: to.Ptr(armmigrate.SavingsTypeMonthlyAzureHybridCostSavings),
	// 									Value: to.Ptr[float32](5),
	// 								},
	// 							},
	// 							SavingOptions: to.Ptr(armmigrate.SavingsOptionsNone),
	// 						},
	// 					},
	// 					ConfidenceScore: to.Ptr[float64](28),
	// 				},
	// 			},
	// 			CostComponents: []*armmigrate.CostDetailsCommon{
	// 				{
	// 					CostDetail: []*armmigrate.NameValuePairCostType{
	// 						{
	// 							Name: to.Ptr(armmigrate.CostTypeMonthlyStorageCost),
	// 							Value: to.Ptr[float32](16),
	// 						},
	// 					},
	// 					SavingOptions: to.Ptr(armmigrate.SavingsOptionsNone),
	// 				},
	// 			},
	// 			SavingsComponents: []*armmigrate.SavingsDetailsCommon{
	// 				{
	// 					SavingsDetail: []*armmigrate.NameValuePairSavingsType{
	// 						{
	// 							Name: to.Ptr(armmigrate.SavingsTypeMonthlyAzureHybridCostSavings),
	// 							Value: to.Ptr[float32](5),
	// 						},
	// 					},
	// 					SavingOptions: to.Ptr(armmigrate.SavingsOptionsNone),
	// 				},
	// 			},
	// 		},
	// 		ID: to.Ptr("/subscriptions/AEDD0824-BBE9-4E7C-8909-F46C68EA6BB9/resourceGroups/rgmachineAssessments/providers/Microsoft.Migrate/assessmentProjects/contosoProject/assessments/assessmentName/summaries/PaaSPreferred"),
	// 		Name: to.Ptr("PaaSPreferred"),
	// 		Type: to.Ptr("Microsoft.Migrate/assessmentProjects/assessments/summaries"),
	// 		SystemData: &armmigrate.SystemData{
	// 			CreatedBy: to.Ptr("drvgxn"),
	// 			CreatedByType: to.Ptr(armmigrate.CreatedByTypeUser),
	// 			CreatedAt: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-11-14T10:38:25.000Z"); return t}()),
	// 			LastModifiedBy: to.Ptr("qfyznkjasypfwyfmmkc"),
	// 			LastModifiedByType: to.Ptr(armmigrate.CreatedByTypeUser),
	// 			LastModifiedAt: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-11-14T10:38:25.000Z"); return t}()),
	// 		},
	// 	},
	// }
}

// Generated from example definition: 2024-03-03-preview/MachineAssessmentV2SummaryOperations_ListByParent_MaximumSet_Gen.json
func ExampleMachineAssessmentV2SummaryOperationsClient_NewListByParentPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := armmigrate.NewClientFactory("AEDD0824-BBE9-4E7C-8909-F46C68EA6BB9", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	pager := clientFactory.NewMachineAssessmentV2SummaryOperationsClient().NewListByParentPager("rgmachineAssessments", "contosoProject", "assessmentName", nil)
	for pager.More() {
		page, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range page.Value {
			// You could use page here. We use blank identifier for just demo purposes.
			_ = v
		}
		// If the HTTP response code is 200 as defined in example definition, your page structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
		// page = armmigrate.MachineAssessmentV2SummaryOperationsClientListByParentResponse{
		// 	MachineAssessmentV2SummaryListResult: armmigrate.MachineAssessmentV2SummaryListResult{
		// 		Value: []*armmigrate.MachineAssessmentV2Summary{
		// 			{
		// 				Properties: &armmigrate.SummaryProperties{
		// 					SummaryType: to.Ptr(armmigrate.SummaryTypeUnknown),
		// 					SummaryName: to.Ptr("tuwdzpdatrpmmmbaydfthidla"),
		// 					Sources: []*armmigrate.SourceDetails{
		// 						{
		// 							SourceName: to.Ptr(armmigrate.AssessmentSourceUnknown),
		// 							SourceType: to.Ptr(armmigrate.WorkloadTypeUnknown),
		// 							Platform: to.Ptr(armmigrate.MigrationPlatformUnknown),
		// 							Count: to.Ptr[int32](2),
		// 						},
		// 					},
		// 					Targets: []*armmigrate.TargetDetails{
		// 						{
		// 							TargetName: to.Ptr(armmigrate.AzureTargetUnknown),
		// 							TargetType: to.Ptr(armmigrate.WorkloadTypeUnknown),
		// 							Platform: to.Ptr(armmigrate.MigrationPlatformUnknown),
		// 							Count: to.Ptr[int32](15),
		// 						},
		// 					},
		// 					TargetSourceMapping: []*armmigrate.TargetSourcePair{
		// 						{
		// 							SourceRef: to.Ptr(armmigrate.AssessmentSourceUnknown),
		// 							TargetRef: to.Ptr(armmigrate.AzureTargetUnknown),
		// 							SourceCount: to.Ptr[int32](25),
		// 							TargetCount: to.Ptr[int32](17),
		// 							MigrationDetails: &armmigrate.MigrationDetails{
		// 								ReadinessSummary: []*armmigrate.NameValuePairCloudSuitabilityCommon{
		// 									{
		// 										Name: to.Ptr(armmigrate.CloudSuitabilityCommonUnknown),
		// 										Value: to.Ptr[int32](12),
		// 									},
		// 								},
		// 								MigrationType: to.Ptr(armmigrate.MigrationTypeUnknown),
		// 							},
		// 							ManagementDetails: []*armmigrate.ManagementDetails{
		// 								{
		// 									Name: to.Ptr(armmigrate.AzureManagementOfferingTypeNo),
		// 									ReadinessSummary: []*armmigrate.NameValuePairCloudSuitabilityCommon{
		// 										{
		// 											Name: to.Ptr(armmigrate.CloudSuitabilityCommonUnknown),
		// 											Value: to.Ptr[int32](30),
		// 										},
		// 									},
		// 								},
		// 							},
		// 							CostDetails: []*armmigrate.CostDetailsCommon{
		// 								{
		// 									CostDetail: []*armmigrate.NameValuePairCostType{
		// 										{
		// 											Name: to.Ptr(armmigrate.CostTypeMonthlyStorageCost),
		// 											Value: to.Ptr[float32](16),
		// 										},
		// 									},
		// 									SavingOptions: to.Ptr(armmigrate.SavingsOptionsNone),
		// 								},
		// 							},
		// 							SavingsDetails: []*armmigrate.SavingsDetailsCommon{
		// 								{
		// 									SavingsDetail: []*armmigrate.NameValuePairSavingsType{
		// 										{
		// 											Name: to.Ptr(armmigrate.SavingsTypeMonthlyAzureHybridCostSavings),
		// 											Value: to.Ptr[float32](5),
		// 										},
		// 									},
		// 									SavingOptions: to.Ptr(armmigrate.SavingsOptionsNone),
		// 								},
		// 							},
		// 							ConfidenceScore: to.Ptr[float64](28),
		// 						},
		// 					},
		// 					CostComponents: []*armmigrate.CostDetailsCommon{
		// 						{
		// 							CostDetail: []*armmigrate.NameValuePairCostType{
		// 								{
		// 									Name: to.Ptr(armmigrate.CostTypeMonthlyStorageCost),
		// 									Value: to.Ptr[float32](16),
		// 								},
		// 							},
		// 							SavingOptions: to.Ptr(armmigrate.SavingsOptionsNone),
		// 						},
		// 					},
		// 					SavingsComponents: []*armmigrate.SavingsDetailsCommon{
		// 						{
		// 							SavingsDetail: []*armmigrate.NameValuePairSavingsType{
		// 								{
		// 									Name: to.Ptr(armmigrate.SavingsTypeMonthlyAzureHybridCostSavings),
		// 									Value: to.Ptr[float32](5),
		// 								},
		// 							},
		// 							SavingOptions: to.Ptr(armmigrate.SavingsOptionsNone),
		// 						},
		// 					},
		// 				},
		// 				ID: to.Ptr("/subscriptions/AEDD0824-BBE9-4E7C-8909-F46C68EA6BB9/resourceGroups/rgmachineAssessments/providers/Microsoft.Migrate/assessmentProjects/contosoProject/assessments/assessmentName/summaries/PaaSPreferred"),
		// 				Name: to.Ptr("PaaSPreferred"),
		// 				Type: to.Ptr("Microsoft.Migrate/assessmentProjects/assessments/summaries"),
		// 				SystemData: &armmigrate.SystemData{
		// 					CreatedBy: to.Ptr("drvgxn"),
		// 					CreatedByType: to.Ptr(armmigrate.CreatedByTypeUser),
		// 					CreatedAt: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-11-14T10:38:25.000Z"); return t}()),
		// 					LastModifiedBy: to.Ptr("qfyznkjasypfwyfmmkc"),
		// 					LastModifiedByType: to.Ptr(armmigrate.CreatedByTypeUser),
		// 					LastModifiedAt: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-11-14T10:38:25.000Z"); return t}()),
		// 				},
		// 			},
		// 		},
		// 		NextLink: to.Ptr("https://microsoft.com/a"),
		// 	},
		// }
	}
}
