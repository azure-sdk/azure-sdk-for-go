//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armmanagednetworkfabric

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID string
	internal       *arm.Client
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - The ID of the target subscription. The value must be an UUID.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	internal, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID: subscriptionID,
		internal:       internal,
	}, nil
}

// NewAccessControlListsClient creates a new instance of AccessControlListsClient.
func (c *ClientFactory) NewAccessControlListsClient() *AccessControlListsClient {
	return &AccessControlListsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewExternalNetworksClient creates a new instance of ExternalNetworksClient.
func (c *ClientFactory) NewExternalNetworksClient() *ExternalNetworksClient {
	return &ExternalNetworksClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewIPCommunitiesClient creates a new instance of IPCommunitiesClient.
func (c *ClientFactory) NewIPCommunitiesClient() *IPCommunitiesClient {
	return &IPCommunitiesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewIPExtendedCommunitiesClient creates a new instance of IPExtendedCommunitiesClient.
func (c *ClientFactory) NewIPExtendedCommunitiesClient() *IPExtendedCommunitiesClient {
	return &IPExtendedCommunitiesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewIPPrefixesClient creates a new instance of IPPrefixesClient.
func (c *ClientFactory) NewIPPrefixesClient() *IPPrefixesClient {
	return &IPPrefixesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewInternalNetworksClient creates a new instance of InternalNetworksClient.
func (c *ClientFactory) NewInternalNetworksClient() *InternalNetworksClient {
	return &InternalNetworksClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewInternetGatewayRulesClient creates a new instance of InternetGatewayRulesClient.
func (c *ClientFactory) NewInternetGatewayRulesClient() *InternetGatewayRulesClient {
	return &InternetGatewayRulesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewInternetGatewaysClient creates a new instance of InternetGatewaysClient.
func (c *ClientFactory) NewInternetGatewaysClient() *InternetGatewaysClient {
	return &InternetGatewaysClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewL2IsolationDomainsClient creates a new instance of L2IsolationDomainsClient.
func (c *ClientFactory) NewL2IsolationDomainsClient() *L2IsolationDomainsClient {
	return &L2IsolationDomainsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewL3IsolationDomainsClient creates a new instance of L3IsolationDomainsClient.
func (c *ClientFactory) NewL3IsolationDomainsClient() *L3IsolationDomainsClient {
	return &L3IsolationDomainsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNeighborGroupsClient creates a new instance of NeighborGroupsClient.
func (c *ClientFactory) NewNeighborGroupsClient() *NeighborGroupsClient {
	return &NeighborGroupsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkDeviceSKUsClient creates a new instance of NetworkDeviceSKUsClient.
func (c *ClientFactory) NewNetworkDeviceSKUsClient() *NetworkDeviceSKUsClient {
	return &NetworkDeviceSKUsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkDevicesClient creates a new instance of NetworkDevicesClient.
func (c *ClientFactory) NewNetworkDevicesClient() *NetworkDevicesClient {
	return &NetworkDevicesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkFabricControllersClient creates a new instance of NetworkFabricControllersClient.
func (c *ClientFactory) NewNetworkFabricControllersClient() *NetworkFabricControllersClient {
	return &NetworkFabricControllersClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkFabricSKUsClient creates a new instance of NetworkFabricSKUsClient.
func (c *ClientFactory) NewNetworkFabricSKUsClient() *NetworkFabricSKUsClient {
	return &NetworkFabricSKUsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkFabricsClient creates a new instance of NetworkFabricsClient.
func (c *ClientFactory) NewNetworkFabricsClient() *NetworkFabricsClient {
	return &NetworkFabricsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkInterfacesClient creates a new instance of NetworkInterfacesClient.
func (c *ClientFactory) NewNetworkInterfacesClient() *NetworkInterfacesClient {
	return &NetworkInterfacesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkPacketBrokersClient creates a new instance of NetworkPacketBrokersClient.
func (c *ClientFactory) NewNetworkPacketBrokersClient() *NetworkPacketBrokersClient {
	return &NetworkPacketBrokersClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkRacksClient creates a new instance of NetworkRacksClient.
func (c *ClientFactory) NewNetworkRacksClient() *NetworkRacksClient {
	return &NetworkRacksClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkTapRulesClient creates a new instance of NetworkTapRulesClient.
func (c *ClientFactory) NewNetworkTapRulesClient() *NetworkTapRulesClient {
	return &NetworkTapRulesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkTapsClient creates a new instance of NetworkTapsClient.
func (c *ClientFactory) NewNetworkTapsClient() *NetworkTapsClient {
	return &NetworkTapsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkToNetworkInterconnectsClient creates a new instance of NetworkToNetworkInterconnectsClient.
func (c *ClientFactory) NewNetworkToNetworkInterconnectsClient() *NetworkToNetworkInterconnectsClient {
	return &NetworkToNetworkInterconnectsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewOperationsClient creates a new instance of OperationsClient.
func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	return &OperationsClient{
		internal: c.internal,
	}
}

// NewRoutePoliciesClient creates a new instance of RoutePoliciesClient.
func (c *ClientFactory) NewRoutePoliciesClient() *RoutePoliciesClient {
	return &RoutePoliciesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}
