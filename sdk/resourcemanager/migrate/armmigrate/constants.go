// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armmigrate

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/migrate/armmigrate"
	moduleVersion = "v2.0.0-beta.1"
)

// ActionType - Extensible enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	// ActionTypeInternal - Actions are for internal-only APIs.
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// AssessedMachineType - Assessed machine type
type AssessedMachineType string

const (
	// AssessedMachineTypeAssessedMachine - AssessedMachine - Assessed machine type
	AssessedMachineTypeAssessedMachine AssessedMachineType = "AssessedMachine"
	// AssessedMachineTypeAvsAssessedMachine - AvsAssessedMachine - Assessed machine type
	AssessedMachineTypeAvsAssessedMachine AssessedMachineType = "AvsAssessedMachine"
	// AssessedMachineTypeSQLAssessedMachine - SqlAssessedMachine - Assessed machine type
	AssessedMachineTypeSQLAssessedMachine AssessedMachineType = "SqlAssessedMachine"
	// AssessedMachineTypeUnknown - Unknown - Assessed machine type
	AssessedMachineTypeUnknown AssessedMachineType = "Unknown"
)

// PossibleAssessedMachineTypeValues returns the possible values for the AssessedMachineType const type.
func PossibleAssessedMachineTypeValues() []AssessedMachineType {
	return []AssessedMachineType{
		AssessedMachineTypeAssessedMachine,
		AssessedMachineTypeAvsAssessedMachine,
		AssessedMachineTypeSQLAssessedMachine,
		AssessedMachineTypeUnknown,
	}
}

// AssessmentSizingCriterion - Assessment Sizing Criteria.
type AssessmentSizingCriterion string

const (
	// AssessmentSizingCriterionAsOnPremises - As On Premises or Static Data based Sizing.
	AssessmentSizingCriterionAsOnPremises AssessmentSizingCriterion = "AsOnPremises"
	// AssessmentSizingCriterionPerformanceBased - Performance Data based Sizing.
	AssessmentSizingCriterionPerformanceBased AssessmentSizingCriterion = "PerformanceBased"
)

// PossibleAssessmentSizingCriterionValues returns the possible values for the AssessmentSizingCriterion const type.
func PossibleAssessmentSizingCriterionValues() []AssessmentSizingCriterion {
	return []AssessmentSizingCriterion{
		AssessmentSizingCriterionAsOnPremises,
		AssessmentSizingCriterionPerformanceBased,
	}
}

// AssessmentSource - Assessment Source
type AssessmentSource string

const (
	// AssessmentSourceIIS - IIS - Assessment Source
	AssessmentSourceIIS AssessmentSource = "IIS"
	// AssessmentSourceMachine - Machine - Assessment Source
	AssessmentSourceMachine AssessmentSource = "Machine"
	// AssessmentSourceMySQLServer - MySQLServer - Assessment Source
	AssessmentSourceMySQLServer AssessmentSource = "MySQLServer"
	// AssessmentSourceOracleDatabase - OracleDatabase - Assessment Source
	AssessmentSourceOracleDatabase AssessmentSource = "OracleDatabase"
	// AssessmentSourceOracleServer - OracleServer - Assessment Source
	AssessmentSourceOracleServer AssessmentSource = "OracleServer"
	// AssessmentSourceSAPInstance - SAPInstance - Assessment Source
	AssessmentSourceSAPInstance AssessmentSource = "SAPInstance"
	// AssessmentSourceSQLDatabase - SqlDatabase - Assessment Source
	AssessmentSourceSQLDatabase AssessmentSource = "SqlDatabase"
	// AssessmentSourceSQLInstance - SqlInstance - Assessment Source
	AssessmentSourceSQLInstance AssessmentSource = "SqlInstance"
	// AssessmentSourceSpringbootApplication - SpringbootApplication - Assessment Source
	AssessmentSourceSpringbootApplication AssessmentSource = "SpringbootApplication"
	// AssessmentSourceTomCat - TomCat - Assessment Source
	AssessmentSourceTomCat AssessmentSource = "TomCat"
	// AssessmentSourceUnknown - Unknown - Assessment Source
	AssessmentSourceUnknown AssessmentSource = "Unknown"
	// AssessmentSourceWebApps - WebApps - Assessment Source
	AssessmentSourceWebApps AssessmentSource = "WebApps"
)

// PossibleAssessmentSourceValues returns the possible values for the AssessmentSource const type.
func PossibleAssessmentSourceValues() []AssessmentSource {
	return []AssessmentSource{
		AssessmentSourceIIS,
		AssessmentSourceMachine,
		AssessmentSourceMySQLServer,
		AssessmentSourceOracleDatabase,
		AssessmentSourceOracleServer,
		AssessmentSourceSAPInstance,
		AssessmentSourceSQLDatabase,
		AssessmentSourceSQLInstance,
		AssessmentSourceSpringbootApplication,
		AssessmentSourceTomCat,
		AssessmentSourceUnknown,
		AssessmentSourceWebApps,
	}
}

// AssessmentStatus - Assessment Status.
type AssessmentStatus string

const (
	// AssessmentStatusCompleted - Assessment is Completed or Ready.
	AssessmentStatusCompleted AssessmentStatus = "Completed"
	// AssessmentStatusCreated - Assessment is Created.
	AssessmentStatusCreated AssessmentStatus = "Created"
	// AssessmentStatusDeleted - Assessment is Deleted.
	AssessmentStatusDeleted AssessmentStatus = "Deleted"
	// AssessmentStatusFailed - Assessment has Failed.
	AssessmentStatusFailed AssessmentStatus = "Failed"
	// AssessmentStatusInvalid - Assessment is Failed i.e. it is now invalid.
	AssessmentStatusInvalid AssessmentStatus = "Invalid"
	// AssessmentStatusOutDated - Assessment is Out Dated.
	AssessmentStatusOutDated AssessmentStatus = "OutDated"
	// AssessmentStatusOutOfSync - Assessment is Out of Sync.
	AssessmentStatusOutOfSync AssessmentStatus = "OutOfSync"
	// AssessmentStatusRunning - Assessment is currently running.
	AssessmentStatusRunning AssessmentStatus = "Running"
	// AssessmentStatusUpdated - Assessment is Updated.
	AssessmentStatusUpdated AssessmentStatus = "Updated"
)

// PossibleAssessmentStatusValues returns the possible values for the AssessmentStatus const type.
func PossibleAssessmentStatusValues() []AssessmentStatus {
	return []AssessmentStatus{
		AssessmentStatusCompleted,
		AssessmentStatusCreated,
		AssessmentStatusDeleted,
		AssessmentStatusFailed,
		AssessmentStatusInvalid,
		AssessmentStatusOutDated,
		AssessmentStatusOutOfSync,
		AssessmentStatusRunning,
		AssessmentStatusUpdated,
	}
}

// AzureCurrency - Currency for Azure.
type AzureCurrency string

const (
	// AzureCurrencyARS - ARS Currency for Azure
	AzureCurrencyARS AzureCurrency = "ARS"
	// AzureCurrencyAUD - AUD Currency for Azure
	AzureCurrencyAUD AzureCurrency = "AUD"
	// AzureCurrencyBRL - BRL Currency for Azure
	AzureCurrencyBRL AzureCurrency = "BRL"
	// AzureCurrencyCAD - CAD Currency for Azure
	AzureCurrencyCAD AzureCurrency = "CAD"
	// AzureCurrencyCHF - CHF Currency for Azure
	AzureCurrencyCHF AzureCurrency = "CHF"
	// AzureCurrencyCNY - CNY Currency for Azure
	AzureCurrencyCNY AzureCurrency = "CNY"
	// AzureCurrencyDKK - DKK Currency for Azure
	AzureCurrencyDKK AzureCurrency = "DKK"
	// AzureCurrencyEUR - EUR Currency for Azure
	AzureCurrencyEUR AzureCurrency = "EUR"
	// AzureCurrencyGBP - GBP Currency for Azure
	AzureCurrencyGBP AzureCurrency = "GBP"
	// AzureCurrencyHKD - HKD Currency for Azure
	AzureCurrencyHKD AzureCurrency = "HKD"
	// AzureCurrencyIDR - IDR Currency for Azure
	AzureCurrencyIDR AzureCurrency = "IDR"
	// AzureCurrencyINR - INR Currency for Azure
	AzureCurrencyINR AzureCurrency = "INR"
	// AzureCurrencyJPY - JPY Currency for Azure
	AzureCurrencyJPY AzureCurrency = "JPY"
	// AzureCurrencyKRW - KRW Currency for Azure
	AzureCurrencyKRW AzureCurrency = "KRW"
	// AzureCurrencyMXN - MXN Currency for Azure
	AzureCurrencyMXN AzureCurrency = "MXN"
	// AzureCurrencyMYR - MYR Currency for Azure
	AzureCurrencyMYR AzureCurrency = "MYR"
	// AzureCurrencyNOK - NOK Currency for Azure
	AzureCurrencyNOK AzureCurrency = "NOK"
	// AzureCurrencyNZD - NZD Currency for Azure
	AzureCurrencyNZD AzureCurrency = "NZD"
	// AzureCurrencyRUB - RUB Currency for Azure
	AzureCurrencyRUB AzureCurrency = "RUB"
	// AzureCurrencySAR - SAR Currency for Azure
	AzureCurrencySAR AzureCurrency = "SAR"
	// AzureCurrencySEK - SEK Currency for Azure
	AzureCurrencySEK AzureCurrency = "SEK"
	// AzureCurrencyTRY - TRY Currency for Azure
	AzureCurrencyTRY AzureCurrency = "TRY"
	// AzureCurrencyTWD - TWD Currency for Azure
	AzureCurrencyTWD AzureCurrency = "TWD"
	// AzureCurrencyUSD - USD Currency for Azure
	AzureCurrencyUSD AzureCurrency = "USD"
	// AzureCurrencyUnknown - Unknown Currency for Azure
	AzureCurrencyUnknown AzureCurrency = "Unknown"
	// AzureCurrencyZAR - ZAR Currency for Azure
	AzureCurrencyZAR AzureCurrency = "ZAR"
)

// PossibleAzureCurrencyValues returns the possible values for the AzureCurrency const type.
func PossibleAzureCurrencyValues() []AzureCurrency {
	return []AzureCurrency{
		AzureCurrencyARS,
		AzureCurrencyAUD,
		AzureCurrencyBRL,
		AzureCurrencyCAD,
		AzureCurrencyCHF,
		AzureCurrencyCNY,
		AzureCurrencyDKK,
		AzureCurrencyEUR,
		AzureCurrencyGBP,
		AzureCurrencyHKD,
		AzureCurrencyIDR,
		AzureCurrencyINR,
		AzureCurrencyJPY,
		AzureCurrencyKRW,
		AzureCurrencyMXN,
		AzureCurrencyMYR,
		AzureCurrencyNOK,
		AzureCurrencyNZD,
		AzureCurrencyRUB,
		AzureCurrencySAR,
		AzureCurrencySEK,
		AzureCurrencyTRY,
		AzureCurrencyTWD,
		AzureCurrencyUSD,
		AzureCurrencyUnknown,
		AzureCurrencyZAR,
	}
}

// AzureDiskType - Azure Disk Type
type AzureDiskType string

const (
	// AzureDiskTypePremium - Premium Azure Disk Type
	AzureDiskTypePremium AzureDiskType = "Premium"
	// AzureDiskTypePremiumV2 - PremiumV2 Azure Disk Type
	AzureDiskTypePremiumV2 AzureDiskType = "PremiumV2"
	// AzureDiskTypeStandard - Standard Azure Disk Type
	AzureDiskTypeStandard AzureDiskType = "Standard"
	// AzureDiskTypeStandardOrPremium - StandardOrPremium Azure Disk Type
	AzureDiskTypeStandardOrPremium AzureDiskType = "StandardOrPremium"
	// AzureDiskTypeStandardSSD - StandardSSD Azure Disk Type
	AzureDiskTypeStandardSSD AzureDiskType = "StandardSSD"
	// AzureDiskTypeUltra - Ultra Azure Disk Type
	AzureDiskTypeUltra AzureDiskType = "Ultra"
	// AzureDiskTypeUnknown - Unknown Azure Disk Type
	AzureDiskTypeUnknown AzureDiskType = "Unknown"
)

// PossibleAzureDiskTypeValues returns the possible values for the AzureDiskType const type.
func PossibleAzureDiskTypeValues() []AzureDiskType {
	return []AzureDiskType{
		AzureDiskTypePremium,
		AzureDiskTypePremiumV2,
		AzureDiskTypeStandard,
		AzureDiskTypeStandardOrPremium,
		AzureDiskTypeStandardSSD,
		AzureDiskTypeUltra,
		AzureDiskTypeUnknown,
	}
}

// AzureHybridUseBenefit - Azure Hybrid Use Benefit
type AzureHybridUseBenefit string

const (
	// AzureHybridUseBenefitNo - No Azure Hybrid Use Benefit
	AzureHybridUseBenefitNo AzureHybridUseBenefit = "No"
	// AzureHybridUseBenefitUnknown - Unknown Azure Hybrid Use Benefit
	AzureHybridUseBenefitUnknown AzureHybridUseBenefit = "Unknown"
	// AzureHybridUseBenefitYes - Yes Azure Hybrid Use Benefit
	AzureHybridUseBenefitYes AzureHybridUseBenefit = "Yes"
)

// PossibleAzureHybridUseBenefitValues returns the possible values for the AzureHybridUseBenefit const type.
func PossibleAzureHybridUseBenefitValues() []AzureHybridUseBenefit {
	return []AzureHybridUseBenefit{
		AzureHybridUseBenefitNo,
		AzureHybridUseBenefitUnknown,
		AzureHybridUseBenefitYes,
	}
}

// AzureLocation - Location for Azure.
type AzureLocation string

const (
	// AzureLocationAustraliaCentral - AustraliaCentral Location for Azure
	AzureLocationAustraliaCentral AzureLocation = "AustraliaCentral"
	// AzureLocationAustraliaCentral2 - AustraliaCentral2 Location for Azure
	AzureLocationAustraliaCentral2 AzureLocation = "AustraliaCentral2"
	// AzureLocationAustraliaEast - AustraliaEast Location for Azure
	AzureLocationAustraliaEast AzureLocation = "AustraliaEast"
	// AzureLocationAustraliaSoutheast - AustraliaSoutheast Location for Azure
	AzureLocationAustraliaSoutheast AzureLocation = "AustraliaSoutheast"
	// AzureLocationBrazilSouth - BrazilSouth Location for Azure
	AzureLocationBrazilSouth AzureLocation = "BrazilSouth"
	// AzureLocationCanadaCentral - CanadaCentral Location for Azure
	AzureLocationCanadaCentral AzureLocation = "CanadaCentral"
	// AzureLocationCanadaEast - CanadaEast Location for Azure
	AzureLocationCanadaEast AzureLocation = "CanadaEast"
	// AzureLocationCentralIndia - CentralIndia Location for Azure
	AzureLocationCentralIndia AzureLocation = "CentralIndia"
	// AzureLocationCentralUs - CentralUs Location for Azure
	AzureLocationCentralUs AzureLocation = "CentralUs"
	// AzureLocationChinaEast - ChinaEast Location for Azure
	AzureLocationChinaEast AzureLocation = "ChinaEast"
	// AzureLocationChinaEast2 - ChinaEast2 Location for Azure
	AzureLocationChinaEast2 AzureLocation = "ChinaEast2"
	// AzureLocationChinaNorth - ChinaNorth Location for Azure
	AzureLocationChinaNorth AzureLocation = "ChinaNorth"
	// AzureLocationChinaNorth2 - ChinaNorth2 Location for Azure
	AzureLocationChinaNorth2 AzureLocation = "ChinaNorth2"
	// AzureLocationEastAsia - EastAsia Location for Azure
	AzureLocationEastAsia AzureLocation = "EastAsia"
	// AzureLocationEastUs - EastUs Location for Azure
	AzureLocationEastUs AzureLocation = "EastUs"
	// AzureLocationEastUs2 - EastUs2 Location for Azure
	AzureLocationEastUs2 AzureLocation = "EastUs2"
	// AzureLocationFranceCentral - FranceCentral Location for Azure
	AzureLocationFranceCentral AzureLocation = "FranceCentral"
	// AzureLocationFranceSouth - FranceSouth Location for Azure
	AzureLocationFranceSouth AzureLocation = "FranceSouth"
	// AzureLocationGermanyCentral - GermanyCentral Location for Azure
	AzureLocationGermanyCentral AzureLocation = "GermanyCentral"
	// AzureLocationGermanyNorth - GermanyNorth Location for Azure
	AzureLocationGermanyNorth AzureLocation = "GermanyNorth"
	// AzureLocationGermanyNortheast - GermanyNortheast Location for Azure
	AzureLocationGermanyNortheast AzureLocation = "GermanyNortheast"
	// AzureLocationGermanyWestCentral - GermanyWestCentral Location for Azure
	AzureLocationGermanyWestCentral AzureLocation = "GermanyWestCentral"
	// AzureLocationIsraelCentral - IsraelCentral Location for Azure
	AzureLocationIsraelCentral AzureLocation = "IsraelCentral"
	// AzureLocationItalyNorth - ItalyNorth Location for Azure
	AzureLocationItalyNorth AzureLocation = "ItalyNorth"
	// AzureLocationJapanEast - JapanEast Location for Azure
	AzureLocationJapanEast AzureLocation = "JapanEast"
	// AzureLocationJapanWest - JapanWest Location for Azure
	AzureLocationJapanWest AzureLocation = "JapanWest"
	// AzureLocationJioIndiaWest - JioIndiaWest Location for Azure
	AzureLocationJioIndiaWest AzureLocation = "JioIndiaWest"
	// AzureLocationKoreaCentral - KoreaCentral Location for Azure
	AzureLocationKoreaCentral AzureLocation = "KoreaCentral"
	// AzureLocationKoreaSouth - KoreaSouth Location for Azure
	AzureLocationKoreaSouth AzureLocation = "KoreaSouth"
	// AzureLocationMexicoCentral - MexicoCentral Location for Azure
	AzureLocationMexicoCentral AzureLocation = "MexicoCentral"
	// AzureLocationNewZealandNorth - NewZealandNorth Location for Azure
	AzureLocationNewZealandNorth AzureLocation = "NewZealandNorth"
	// AzureLocationNorthCentralUs - NorthCentralUs Location for Azure
	AzureLocationNorthCentralUs AzureLocation = "NorthCentralUs"
	// AzureLocationNorthEurope - NorthEurope Location for Azure
	AzureLocationNorthEurope AzureLocation = "NorthEurope"
	// AzureLocationNorwayEast - NorwayEast Location for Azure
	AzureLocationNorwayEast AzureLocation = "NorwayEast"
	// AzureLocationNorwayWest - NorwayWest Location for Azure
	AzureLocationNorwayWest AzureLocation = "NorwayWest"
	// AzureLocationPolandCentral - PolandCentral Location for Azure
	AzureLocationPolandCentral AzureLocation = "PolandCentral"
	// AzureLocationQatarCentral - QatarCentral Location for Azure
	AzureLocationQatarCentral AzureLocation = "QatarCentral"
	// AzureLocationSouthAfricaNorth - SouthAfricaNorth Location for Azure
	AzureLocationSouthAfricaNorth AzureLocation = "SouthAfricaNorth"
	// AzureLocationSouthAfricaWest - SouthAfricaWest Location for Azure
	AzureLocationSouthAfricaWest AzureLocation = "SouthAfricaWest"
	// AzureLocationSouthCentralUs - SouthCentralUs Location for Azure
	AzureLocationSouthCentralUs AzureLocation = "SouthCentralUs"
	// AzureLocationSouthIndia - SouthIndia Location for Azure
	AzureLocationSouthIndia AzureLocation = "SouthIndia"
	// AzureLocationSoutheastAsia - SoutheastAsia Location for Azure
	AzureLocationSoutheastAsia AzureLocation = "SoutheastAsia"
	// AzureLocationSpainCentral - SpainCentral Location for Azure
	AzureLocationSpainCentral AzureLocation = "SpainCentral"
	// AzureLocationSwedenCentral - SwedenCentral Location for Azure
	AzureLocationSwedenCentral AzureLocation = "SwedenCentral"
	// AzureLocationSwitzerlandNorth - SwitzerlandNorth Location for Azure
	AzureLocationSwitzerlandNorth AzureLocation = "SwitzerlandNorth"
	// AzureLocationSwitzerlandWest - SwitzerlandWest Location for Azure
	AzureLocationSwitzerlandWest AzureLocation = "SwitzerlandWest"
	// AzureLocationUAECentral - UAECentral Location for Azure
	AzureLocationUAECentral AzureLocation = "UAECentral"
	// AzureLocationUAENorth - UAENorth Location for Azure
	AzureLocationUAENorth AzureLocation = "UAENorth"
	// AzureLocationUSDoDCentral - USDoDCentral Location for Azure
	AzureLocationUSDoDCentral AzureLocation = "USDoDCentral"
	// AzureLocationUSDoDEast - USDoDEast Location for Azure
	AzureLocationUSDoDEast AzureLocation = "USDoDEast"
	// AzureLocationUSGovArizona - USGovArizona Location for Azure
	AzureLocationUSGovArizona AzureLocation = "USGovArizona"
	// AzureLocationUSGovIowa - USGovIowa Location for Azure
	AzureLocationUSGovIowa AzureLocation = "USGovIowa"
	// AzureLocationUSGovTexas - USGovTexas Location for Azure
	AzureLocationUSGovTexas AzureLocation = "USGovTexas"
	// AzureLocationUSGovVirginia - USGovVirginia Location for Azure
	AzureLocationUSGovVirginia AzureLocation = "USGovVirginia"
	// AzureLocationUkSouth - UkSouth Location for Azure
	AzureLocationUkSouth AzureLocation = "UkSouth"
	// AzureLocationUkWest - UkWest Location for Azure
	AzureLocationUkWest AzureLocation = "UkWest"
	// AzureLocationUnknown - Unknown Location for Azure
	AzureLocationUnknown AzureLocation = "Unknown"
	// AzureLocationUsNatEast - UsNatEast Location for Azure
	AzureLocationUsNatEast AzureLocation = "UsNatEast"
	// AzureLocationUsNatWest - UsNatWest Location for Azure
	AzureLocationUsNatWest AzureLocation = "UsNatWest"
	// AzureLocationUsSecCentral - UsSecCentral Location for Azure
	AzureLocationUsSecCentral AzureLocation = "UsSecCentral"
	// AzureLocationUsSecEast - UsSecEast Location for Azure
	AzureLocationUsSecEast AzureLocation = "UsSecEast"
	// AzureLocationUsSecWest - UsSecWest Location for Azure
	AzureLocationUsSecWest AzureLocation = "UsSecWest"
	// AzureLocationWestCentralUs - WestCentralUs Location for Azure
	AzureLocationWestCentralUs AzureLocation = "WestCentralUs"
	// AzureLocationWestEurope - WestEurope Location for Azure
	AzureLocationWestEurope AzureLocation = "WestEurope"
	// AzureLocationWestIndia - WestIndia Location for Azure
	AzureLocationWestIndia AzureLocation = "WestIndia"
	// AzureLocationWestUs - WestUs Location for Azure
	AzureLocationWestUs AzureLocation = "WestUs"
	// AzureLocationWestUs2 - WestUs2 Location for Azure
	AzureLocationWestUs2 AzureLocation = "WestUs2"
)

// PossibleAzureLocationValues returns the possible values for the AzureLocation const type.
func PossibleAzureLocationValues() []AzureLocation {
	return []AzureLocation{
		AzureLocationAustraliaCentral,
		AzureLocationAustraliaCentral2,
		AzureLocationAustraliaEast,
		AzureLocationAustraliaSoutheast,
		AzureLocationBrazilSouth,
		AzureLocationCanadaCentral,
		AzureLocationCanadaEast,
		AzureLocationCentralIndia,
		AzureLocationCentralUs,
		AzureLocationChinaEast,
		AzureLocationChinaEast2,
		AzureLocationChinaNorth,
		AzureLocationChinaNorth2,
		AzureLocationEastAsia,
		AzureLocationEastUs,
		AzureLocationEastUs2,
		AzureLocationFranceCentral,
		AzureLocationFranceSouth,
		AzureLocationGermanyCentral,
		AzureLocationGermanyNorth,
		AzureLocationGermanyNortheast,
		AzureLocationGermanyWestCentral,
		AzureLocationIsraelCentral,
		AzureLocationItalyNorth,
		AzureLocationJapanEast,
		AzureLocationJapanWest,
		AzureLocationJioIndiaWest,
		AzureLocationKoreaCentral,
		AzureLocationKoreaSouth,
		AzureLocationMexicoCentral,
		AzureLocationNewZealandNorth,
		AzureLocationNorthCentralUs,
		AzureLocationNorthEurope,
		AzureLocationNorwayEast,
		AzureLocationNorwayWest,
		AzureLocationPolandCentral,
		AzureLocationQatarCentral,
		AzureLocationSouthAfricaNorth,
		AzureLocationSouthAfricaWest,
		AzureLocationSouthCentralUs,
		AzureLocationSouthIndia,
		AzureLocationSoutheastAsia,
		AzureLocationSpainCentral,
		AzureLocationSwedenCentral,
		AzureLocationSwitzerlandNorth,
		AzureLocationSwitzerlandWest,
		AzureLocationUAECentral,
		AzureLocationUAENorth,
		AzureLocationUSDoDCentral,
		AzureLocationUSDoDEast,
		AzureLocationUSGovArizona,
		AzureLocationUSGovIowa,
		AzureLocationUSGovTexas,
		AzureLocationUSGovVirginia,
		AzureLocationUkSouth,
		AzureLocationUkWest,
		AzureLocationUnknown,
		AzureLocationUsNatEast,
		AzureLocationUsNatWest,
		AzureLocationUsSecCentral,
		AzureLocationUsSecEast,
		AzureLocationUsSecWest,
		AzureLocationWestCentralUs,
		AzureLocationWestEurope,
		AzureLocationWestIndia,
		AzureLocationWestUs,
		AzureLocationWestUs2,
	}
}

// AzureManagementOfferingType - Azure management Offering type
type AzureManagementOfferingType string

const (
	// AzureManagementOfferingTypeAUM - AUM - Azure management Offering type
	AzureManagementOfferingTypeAUM AzureManagementOfferingType = "AUM"
	// AzureManagementOfferingTypeAzMon - AzMon - Azure management Offering type
	AzureManagementOfferingTypeAzMon AzureManagementOfferingType = "AzMon"
	// AzureManagementOfferingTypeAzureBackup - AzureBackup - Azure management Offering type
	AzureManagementOfferingTypeAzureBackup AzureManagementOfferingType = "AzureBackup"
	// AzureManagementOfferingTypeNo - No - Azure management Offering type
	AzureManagementOfferingTypeNo AzureManagementOfferingType = "No"
	// AzureManagementOfferingTypeSCOMMI - SCOMMI - Azure management Offering type
	AzureManagementOfferingTypeSCOMMI AzureManagementOfferingType = "SCOMMI"
)

// PossibleAzureManagementOfferingTypeValues returns the possible values for the AzureManagementOfferingType const type.
func PossibleAzureManagementOfferingTypeValues() []AzureManagementOfferingType {
	return []AzureManagementOfferingType{
		AzureManagementOfferingTypeAUM,
		AzureManagementOfferingTypeAzMon,
		AzureManagementOfferingTypeAzureBackup,
		AzureManagementOfferingTypeNo,
		AzureManagementOfferingTypeSCOMMI,
	}
}

// AzureOffer - Azure Offer
type AzureOffer string

const (
	// AzureOfferEA - EA Azure Offer
	AzureOfferEA AzureOffer = "EA"
	// AzureOfferMsazr0003P - MSAZR0003P Azure Offer
	AzureOfferMsazr0003P AzureOffer = "MSAZR0003P"
	// AzureOfferMsazr0023P - MSAZR0023P Azure Offer
	AzureOfferMsazr0023P AzureOffer = "MSAZR0023P"
	// AzureOfferMsazrusgov0003P - MSAZRUSGOV0003P Azure Offer
	AzureOfferMsazrusgov0003P AzureOffer = "MSAZRUSGOV0003P"
	// AzureOfferMsmcazr0044P - MSMCAZR0044P Azure Offer
	AzureOfferMsmcazr0044P AzureOffer = "MSMCAZR0044P"
	// AzureOfferMsmcazr0059P - MSMCAZR0059P Azure Offer
	AzureOfferMsmcazr0059P AzureOffer = "MSMCAZR0059P"
	// AzureOfferMsmcazr0060P - MSMCAZR0060P Azure Offer
	AzureOfferMsmcazr0060P AzureOffer = "MSMCAZR0060P"
	// AzureOfferMsmcazr0063P - MSMCAZR0063P Azure Offer
	AzureOfferMsmcazr0063P AzureOffer = "MSMCAZR0063P"
	// AzureOfferSavingsPlan1Year - SavingsPlan1Year Azure Offer
	AzureOfferSavingsPlan1Year AzureOffer = "SavingsPlan1Year"
	// AzureOfferSavingsPlan3Year - SavingsPlan3Year Azure Offer
	AzureOfferSavingsPlan3Year AzureOffer = "SavingsPlan3Year"
	// AzureOfferUnknown - Unknown - Azure Offer
	AzureOfferUnknown AzureOffer = "Unknown"
)

// PossibleAzureOfferValues returns the possible values for the AzureOffer const type.
func PossibleAzureOfferValues() []AzureOffer {
	return []AzureOffer{
		AzureOfferEA,
		AzureOfferMsazr0003P,
		AzureOfferMsazr0023P,
		AzureOfferMsazrusgov0003P,
		AzureOfferMsmcazr0044P,
		AzureOfferMsmcazr0059P,
		AzureOfferMsmcazr0060P,
		AzureOfferMsmcazr0063P,
		AzureOfferSavingsPlan1Year,
		AzureOfferSavingsPlan3Year,
		AzureOfferUnknown,
	}
}

// AzurePricingTier - Azure Pricing Tier
type AzurePricingTier string

const (
	// AzurePricingTierBasic - Basic Azure Pricing Tier
	AzurePricingTierBasic AzurePricingTier = "Basic"
	// AzurePricingTierStandard - Standard Azure Pricing Tier
	AzurePricingTierStandard AzurePricingTier = "Standard"
)

// PossibleAzurePricingTierValues returns the possible values for the AzurePricingTier const type.
func PossibleAzurePricingTierValues() []AzurePricingTier {
	return []AzurePricingTier{
		AzurePricingTierBasic,
		AzurePricingTierStandard,
	}
}

// AzureSecurityOfferingType - Azure Security Offering Type
type AzureSecurityOfferingType string

const (
	// AzureSecurityOfferingTypeMDC - MDC - Azure Security Offering Type
	AzureSecurityOfferingTypeMDC AzureSecurityOfferingType = "MDC"
	// AzureSecurityOfferingTypeNO - NO - Azure Security Offering Type
	AzureSecurityOfferingTypeNO AzureSecurityOfferingType = "NO"
)

// PossibleAzureSecurityOfferingTypeValues returns the possible values for the AzureSecurityOfferingType const type.
func PossibleAzureSecurityOfferingTypeValues() []AzureSecurityOfferingType {
	return []AzureSecurityOfferingType{
		AzureSecurityOfferingTypeMDC,
		AzureSecurityOfferingTypeNO,
	}
}

// AzureStorageRedundancy - Azure Storage Redundancy
type AzureStorageRedundancy string

const (
	// AzureStorageRedundancyGeoRedundant - GeoRedundant Azure Storage Redundancy
	AzureStorageRedundancyGeoRedundant AzureStorageRedundancy = "GeoRedundant"
	// AzureStorageRedundancyLocallyRedundant - LocallyRedundant Azure Storage Redundancy
	AzureStorageRedundancyLocallyRedundant AzureStorageRedundancy = "LocallyRedundant"
	// AzureStorageRedundancyReadAccessGeoRedundant - ReadAccessGeoRedundant Azure Storage Redundancy
	AzureStorageRedundancyReadAccessGeoRedundant AzureStorageRedundancy = "ReadAccessGeoRedundant"
	// AzureStorageRedundancyUnknown - Unknown Azure Storage Redundancy
	AzureStorageRedundancyUnknown AzureStorageRedundancy = "Unknown"
	// AzureStorageRedundancyZoneRedundant - ZoneRedundant Azure Storage Redundancy
	AzureStorageRedundancyZoneRedundant AzureStorageRedundancy = "ZoneRedundant"
)

// PossibleAzureStorageRedundancyValues returns the possible values for the AzureStorageRedundancy const type.
func PossibleAzureStorageRedundancyValues() []AzureStorageRedundancy {
	return []AzureStorageRedundancy{
		AzureStorageRedundancyGeoRedundant,
		AzureStorageRedundancyLocallyRedundant,
		AzureStorageRedundancyReadAccessGeoRedundant,
		AzureStorageRedundancyUnknown,
		AzureStorageRedundancyZoneRedundant,
	}
}

// AzureTarget - Azure Target
type AzureTarget string

const (
	// AzureTargetAKS - AKS - Azure Target
	AzureTargetAKS AzureTarget = "AKS"
	// AzureTargetAvs - Avs - Azure Target
	AzureTargetAvs AzureTarget = "Avs"
	// AzureTargetAzureAppService - AzureAppService - Azure Target
	AzureTargetAzureAppService AzureTarget = "AzureAppService"
	// AzureTargetAzureAppServiceContainer - AzureAppServiceContainer - Azure Target
	AzureTargetAzureAppServiceContainer AzureTarget = "AzureAppServiceContainer"
	// AzureTargetAzureSQLVM - AzureSQLVM - Azure Target
	AzureTargetAzureSQLVM AzureTarget = "AzureSQLVM"
	// AzureTargetAzureSpringApps - AzureSpringApps - Azure Target
	AzureTargetAzureSpringApps AzureTarget = "AzureSpringApps"
	// AzureTargetAzureVM - AzureVM - Azure Target
	AzureTargetAzureVM AzureTarget = "AzureVM"
	// AzureTargetFlexServerPG - FlexServerPG - Azure Target
	AzureTargetFlexServerPG AzureTarget = "FlexServerPG"
	// AzureTargetMySQLAzureFlexServer - MySQLAzureFlexServer - Azure Target
	AzureTargetMySQLAzureFlexServer AzureTarget = "MySQLAzureFlexServer"
	// AzureTargetOracleIaasVM - OracleIaasVM - Azure Target
	AzureTargetOracleIaasVM AzureTarget = "OracleIaasVM"
	// AzureTargetSAPAzureInstance - SAPAzureInstance - Azure Target
	AzureTargetSAPAzureInstance AzureTarget = "SAPAzureInstance"
	// AzureTargetSQLDatabase - SqlDatabase - Azure Target
	AzureTargetSQLDatabase AzureTarget = "SqlDatabase"
	// AzureTargetSQLMI - SqlMI - Azure Target
	AzureTargetSQLMI AzureTarget = "SqlMI"
	// AzureTargetUnknown - Unknown - Azure Target
	AzureTargetUnknown AzureTarget = "Unknown"
)

// PossibleAzureTargetValues returns the possible values for the AzureTarget const type.
func PossibleAzureTargetValues() []AzureTarget {
	return []AzureTarget{
		AzureTargetAKS,
		AzureTargetAvs,
		AzureTargetAzureAppService,
		AzureTargetAzureAppServiceContainer,
		AzureTargetAzureSQLVM,
		AzureTargetAzureSpringApps,
		AzureTargetAzureVM,
		AzureTargetFlexServerPG,
		AzureTargetMySQLAzureFlexServer,
		AzureTargetOracleIaasVM,
		AzureTargetSAPAzureInstance,
		AzureTargetSQLDatabase,
		AzureTargetSQLMI,
		AzureTargetUnknown,
	}
}

// AzureVMFamily - Azure VM Family
type AzureVMFamily string

const (
	// AzureVMFamilyAv2Series - Av2_series
	AzureVMFamilyAv2Series AzureVMFamily = "Av2_series"
	// AzureVMFamilyBasicA0A4 - Basic_A0_A4
	AzureVMFamilyBasicA0A4 AzureVMFamily = "Basic_A0_A4"
	// AzureVMFamilyDCSeries - DC_Series
	AzureVMFamilyDCSeries AzureVMFamily = "DC_Series"
	// AzureVMFamilyDSSeries - DS_series
	AzureVMFamilyDSSeries AzureVMFamily = "DS_series"
	// AzureVMFamilyDSeries - D_series
	AzureVMFamilyDSeries AzureVMFamily = "D_series"
	// AzureVMFamilyDSv2Series - DSv2_series
	AzureVMFamilyDSv2Series AzureVMFamily = "DSv2_series"
	// AzureVMFamilyDadsv5Series - Dadsv5_series
	AzureVMFamilyDadsv5Series AzureVMFamily = "Dadsv5_series"
	// AzureVMFamilyDasv4Series - Dasv4_series
	AzureVMFamilyDasv4Series AzureVMFamily = "Dasv4_series"
	// AzureVMFamilyDasv5Series - Dasv5_series
	AzureVMFamilyDasv5Series AzureVMFamily = "Dasv5_series"
	// AzureVMFamilyDav4Series - Dav4_series
	AzureVMFamilyDav4Series AzureVMFamily = "Dav4_series"
	// AzureVMFamilyDdsv4Series - Ddsv4_series
	AzureVMFamilyDdsv4Series AzureVMFamily = "Ddsv4_series"
	// AzureVMFamilyDdsv5Series - Ddsv5_series
	AzureVMFamilyDdsv5Series AzureVMFamily = "Ddsv5_series"
	// AzureVMFamilyDdv4Series - Ddv4_series
	AzureVMFamilyDdv4Series AzureVMFamily = "Ddv4_series"
	// AzureVMFamilyDdv5Series - Ddv5_series
	AzureVMFamilyDdv5Series AzureVMFamily = "Ddv5_series"
	// AzureVMFamilyDsv3Series - Dsv3_series
	AzureVMFamilyDsv3Series AzureVMFamily = "Dsv3_series"
	// AzureVMFamilyDsv4Series - Dsv4_series
	AzureVMFamilyDsv4Series AzureVMFamily = "Dsv4_series"
	// AzureVMFamilyDsv5Series - Dsv5_series
	AzureVMFamilyDsv5Series AzureVMFamily = "Dsv5_series"
	// AzureVMFamilyDv2Series - Dv2_series
	AzureVMFamilyDv2Series AzureVMFamily = "Dv2_series"
	// AzureVMFamilyDv3Series - Dv3_series
	AzureVMFamilyDv3Series AzureVMFamily = "Dv3_series"
	// AzureVMFamilyDv4Series - Dv4_series
	AzureVMFamilyDv4Series AzureVMFamily = "Dv4_series"
	// AzureVMFamilyDv5Series - Dv5_series
	AzureVMFamilyDv5Series AzureVMFamily = "Dv5_series"
	// AzureVMFamilyEadsv5Series - Eadsv5_series
	AzureVMFamilyEadsv5Series AzureVMFamily = "Eadsv5_series"
	// AzureVMFamilyEasv4Series - Easv4_series
	AzureVMFamilyEasv4Series AzureVMFamily = "Easv4_series"
	// AzureVMFamilyEasv5Series - Easv5_series
	AzureVMFamilyEasv5Series AzureVMFamily = "Easv5_series"
	// AzureVMFamilyEav4Series - Eav4_series
	AzureVMFamilyEav4Series AzureVMFamily = "Eav4_series"
	// AzureVMFamilyEbdsv5Series - Ebdsv5_series
	AzureVMFamilyEbdsv5Series AzureVMFamily = "Ebdsv5_series"
	// AzureVMFamilyEbsv5Series - Ebsv5_series
	AzureVMFamilyEbsv5Series AzureVMFamily = "Ebsv5_series"
	// AzureVMFamilyEdsv4Series - Edsv4_series
	AzureVMFamilyEdsv4Series AzureVMFamily = "Edsv4_series"
	// AzureVMFamilyEdsv5Series - Edsv5_series
	AzureVMFamilyEdsv5Series AzureVMFamily = "Edsv5_series"
	// AzureVMFamilyEdv4Series - Edv4_series
	AzureVMFamilyEdv4Series AzureVMFamily = "Edv4_series"
	// AzureVMFamilyEdv5Series - Edv5_series
	AzureVMFamilyEdv5Series AzureVMFamily = "Edv5_series"
	// AzureVMFamilyEsv3Series - Esv3_series
	AzureVMFamilyEsv3Series AzureVMFamily = "Esv3_series"
	// AzureVMFamilyEsv4Series - Esv4_series
	AzureVMFamilyEsv4Series AzureVMFamily = "Esv4_series"
	// AzureVMFamilyEsv5Series - Esv5_series
	AzureVMFamilyEsv5Series AzureVMFamily = "Esv5_series"
	// AzureVMFamilyEv3Series - Ev3_series
	AzureVMFamilyEv3Series AzureVMFamily = "Ev3_series"
	// AzureVMFamilyEv4Series - Ev4_series
	AzureVMFamilyEv4Series AzureVMFamily = "Ev4_series"
	// AzureVMFamilyEv5Series - Ev5_series
	AzureVMFamilyEv5Series AzureVMFamily = "Ev5_series"
	// AzureVMFamilyFSeries - F_series
	AzureVMFamilyFSeries AzureVMFamily = "F_series"
	// AzureVMFamilyFsSeries - Fs_series
	AzureVMFamilyFsSeries AzureVMFamily = "Fs_series"
	// AzureVMFamilyFsv2Series - Fsv2_series
	AzureVMFamilyFsv2Series AzureVMFamily = "Fsv2_series"
	// AzureVMFamilyGSSeries - GS_series
	AzureVMFamilyGSSeries AzureVMFamily = "GS_series"
	// AzureVMFamilyGSeries - G_series
	AzureVMFamilyGSeries AzureVMFamily = "G_series"
	// AzureVMFamilyHSeries - H_series
	AzureVMFamilyHSeries AzureVMFamily = "H_series"
	// AzureVMFamilyLsSeries - Ls_series
	AzureVMFamilyLsSeries AzureVMFamily = "Ls_series"
	// AzureVMFamilyLsv2Series - Lsv2_series
	AzureVMFamilyLsv2Series AzureVMFamily = "Lsv2_series"
	// AzureVMFamilyMSeries - M_series
	AzureVMFamilyMSeries AzureVMFamily = "M_series"
	// AzureVMFamilyMdsv2Series - Mdsv2_series
	AzureVMFamilyMdsv2Series AzureVMFamily = "Mdsv2_series"
	// AzureVMFamilyMsv2Series - Msv2_series
	AzureVMFamilyMsv2Series AzureVMFamily = "Msv2_series"
	// AzureVMFamilyMv2Series - Mv2_series
	AzureVMFamilyMv2Series AzureVMFamily = "Mv2_series"
	// AzureVMFamilyStandardA0A7 - Standard_A0_A7
	AzureVMFamilyStandardA0A7 AzureVMFamily = "Standard_A0_A7"
	// AzureVMFamilyStandardA8A11 - Standard_A8_A11
	AzureVMFamilyStandardA8A11 AzureVMFamily = "Standard_A8_A11"
	// AzureVMFamilyUnknown - Unknown - Azure VM Family
	AzureVMFamilyUnknown AzureVMFamily = "Unknown"
)

// PossibleAzureVMFamilyValues returns the possible values for the AzureVMFamily const type.
func PossibleAzureVMFamilyValues() []AzureVMFamily {
	return []AzureVMFamily{
		AzureVMFamilyAv2Series,
		AzureVMFamilyBasicA0A4,
		AzureVMFamilyDCSeries,
		AzureVMFamilyDSSeries,
		AzureVMFamilyDSeries,
		AzureVMFamilyDSv2Series,
		AzureVMFamilyDadsv5Series,
		AzureVMFamilyDasv4Series,
		AzureVMFamilyDasv5Series,
		AzureVMFamilyDav4Series,
		AzureVMFamilyDdsv4Series,
		AzureVMFamilyDdsv5Series,
		AzureVMFamilyDdv4Series,
		AzureVMFamilyDdv5Series,
		AzureVMFamilyDsv3Series,
		AzureVMFamilyDsv4Series,
		AzureVMFamilyDsv5Series,
		AzureVMFamilyDv2Series,
		AzureVMFamilyDv3Series,
		AzureVMFamilyDv4Series,
		AzureVMFamilyDv5Series,
		AzureVMFamilyEadsv5Series,
		AzureVMFamilyEasv4Series,
		AzureVMFamilyEasv5Series,
		AzureVMFamilyEav4Series,
		AzureVMFamilyEbdsv5Series,
		AzureVMFamilyEbsv5Series,
		AzureVMFamilyEdsv4Series,
		AzureVMFamilyEdsv5Series,
		AzureVMFamilyEdv4Series,
		AzureVMFamilyEdv5Series,
		AzureVMFamilyEsv3Series,
		AzureVMFamilyEsv4Series,
		AzureVMFamilyEsv5Series,
		AzureVMFamilyEv3Series,
		AzureVMFamilyEv4Series,
		AzureVMFamilyEv5Series,
		AzureVMFamilyFSeries,
		AzureVMFamilyFsSeries,
		AzureVMFamilyFsv2Series,
		AzureVMFamilyGSSeries,
		AzureVMFamilyGSeries,
		AzureVMFamilyHSeries,
		AzureVMFamilyLsSeries,
		AzureVMFamilyLsv2Series,
		AzureVMFamilyMSeries,
		AzureVMFamilyMdsv2Series,
		AzureVMFamilyMsv2Series,
		AzureVMFamilyMv2Series,
		AzureVMFamilyStandardA0A7,
		AzureVMFamilyStandardA8A11,
		AzureVMFamilyUnknown,
	}
}

// AzureVMSecuritySuitabilityDetail - Azure Vm Security Suitability Detail
type AzureVMSecuritySuitabilityDetail string

const (
	// AzureVMSecuritySuitabilityDetailAllDiskSizeExceeds2TB - The VM is not ready to be migrated to Azure with Trusted launch
	// VM security type. Azure does not support OS disk size greater than 2TB for VMs with BIOS boot type.
	AzureVMSecuritySuitabilityDetailAllDiskSizeExceeds2TB AzureVMSecuritySuitabilityDetail = "AllDiskSizeExceeds2TB"
	// AzureVMSecuritySuitabilityDetailAllDiskSizeExceeds4TB - Azure does not support VM with OS disk size greater than 4TB.
	AzureVMSecuritySuitabilityDetailAllDiskSizeExceeds4TB AzureVMSecuritySuitabilityDetail = "AllDiskSizeExceeds4TB"
	// AzureVMSecuritySuitabilityDetailAnyDiskSizeExceeds4TB - Azure does not support VM with OS disk size greater than 4TB. If
	// OS disk size is less than 4TB, proceed with migration.
	AzureVMSecuritySuitabilityDetailAnyDiskSizeExceeds4TB AzureVMSecuritySuitabilityDetail = "AnyDiskSizeExceeds4TB"
	// AzureVMSecuritySuitabilityDetailAnyDiskSizeExceeds4TBConditional - Azure does not support VM with any disk size greater
	// than 4TB. Please proceed only if you know the OS disk size is less than 4TB.
	AzureVMSecuritySuitabilityDetailAnyDiskSizeExceeds4TBConditional AzureVMSecuritySuitabilityDetail = "AnyDiskSizeExceeds4TBConditional"
	// AzureVMSecuritySuitabilityDetailBootTypeNotSupported - BootTypeNotSupported Azure Vm Security Suitability Detail
	AzureVMSecuritySuitabilityDetailBootTypeNotSupported AzureVMSecuritySuitabilityDetail = "BootTypeNotSupported"
	// AzureVMSecuritySuitabilityDetailDiskSize2TBConditionalReadyBiosBoot - The VM readiness is unknown. Azure does not support
	// OS disk size greater than 2TB for VMs with BIOS boot type. Please proceed with migration only if OS disk size is less than
	// 2TB.
	AzureVMSecuritySuitabilityDetailDiskSize2TBConditionalReadyBiosBoot AzureVMSecuritySuitabilityDetail = "DiskSize2TBConditionalReadyBiosBoot"
	// AzureVMSecuritySuitabilityDetailDiskSizeLarge - DiskSizeLarge Azure Vm Security Suitability Detail
	AzureVMSecuritySuitabilityDetailDiskSizeLarge AzureVMSecuritySuitabilityDetail = "DiskSizeLarge"
	// AzureVMSecuritySuitabilityDetailGuestOperatingSystemNotSupported - GuestOperatingSystemNotSupported Azure Vm Security Suitability
	// Detail
	AzureVMSecuritySuitabilityDetailGuestOperatingSystemNotSupported AzureVMSecuritySuitabilityDetail = "GuestOperatingSystemNotSupported"
	// AzureVMSecuritySuitabilityDetailNotApplicable - NotApplicable - Azure Vm Security Suitability Detail
	AzureVMSecuritySuitabilityDetailNotApplicable AzureVMSecuritySuitabilityDetail = "NotApplicable"
	// AzureVMSecuritySuitabilityDetailOSNameCannotBeRead - Readiness is marked as unknown because the OS name cannot be read.
	AzureVMSecuritySuitabilityDetailOSNameCannotBeRead AzureVMSecuritySuitabilityDetail = "OSNameCannotBeRead"
	// AzureVMSecuritySuitabilityDetailOSNotSupported - The VM is not ready to be migrated to Azure because the OS is not supported.
	AzureVMSecuritySuitabilityDetailOSNotSupported AzureVMSecuritySuitabilityDetail = "OSNotSupported"
	// AzureVMSecuritySuitabilityDetailStandardCanMigrate - The VM can be migrated to Azure with standard VM security type.
	AzureVMSecuritySuitabilityDetailStandardCanMigrate AzureVMSecuritySuitabilityDetail = "StandardCanMigrate"
	// AzureVMSecuritySuitabilityDetailStandardCannotMigrateOSNotSupported - The VM cannot be migrated to Azure because the OS
	// is not supported.
	AzureVMSecuritySuitabilityDetailStandardCannotMigrateOSNotSupported AzureVMSecuritySuitabilityDetail = "StandardCannotMigrateOSNotSupported"
	// AzureVMSecuritySuitabilityDetailStandardNotReady2TBBiosBoot - The VM is not ready to be migrated to Azure with standard
	// VM security type. Azure does not support OS disk size greater than 2TB for VMs with BIOS boot type.
	AzureVMSecuritySuitabilityDetailStandardNotReady2TBBiosBoot AzureVMSecuritySuitabilityDetail = "StandardNotReady2TBBiosBoot"
	// AzureVMSecuritySuitabilityDetailStandardNotReadyOSNotSupported - The VM is not ready to be migrated to Azure with standard
	// VM security type because the OS is not supported.
	AzureVMSecuritySuitabilityDetailStandardNotReadyOSNotSupported AzureVMSecuritySuitabilityDetail = "StandardNotReadyOSNotSupported"
	// AzureVMSecuritySuitabilityDetailStandardReady - The VM is ready to be migrated to Azure with standard VM security type.
	AzureVMSecuritySuitabilityDetailStandardReady AzureVMSecuritySuitabilityDetail = "StandardReady"
	// AzureVMSecuritySuitabilityDetailTVMCanMigrateConditional - The VM can be migrated to Trusted launch VM. Currently, Azure
	// Migrate does not support migration to Trusted launch for VM with BIOS boot type. You can convert the VM post-migration
	// to Trusted Launch VM. The steps are mentioned in this documentation.
	AzureVMSecuritySuitabilityDetailTVMCanMigrateConditional AzureVMSecuritySuitabilityDetail = "TVMCanMigrateConditional"
	// AzureVMSecuritySuitabilityDetailTVMCannotMigrateOSNotSupported - The VM cannot be migrated to Trusted launch VM because
	// the OS is not supported. Learn more [here].
	AzureVMSecuritySuitabilityDetailTVMCannotMigrateOSNotSupported AzureVMSecuritySuitabilityDetail = "TVMCannotMigrateOSNotSupported"
	// AzureVMSecuritySuitabilityDetailTVMNotReadyOSNotSupported - The VM is not ready to be migrated to Azure with Trusted launch
	// VM security type because the OS is not supported for Trusted launch VM. Get more information [here].
	AzureVMSecuritySuitabilityDetailTVMNotReadyOSNotSupported AzureVMSecuritySuitabilityDetail = "TVMNotReadyOSNotSupported"
	// AzureVMSecuritySuitabilityDetailTVMNotSupportedForBiosBoot - Migration to Trusted Launch VM is not supported for BIOS boot
	// type VMs at this time.
	AzureVMSecuritySuitabilityDetailTVMNotSupportedForBiosBoot AzureVMSecuritySuitabilityDetail = "TVMNotSupportedForBiosBoot"
	// AzureVMSecuritySuitabilityDetailTVMReady - The VM is ready to be migrated to Azure with Trusted launch VM security type.
	AzureVMSecuritySuitabilityDetailTVMReady AzureVMSecuritySuitabilityDetail = "TVMReady"
	// AzureVMSecuritySuitabilityDetailUnknown - Unknown - Azure Vm Security Suitability Detail
	AzureVMSecuritySuitabilityDetailUnknown AzureVMSecuritySuitabilityDetail = "Unknown"
)

// PossibleAzureVMSecuritySuitabilityDetailValues returns the possible values for the AzureVMSecuritySuitabilityDetail const type.
func PossibleAzureVMSecuritySuitabilityDetailValues() []AzureVMSecuritySuitabilityDetail {
	return []AzureVMSecuritySuitabilityDetail{
		AzureVMSecuritySuitabilityDetailAllDiskSizeExceeds2TB,
		AzureVMSecuritySuitabilityDetailAllDiskSizeExceeds4TB,
		AzureVMSecuritySuitabilityDetailAnyDiskSizeExceeds4TB,
		AzureVMSecuritySuitabilityDetailAnyDiskSizeExceeds4TBConditional,
		AzureVMSecuritySuitabilityDetailBootTypeNotSupported,
		AzureVMSecuritySuitabilityDetailDiskSize2TBConditionalReadyBiosBoot,
		AzureVMSecuritySuitabilityDetailDiskSizeLarge,
		AzureVMSecuritySuitabilityDetailGuestOperatingSystemNotSupported,
		AzureVMSecuritySuitabilityDetailNotApplicable,
		AzureVMSecuritySuitabilityDetailOSNameCannotBeRead,
		AzureVMSecuritySuitabilityDetailOSNotSupported,
		AzureVMSecuritySuitabilityDetailStandardCanMigrate,
		AzureVMSecuritySuitabilityDetailStandardCannotMigrateOSNotSupported,
		AzureVMSecuritySuitabilityDetailStandardNotReady2TBBiosBoot,
		AzureVMSecuritySuitabilityDetailStandardNotReadyOSNotSupported,
		AzureVMSecuritySuitabilityDetailStandardReady,
		AzureVMSecuritySuitabilityDetailTVMCanMigrateConditional,
		AzureVMSecuritySuitabilityDetailTVMCannotMigrateOSNotSupported,
		AzureVMSecuritySuitabilityDetailTVMNotReadyOSNotSupported,
		AzureVMSecuritySuitabilityDetailTVMNotSupportedForBiosBoot,
		AzureVMSecuritySuitabilityDetailTVMReady,
		AzureVMSecuritySuitabilityDetailUnknown,
	}
}

// AzureVMSecurityType - Azure Vm Security Type
type AzureVMSecurityType string

const (
	// AzureVMSecurityTypeCVM - CVM Azure Vm Security Type
	AzureVMSecurityTypeCVM AzureVMSecurityType = "CVM"
	// AzureVMSecurityTypeStandard - Standard Azure Vm Security Type
	AzureVMSecurityTypeStandard AzureVMSecurityType = "Standard"
	// AzureVMSecurityTypeTVM - TVM Azure Vm Security Type
	AzureVMSecurityTypeTVM AzureVMSecurityType = "TVM"
	// AzureVMSecurityTypeUnknown - Unknown - Azure Vm Security Type
	AzureVMSecurityTypeUnknown AzureVMSecurityType = "Unknown"
)

// PossibleAzureVMSecurityTypeValues returns the possible values for the AzureVMSecurityType const type.
func PossibleAzureVMSecurityTypeValues() []AzureVMSecurityType {
	return []AzureVMSecurityType{
		AzureVMSecurityTypeCVM,
		AzureVMSecurityTypeStandard,
		AzureVMSecurityTypeTVM,
		AzureVMSecurityTypeUnknown,
	}
}

// CloudSuitabilityCommon - Cloud Suitability Common
type CloudSuitabilityCommon string

const (
	// CloudSuitabilityCommonConditionallySuitable - ConditionallySuitable - Cloud Suitability Common
	CloudSuitabilityCommonConditionallySuitable CloudSuitabilityCommon = "ConditionallySuitable"
	// CloudSuitabilityCommonNotSuitable - NotSuitable - Cloud Suitability Common
	CloudSuitabilityCommonNotSuitable CloudSuitabilityCommon = "NotSuitable"
	// CloudSuitabilityCommonReadinessUnknown - ReadinessUnknown - Cloud Suitability Common
	CloudSuitabilityCommonReadinessUnknown CloudSuitabilityCommon = "ReadinessUnknown"
	// CloudSuitabilityCommonSuitable - Suitable - Cloud Suitability Common
	CloudSuitabilityCommonSuitable CloudSuitabilityCommon = "Suitable"
	// CloudSuitabilityCommonSuitableWithWarnings - SuitableWithWarnings - Cloud Suitability Common
	CloudSuitabilityCommonSuitableWithWarnings CloudSuitabilityCommon = "SuitableWithWarnings"
	// CloudSuitabilityCommonUnknown - Unknown - Cloud Suitability Common
	CloudSuitabilityCommonUnknown CloudSuitabilityCommon = "Unknown"
)

// PossibleCloudSuitabilityCommonValues returns the possible values for the CloudSuitabilityCommon const type.
func PossibleCloudSuitabilityCommonValues() []CloudSuitabilityCommon {
	return []CloudSuitabilityCommon{
		CloudSuitabilityCommonConditionallySuitable,
		CloudSuitabilityCommonNotSuitable,
		CloudSuitabilityCommonReadinessUnknown,
		CloudSuitabilityCommonSuitable,
		CloudSuitabilityCommonSuitableWithWarnings,
		CloudSuitabilityCommonUnknown,
	}
}

// CostType - Cost type
type CostType string

const (
	// CostTypeDataProtectionService - DataProtectionService - Cost type
	CostTypeDataProtectionService CostType = "DataProtectionService"
	// CostTypeMonitoringService - MonitoringService - Cost type
	CostTypeMonitoringService CostType = "MonitoringService"
	// CostTypeMonthlyAvsExternalStorageCost - MonthlyAvsExternalStorageCost - Cost type
	CostTypeMonthlyAvsExternalStorageCost CostType = "MonthlyAvsExternalStorageCost"
	// CostTypeMonthlyAvsNetworkCost - MonthlyAvsNetworkCost - Cost type
	CostTypeMonthlyAvsNetworkCost CostType = "MonthlyAvsNetworkCost"
	// CostTypeMonthlyAvsNodeCost - MonthlyAvsNodeCost - Cost type
	CostTypeMonthlyAvsNodeCost CostType = "MonthlyAvsNodeCost"
	// CostTypeMonthlyAzureHybridCost - MonthlyAzureHybridCost - Cost type
	CostTypeMonthlyAzureHybridCost CostType = "MonthlyAzureHybridCost"
	// CostTypeMonthlyBandwidthCost - MonthlyBandwidthCost - Cost type
	CostTypeMonthlyBandwidthCost CostType = "MonthlyBandwidthCost"
	// CostTypeMonthlyComputeCost - MonthlyComputeCost - Cost type
	CostTypeMonthlyComputeCost CostType = "MonthlyComputeCost"
	// CostTypeMonthlyLicensingCost - MonthlyLicensingCost - Cost type
	CostTypeMonthlyLicensingCost CostType = "MonthlyLicensingCost"
	// CostTypeMonthlyLinuxAzureHybridCost - MonthlyLinuxAzureHybridCost - Cost type
	CostTypeMonthlyLinuxAzureHybridCost CostType = "MonthlyLinuxAzureHybridCost"
	// CostTypeMonthlyManagementCost - MonthlyManagementCost - Cost type
	CostTypeMonthlyManagementCost CostType = "MonthlyManagementCost"
	// CostTypeMonthlyPremiumStorageCost - MonthlyPremiumStorageCost - Cost type
	CostTypeMonthlyPremiumStorageCost CostType = "MonthlyPremiumStorageCost"
	// CostTypeMonthlyPremiumV2StorageCost - MonthlyPremiumV2StorageCost - Cost type
	CostTypeMonthlyPremiumV2StorageCost CostType = "MonthlyPremiumV2StorageCost"
	// CostTypeMonthlySecurityCost - MonthlySecurityCost - Cost type
	CostTypeMonthlySecurityCost CostType = "MonthlySecurityCost"
	// CostTypeMonthlyStandardHddStorageCost - MonthlyStandardHddStorageCost - Cost type
	CostTypeMonthlyStandardHddStorageCost CostType = "MonthlyStandardHddStorageCost"
	// CostTypeMonthlyStandardSsdStorageCost - MonthlyStandardSsdStorageCost - Cost type
	CostTypeMonthlyStandardSsdStorageCost CostType = "MonthlyStandardSsdStorageCost"
	// CostTypeMonthlyStorageCost - MonthlyStorageCost - Cost type
	CostTypeMonthlyStorageCost CostType = "MonthlyStorageCost"
	// CostTypeMonthlyUltraDiskCost - MonthlyUltraDiskCost - Cost type
	CostTypeMonthlyUltraDiskCost CostType = "MonthlyUltraDiskCost"
	// CostTypeMonthlyUltraStorageCost - MonthlyUltraStorageCost - Cost type
	CostTypeMonthlyUltraStorageCost CostType = "MonthlyUltraStorageCost"
	// CostTypePatchingService - PatchingService - Cost type
	CostTypePatchingService CostType = "PatchingService"
	// CostTypeTotalMonthlyCost - TotalMonthlyCost - Cost type
	CostTypeTotalMonthlyCost CostType = "TotalMonthlyCost"
)

// PossibleCostTypeValues returns the possible values for the CostType const type.
func PossibleCostTypeValues() []CostType {
	return []CostType{
		CostTypeDataProtectionService,
		CostTypeMonitoringService,
		CostTypeMonthlyAvsExternalStorageCost,
		CostTypeMonthlyAvsNetworkCost,
		CostTypeMonthlyAvsNodeCost,
		CostTypeMonthlyAzureHybridCost,
		CostTypeMonthlyBandwidthCost,
		CostTypeMonthlyComputeCost,
		CostTypeMonthlyLicensingCost,
		CostTypeMonthlyLinuxAzureHybridCost,
		CostTypeMonthlyManagementCost,
		CostTypeMonthlyPremiumStorageCost,
		CostTypeMonthlyPremiumV2StorageCost,
		CostTypeMonthlySecurityCost,
		CostTypeMonthlyStandardHddStorageCost,
		CostTypeMonthlyStandardSsdStorageCost,
		CostTypeMonthlyStorageCost,
		CostTypeMonthlyUltraDiskCost,
		CostTypeMonthlyUltraStorageCost,
		CostTypePatchingService,
		CostTypeTotalMonthlyCost,
	}
}

// CreatedByType - The kind of entity that created the resource.
type CreatedByType string

const (
	// CreatedByTypeApplication - The entity was created by an application.
	CreatedByTypeApplication CreatedByType = "Application"
	// CreatedByTypeKey - The entity was created by a key.
	CreatedByTypeKey CreatedByType = "Key"
	// CreatedByTypeManagedIdentity - The entity was created by a managed identity.
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	// CreatedByTypeUser - The entity was created by a user.
	CreatedByTypeUser CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// EnvironmentType - Environment Type
type EnvironmentType string

const (
	// EnvironmentTypeDevTest - DevTest - Environment Type
	EnvironmentTypeDevTest EnvironmentType = "DevTest"
	// EnvironmentTypeProduction - Production - Environment Type
	EnvironmentTypeProduction EnvironmentType = "Production"
	// EnvironmentTypeUnknown - Unknown - Environment Type
	EnvironmentTypeUnknown EnvironmentType = "Unknown"
)

// PossibleEnvironmentTypeValues returns the possible values for the EnvironmentType const type.
func PossibleEnvironmentTypeValues() []EnvironmentType {
	return []EnvironmentType{
		EnvironmentTypeDevTest,
		EnvironmentTypeProduction,
		EnvironmentTypeUnknown,
	}
}

// GuestOperatingSystemArchitecture - Guest operating system architecture
type GuestOperatingSystemArchitecture string

const (
	// GuestOperatingSystemArchitectureUnknown - Unknown - Guest operating system architecture
	GuestOperatingSystemArchitectureUnknown GuestOperatingSystemArchitecture = "Unknown"
	// GuestOperatingSystemArchitectureX64 - X64 - Guest operating system architecture
	GuestOperatingSystemArchitectureX64 GuestOperatingSystemArchitecture = "X64"
	// GuestOperatingSystemArchitectureX86 - X86 - Guest operating system architecture
	GuestOperatingSystemArchitectureX86 GuestOperatingSystemArchitecture = "X86"
)

// PossibleGuestOperatingSystemArchitectureValues returns the possible values for the GuestOperatingSystemArchitecture const type.
func PossibleGuestOperatingSystemArchitectureValues() []GuestOperatingSystemArchitecture {
	return []GuestOperatingSystemArchitecture{
		GuestOperatingSystemArchitectureUnknown,
		GuestOperatingSystemArchitectureX64,
		GuestOperatingSystemArchitectureX86,
	}
}

// LicensingProgram - The licensing program.
type LicensingProgram string

const (
	// LicensingProgramEA - Enterprise agreement.
	LicensingProgramEA LicensingProgram = "EA"
	// LicensingProgramMCA - Microsoft customer agreement.
	LicensingProgramMCA LicensingProgram = "MCA"
	// LicensingProgramRetail - Retail/Pay as you go.
	LicensingProgramRetail LicensingProgram = "Retail"
	// LicensingProgramUnknown - Not known
	LicensingProgramUnknown LicensingProgram = "Unknown"
)

// PossibleLicensingProgramValues returns the possible values for the LicensingProgram const type.
func PossibleLicensingProgramValues() []LicensingProgram {
	return []LicensingProgram{
		LicensingProgramEA,
		LicensingProgramMCA,
		LicensingProgramRetail,
		LicensingProgramUnknown,
	}
}

// LinkageKind - Linkage kind
type LinkageKind string

const (
	// LinkageKindDatabase - Database - Linkage kind
	LinkageKindDatabase LinkageKind = "Database"
	// LinkageKindInstance - Instance - Linkage kind
	LinkageKindInstance LinkageKind = "Instance"
	// LinkageKindMachine - Machine - Linkage kind
	LinkageKindMachine LinkageKind = "Machine"
	// LinkageKindServer - Server - Linkage kind
	LinkageKindServer LinkageKind = "Server"
	// LinkageKindUnknown - Unknown - Linkage kind
	LinkageKindUnknown LinkageKind = "Unknown"
	// LinkageKindWebApplication - WebApplication - Linkage kind
	LinkageKindWebApplication LinkageKind = "WebApplication"
	// LinkageKindWebServer - WebServer - Linkage kind
	LinkageKindWebServer LinkageKind = "WebServer"
)

// PossibleLinkageKindValues returns the possible values for the LinkageKind const type.
func PossibleLinkageKindValues() []LinkageKind {
	return []LinkageKind{
		LinkageKindDatabase,
		LinkageKindInstance,
		LinkageKindMachine,
		LinkageKindServer,
		LinkageKindUnknown,
		LinkageKindWebApplication,
		LinkageKindWebServer,
	}
}

// LinkageType - Linkage type
type LinkageType string

const (
	// LinkageTypeParent - Parent - Linkage type
	LinkageTypeParent LinkageType = "Parent"
	// LinkageTypeSource - Source - Linkage type
	LinkageTypeSource LinkageType = "Source"
)

// PossibleLinkageTypeValues returns the possible values for the LinkageType const type.
func PossibleLinkageTypeValues() []LinkageType {
	return []LinkageType{
		LinkageTypeParent,
		LinkageTypeSource,
	}
}

// MachineBootType - Machine Boot Type
type MachineBootType string

const (
	// MachineBootTypeBios - BIOS - Machine Boot Type
	MachineBootTypeBios MachineBootType = "BIOS"
	// MachineBootTypeEFI - EFI - Machine Boot Type
	MachineBootTypeEFI MachineBootType = "EFI"
	// MachineBootTypeNotSpecified - NotSpecified - Machine Boot Type
	MachineBootTypeNotSpecified MachineBootType = "NotSpecified"
	// MachineBootTypeUnknown - Unknown - Machine Boot Type
	MachineBootTypeUnknown MachineBootType = "Unknown"
)

// PossibleMachineBootTypeValues returns the possible values for the MachineBootType const type.
func PossibleMachineBootTypeValues() []MachineBootType {
	return []MachineBootType{
		MachineBootTypeBios,
		MachineBootTypeEFI,
		MachineBootTypeNotSpecified,
		MachineBootTypeUnknown,
	}
}

// MigrationIssuesCategory - Migration Issues Category
type MigrationIssuesCategory string

const (
	// MigrationIssuesCategoryInternal - Internal - Migration Issues Category
	MigrationIssuesCategoryInternal MigrationIssuesCategory = "Internal"
	// MigrationIssuesCategoryIssue - Issue - Migration Issues Category
	MigrationIssuesCategoryIssue MigrationIssuesCategory = "Issue"
	// MigrationIssuesCategoryWarning - Warning - Migration Issues Category
	MigrationIssuesCategoryWarning MigrationIssuesCategory = "Warning"
)

// PossibleMigrationIssuesCategoryValues returns the possible values for the MigrationIssuesCategory const type.
func PossibleMigrationIssuesCategoryValues() []MigrationIssuesCategory {
	return []MigrationIssuesCategory{
		MigrationIssuesCategoryInternal,
		MigrationIssuesCategoryIssue,
		MigrationIssuesCategoryWarning,
	}
}

// MigrationPlatform - Migration Platform
type MigrationPlatform string

const (
	// MigrationPlatformIaaS - IaaS - Migration Platform
	MigrationPlatformIaaS MigrationPlatform = "IaaS"
	// MigrationPlatformPaaS - PaaS - Migration Platform
	MigrationPlatformPaaS MigrationPlatform = "PaaS"
	// MigrationPlatformSaaS - SaaS - Migration Platform
	MigrationPlatformSaaS MigrationPlatform = "SaaS"
	// MigrationPlatformUnknown - Unknown - Migration Platform
	MigrationPlatformUnknown MigrationPlatform = "Unknown"
)

// PossibleMigrationPlatformValues returns the possible values for the MigrationPlatform const type.
func PossibleMigrationPlatformValues() []MigrationPlatform {
	return []MigrationPlatform{
		MigrationPlatformIaaS,
		MigrationPlatformPaaS,
		MigrationPlatformSaaS,
		MigrationPlatformUnknown,
	}
}

// MigrationType - Migration Type
type MigrationType string

const (
	// MigrationTypeRearchitect - Rearchitect - Migration Type
	MigrationTypeRearchitect MigrationType = "Rearchitect"
	// MigrationTypeRehost - Rehost - Migration Type
	MigrationTypeRehost MigrationType = "Rehost"
	// MigrationTypeReplatform - Replatform - Migration Type
	MigrationTypeReplatform MigrationType = "Replatform"
	// MigrationTypeRetain - Retain - Migration Type
	MigrationTypeRetain MigrationType = "Retain"
	// MigrationTypeUnknown - Unknown - Migration Type
	MigrationTypeUnknown MigrationType = "Unknown"
)

// PossibleMigrationTypeValues returns the possible values for the MigrationType const type.
func PossibleMigrationTypeValues() []MigrationType {
	return []MigrationType{
		MigrationTypeRearchitect,
		MigrationTypeRehost,
		MigrationTypeReplatform,
		MigrationTypeRetain,
		MigrationTypeUnknown,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	// OriginSystem - Indicates the operation is initiated by a system.
	OriginSystem Origin = "system"
	// OriginUser - Indicates the operation is initiated by a user.
	OriginUser Origin = "user"
	// OriginUserSystem - Indicates the operation is initiated by a user or system.
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// Percentile - Percentile for Performance Data.
type Percentile string

const (
	// PercentilePercentile50 - Percentile 50.
	PercentilePercentile50 Percentile = "Percentile50"
	// PercentilePercentile90 - Percentile 90.
	PercentilePercentile90 Percentile = "Percentile90"
	// PercentilePercentile95 - Percentile 95.
	PercentilePercentile95 Percentile = "Percentile95"
	// PercentilePercentile99 - Percentile 99.
	PercentilePercentile99 Percentile = "Percentile99"
	// PercentilePercentileUnknown - Percentile unknown.
	PercentilePercentileUnknown Percentile = "PercentileUnknown"
)

// PossiblePercentileValues returns the possible values for the Percentile const type.
func PossiblePercentileValues() []Percentile {
	return []Percentile{
		PercentilePercentile50,
		PercentilePercentile90,
		PercentilePercentile95,
		PercentilePercentile99,
		PercentilePercentileUnknown,
	}
}

// PremiumDiskSupport - Premium Disk Support
type PremiumDiskSupport string

const (
	// PremiumDiskSupportPremiumDiskNotSupported - Premium Disk Not Supported
	PremiumDiskSupportPremiumDiskNotSupported PremiumDiskSupport = "PremiumDiskNotSupported"
	// PremiumDiskSupportPremiumDiskSupported - Premium Disk Supported
	PremiumDiskSupportPremiumDiskSupported PremiumDiskSupport = "PremiumDiskSupported"
)

// PossiblePremiumDiskSupportValues returns the possible values for the PremiumDiskSupport const type.
func PossiblePremiumDiskSupportValues() []PremiumDiskSupport {
	return []PremiumDiskSupport{
		PremiumDiskSupportPremiumDiskNotSupported,
		PremiumDiskSupportPremiumDiskSupported,
	}
}

// ProvisioningState - The status of the current operation.
type ProvisioningState string

const (
	// ProvisioningStateAccepted - Resource is being Accepted.
	ProvisioningStateAccepted ProvisioningState = "Accepted"
	// ProvisioningStateCanceled - Resource provisioning Canceled.
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateDeleting - Resource is being Deleted.
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed - Resource provisioning Failed.
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateProvisioning - Resource is being Provisioned.
	ProvisioningStateProvisioning ProvisioningState = "Provisioning"
	// ProvisioningStateSucceeded - Resource provisioning Successful.
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating - Resource is being Updated.
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateAccepted,
		ProvisioningStateCanceled,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateProvisioning,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}

// SKUKind - Sku Kind
type SKUKind string

const (
	// SKUKindDetails - Details - Sku Kind
	SKUKindDetails SKUKind = "Details"
	// SKUKindEndpoint - Endpoint - Sku Kind
	SKUKindEndpoint SKUKind = "Endpoint"
)

// PossibleSKUKindValues returns the possible values for the SKUKind const type.
func PossibleSKUKindValues() []SKUKind {
	return []SKUKind{
		SKUKindDetails,
		SKUKindEndpoint,
	}
}

// SKUType - Sku type
type SKUType string

const (
	// SKUTypeAppServicePlan - AppServicePlan - Sku type
	SKUTypeAppServicePlan SKUType = "AppServicePlan"
	// SKUTypeAzureSpringApps - AzureSpringApps - Sku type
	SKUTypeAzureSpringApps SKUType = "AzureSpringApps"
	// SKUTypeCompute - Compute - Sku type
	SKUTypeCompute SKUType = "Compute"
	// SKUTypeNetwork - Network - Sku type
	SKUTypeNetwork SKUType = "Network"
	// SKUTypeStorage - Storage - Sku type
	SKUTypeStorage SKUType = "Storage"
	// SKUTypeUnknown - Unknown - Sku type
	SKUTypeUnknown SKUType = "Unknown"
)

// PossibleSKUTypeValues returns the possible values for the SKUType const type.
func PossibleSKUTypeValues() []SKUType {
	return []SKUType{
		SKUTypeAppServicePlan,
		SKUTypeAzureSpringApps,
		SKUTypeCompute,
		SKUTypeNetwork,
		SKUTypeStorage,
		SKUTypeUnknown,
	}
}

// SavingsOptions - The savings options.
type SavingsOptions string

const (
	// SavingsOptionsCustomAzureOfferCode - Custom azure offer code.
	SavingsOptionsCustomAzureOfferCode SavingsOptions = "CustomAzureOfferCode"
	// SavingsOptionsNone - No savings options.
	SavingsOptionsNone SavingsOptions = "None"
	// SavingsOptionsRI1Year - Reserved Instance for 1 year.
	SavingsOptionsRI1Year SavingsOptions = "RI1Year"
	// SavingsOptionsRI3Year - Reserved Instance for 3 years.
	SavingsOptionsRI3Year SavingsOptions = "RI3Year"
	// SavingsOptionsSavingsPlan1Year - The savings plan for 1 year.
	SavingsOptionsSavingsPlan1Year SavingsOptions = "SavingsPlan1Year"
	// SavingsOptionsSavingsPlan3Year - The savings plan for 3 years.
	SavingsOptionsSavingsPlan3Year SavingsOptions = "SavingsPlan3Year"
)

// PossibleSavingsOptionsValues returns the possible values for the SavingsOptions const type.
func PossibleSavingsOptionsValues() []SavingsOptions {
	return []SavingsOptions{
		SavingsOptionsCustomAzureOfferCode,
		SavingsOptionsNone,
		SavingsOptionsRI1Year,
		SavingsOptionsRI3Year,
		SavingsOptionsSavingsPlan1Year,
		SavingsOptionsSavingsPlan3Year,
	}
}

// SavingsType - Savings type
type SavingsType string

const (
	// SavingsTypeMonthlyAhubSQLCostSavings - MonthlyAhubSqlCostSavings - Savings type
	SavingsTypeMonthlyAhubSQLCostSavings SavingsType = "MonthlyAhubSqlCostSavings"
	// SavingsTypeMonthlyAzureHybridCostSavings - MonthlyAzureHybridCostSavings - Savings type
	SavingsTypeMonthlyAzureHybridCostSavings SavingsType = "MonthlyAzureHybridCostSavings"
	// SavingsTypeMonthlyLinuxAzureHybridCostSavings - MonthlyLinuxAzureHybridCostSavings - Savings type
	SavingsTypeMonthlyLinuxAzureHybridCostSavings SavingsType = "MonthlyLinuxAzureHybridCostSavings"
	// SavingsTypeMonthlyVcfByolCostDifference - MonthlyVcfByolCostDifference - Savings type
	SavingsTypeMonthlyVcfByolCostDifference SavingsType = "MonthlyVcfByolCostDifference"
)

// PossibleSavingsTypeValues returns the possible values for the SavingsType const type.
func PossibleSavingsTypeValues() []SavingsType {
	return []SavingsType{
		SavingsTypeMonthlyAhubSQLCostSavings,
		SavingsTypeMonthlyAzureHybridCostSavings,
		SavingsTypeMonthlyLinuxAzureHybridCostSavings,
		SavingsTypeMonthlyVcfByolCostDifference,
	}
}

// ScopeType - Scope type
type ScopeType string

const (
	// ScopeTypeAzureResourceGraphQuery - AzureResourceGraphQuery - Scope type
	ScopeTypeAzureResourceGraphQuery ScopeType = "AzureResourceGraphQuery"
	// ScopeTypeServerGroupID - ServerGroupId - Scope type
	ScopeTypeServerGroupID ScopeType = "ServerGroupId"
)

// PossibleScopeTypeValues returns the possible values for the ScopeType const type.
func PossibleScopeTypeValues() []ScopeType {
	return []ScopeType{
		ScopeTypeAzureResourceGraphQuery,
		ScopeTypeServerGroupID,
	}
}

// StrategyType - Strategy type
type StrategyType string

const (
	// StrategyTypeCostOptimized - CostOptimized - Strategy type
	StrategyTypeCostOptimized StrategyType = "CostOptimized"
	// StrategyTypeEffortOptimized - EffortOptimized - Strategy type
	StrategyTypeEffortOptimized StrategyType = "EffortOptimized"
	// StrategyTypePaaSPreferred - PaaSPreferred - Strategy type
	StrategyTypePaaSPreferred StrategyType = "PaaSPreferred"
)

// PossibleStrategyTypeValues returns the possible values for the StrategyType const type.
func PossibleStrategyTypeValues() []StrategyType {
	return []StrategyType{
		StrategyTypeCostOptimized,
		StrategyTypeEffortOptimized,
		StrategyTypePaaSPreferred,
	}
}

// SummaryType - Summary Type
type SummaryType string

const (
	// SummaryTypeStrategy - Strategy - Summary Type
	SummaryTypeStrategy SummaryType = "Strategy"
	// SummaryTypeTarget - Target - Summary Type
	SummaryTypeTarget SummaryType = "Target"
	// SummaryTypeUnknown - Unknown - Summary Type
	SummaryTypeUnknown SummaryType = "Unknown"
)

// PossibleSummaryTypeValues returns the possible values for the SummaryType const type.
func PossibleSummaryTypeValues() []SummaryType {
	return []SummaryType{
		SummaryTypeStrategy,
		SummaryTypeTarget,
		SummaryTypeUnknown,
	}
}

// TimeRange - Time Range for Performance Data.
type TimeRange string

const (
	// TimeRangeCustom - Custom Time Range.
	TimeRangeCustom TimeRange = "Custom"
	// TimeRangeDay - Daily.
	TimeRangeDay TimeRange = "Day"
	// TimeRangeMonth - Monthly.
	TimeRangeMonth TimeRange = "Month"
	// TimeRangeWeek - Weekly.
	TimeRangeWeek TimeRange = "Week"
)

// PossibleTimeRangeValues returns the possible values for the TimeRange const type.
func PossibleTimeRangeValues() []TimeRange {
	return []TimeRange{
		TimeRangeCustom,
		TimeRangeDay,
		TimeRangeMonth,
		TimeRangeWeek,
	}
}

// UltraDiskSupport - Ultra Disk Support
type UltraDiskSupport string

const (
	// UltraDiskSupportUltraDiskNotSupported - Ultra Disk Not Supported
	UltraDiskSupportUltraDiskNotSupported UltraDiskSupport = "UltraDiskNotSupported"
	// UltraDiskSupportUltraDiskSupported - Ultra Disk Supported
	UltraDiskSupportUltraDiskSupported UltraDiskSupport = "UltraDiskSupported"
)

// PossibleUltraDiskSupportValues returns the possible values for the UltraDiskSupport const type.
func PossibleUltraDiskSupportValues() []UltraDiskSupport {
	return []UltraDiskSupport{
		UltraDiskSupportUltraDiskNotSupported,
		UltraDiskSupportUltraDiskSupported,
	}
}

// VMFamilyCategoryItem - Vm Family Category Item
type VMFamilyCategoryItem string

const (
	// VMFamilyCategoryItemComputeOptimized - ComputeOptimized Vm Family Category Item
	VMFamilyCategoryItemComputeOptimized VMFamilyCategoryItem = "ComputeOptimized"
	// VMFamilyCategoryItemConfidential - Confidential Vm Family Category Item
	VMFamilyCategoryItemConfidential VMFamilyCategoryItem = "Confidential"
	// VMFamilyCategoryItemGeneralPurpose - GeneralPurpose Vm Family Category Item
	VMFamilyCategoryItemGeneralPurpose VMFamilyCategoryItem = "GeneralPurpose"
	// VMFamilyCategoryItemGpuOptimized - GpuOptimized Vm Family Category Item
	VMFamilyCategoryItemGpuOptimized VMFamilyCategoryItem = "GpuOptimized"
	// VMFamilyCategoryItemHighPerformanceCompute - HighPerformanceCompute Vm Family Category Item
	VMFamilyCategoryItemHighPerformanceCompute VMFamilyCategoryItem = "HighPerformanceCompute"
	// VMFamilyCategoryItemMemoryOptimized - MemoryOptimized Vm Family Category Item
	VMFamilyCategoryItemMemoryOptimized VMFamilyCategoryItem = "MemoryOptimized"
	// VMFamilyCategoryItemStorageOptimized - StorageOptimized Vm Family Category Item
	VMFamilyCategoryItemStorageOptimized VMFamilyCategoryItem = "StorageOptimized"
	// VMFamilyCategoryItemSupportsPremiumStorage - SupportsPremiumStorage Vm Family Category Item
	VMFamilyCategoryItemSupportsPremiumStorage VMFamilyCategoryItem = "SupportsPremiumStorage"
	// VMFamilyCategoryItemSupportsUltraDiskStorage - SupportsUltraDiskStorage Vm Family Category Item
	VMFamilyCategoryItemSupportsUltraDiskStorage VMFamilyCategoryItem = "SupportsUltraDiskStorage"
	// VMFamilyCategoryItemUnknown - Unknown - Vm Family Category Item
	VMFamilyCategoryItemUnknown VMFamilyCategoryItem = "Unknown"
)

// PossibleVMFamilyCategoryItemValues returns the possible values for the VMFamilyCategoryItem const type.
func PossibleVMFamilyCategoryItemValues() []VMFamilyCategoryItem {
	return []VMFamilyCategoryItem{
		VMFamilyCategoryItemComputeOptimized,
		VMFamilyCategoryItemConfidential,
		VMFamilyCategoryItemGeneralPurpose,
		VMFamilyCategoryItemGpuOptimized,
		VMFamilyCategoryItemHighPerformanceCompute,
		VMFamilyCategoryItemMemoryOptimized,
		VMFamilyCategoryItemStorageOptimized,
		VMFamilyCategoryItemSupportsPremiumStorage,
		VMFamilyCategoryItemSupportsUltraDiskStorage,
		VMFamilyCategoryItemUnknown,
	}
}

// WorkloadType - Migration Workload type
type WorkloadType string

const (
	// WorkloadTypeDatabase - Database - Migration Workload type
	WorkloadTypeDatabase WorkloadType = "Database"
	// WorkloadTypeHost - Host - Migration Workload type
	WorkloadTypeHost WorkloadType = "Host"
	// WorkloadTypeInstance - Instance - Migration Workload type
	WorkloadTypeInstance WorkloadType = "Instance"
	// WorkloadTypeMachine - Machine - Migration Workload type
	WorkloadTypeMachine WorkloadType = "Machine"
	// WorkloadTypeManagementServer - ManagementServer - Migration Workload type
	WorkloadTypeManagementServer WorkloadType = "ManagementServer"
	// WorkloadTypeServer - Server - Migration Workload type
	WorkloadTypeServer WorkloadType = "Server"
	// WorkloadTypeUnknown - Unknown - Migration Workload type
	WorkloadTypeUnknown WorkloadType = "Unknown"
	// WorkloadTypeWebApplication - WebApplication - Migration Workload type
	WorkloadTypeWebApplication WorkloadType = "WebApplication"
	// WorkloadTypeWebServer - WebServer - Migration Workload type
	WorkloadTypeWebServer WorkloadType = "WebServer"
)

// PossibleWorkloadTypeValues returns the possible values for the WorkloadType const type.
func PossibleWorkloadTypeValues() []WorkloadType {
	return []WorkloadType{
		WorkloadTypeDatabase,
		WorkloadTypeHost,
		WorkloadTypeInstance,
		WorkloadTypeMachine,
		WorkloadTypeManagementServer,
		WorkloadTypeServer,
		WorkloadTypeUnknown,
		WorkloadTypeWebApplication,
		WorkloadTypeWebServer,
	}
}
