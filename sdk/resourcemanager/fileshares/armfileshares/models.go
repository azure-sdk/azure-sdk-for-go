// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armfileshares

import "time"

// CheckNameAvailabilityRequest - The check availability request body.
type CheckNameAvailabilityRequest struct {
	// The name of the resource for which availability needs to be checked.
	Name *string

	// The resource type.
	Type *string
}

// CheckNameAvailabilityResponse - The check availability result.
type CheckNameAvailabilityResponse struct {
	// Detailed reason why the given name is not available.
	Message *string

	// Indicates if the resource name is available.
	NameAvailable *bool

	// The reason why the given name is not available.
	Reason *CheckNameAvailabilityReason
}

// FileShare - File share resource
type FileShare struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// The resource-specific properties for this resource.
	Properties *FileShareProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; The resource name of the file share, as seen by the administrator through Azure Resource Manager.
	Name *string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// FileShareListResult - The response of a FileShare list operation.
type FileShareListResult struct {
	// REQUIRED; The FileShare items on this page
	Value []*FileShare

	// The link to the next page of items
	NextLink *string
}

// FileShareProperties - File share properties
type FileShareProperties struct {
	// The storage media tier of the file share.
	MediaTier *MediaTier

	// The name of the file share as seen by the end user when mounting the share, such as in a URI or UNC format in their operating
	// system.
	MountName *string

	// Protocol settings specific NFS.
	NfsProtocolProperties *NfsProtocolProperties

	// The file sharing protocol for this file share.
	Protocol *Protocol

	// The provisioned IO / sec of the share.
	ProvisionedIOPerSec *int32

	// The provisioned storage size of the share in GiB (1 GiB is 1024^3 bytes or 1073741824 bytes). A component of the file share's
	// bill is the provisioned storage, regardless of the amount of used storage.
	ProvisionedStorageGiB *int32

	// The provisioned throughput / sec of the share.
	ProvisionedThroughputMiBPerSec *int32

	// The set of properties for control public access.
	PublicAccessProperties *PublicAccessProperties

	// Gets or sets allow or disallow public network access to azure managed file share
	PublicNetworkAccess *PublicNetworkAccess

	// The chosen redundancy level of the file share.
	Redundancy *Redundancy

	// READ-ONLY; The host name of the file share.
	HostName *string

	// READ-ONLY; Burst IOPS are extra buffer IOPS enabling you to consume more than your provisioned IOPS for a short period
	// of time, depending on the burst credits available for your share.
	IncludedBurstIOPerSec *int32

	// READ-ONLY; Max burst IOPS credits shows the maximum number of burst credits the share can have at the current IOPS provisioning
	// level.
	MaxBurstIOPerSecCredits *int64

	// READ-ONLY; The list of associated private endpoint connections.
	PrivateEndpointConnections []*PrivateEndpointConnection

	// READ-ONLY; A date/time value that specifies when the provisioned IOPS for the file share is permitted to be reduced.
	ProvisionedIOPerSecNextAllowedDowngrade *time.Time

	// READ-ONLY; A date/time value that specifies when the provisioned storage for the file share is permitted to be reduced.
	ProvisionedStorageNextAllowedDowngrade *time.Time

	// READ-ONLY; A date/time value that specifies when the provisioned throughput for the file share is permitted to be reduced.
	ProvisionedThroughputNextAllowedDowngrade *time.Time

	// READ-ONLY; The status of the last operation.
	ProvisioningState *FileShareProvisioningState
}

// FileShareSnapshot resource
type FileShareSnapshot struct {
	// The resource-specific properties for this resource.
	Properties *FileShareSnapshotProperties

	// READ-ONLY; The name of the FileShareSnapshot
	Name *string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// FileShareSnapshotListResult - The response of a FileShareSnapshot list operation.
type FileShareSnapshotListResult struct {
	// REQUIRED; The FileShareSnapshot items on this page
	Value []*FileShareSnapshot

	// The link to the next page of items
	NextLink *string
}

// FileShareSnapshotProperties - FileShareSnapshot properties
type FileShareSnapshotProperties struct {
	// The metadata
	Metadata []*MetadataItem

	// READ-ONLY; The initiator of the FileShareSnapshot
	InitiatorID *string

	// READ-ONLY; The status of the last operation.
	ProvisioningState *FileShareProvisioningState

	// READ-ONLY; The FileShareSnapshot time in UTC in string representation
	SnapshotTime *string
}

// FileShareSnapshotUpdate - The type used for update operations of the FileShareSnapshot.
type FileShareSnapshotUpdate struct {
	// The resource-specific properties for this resource.
	Properties *FileShareSnapshotUpdateProperties
}

// FileShareSnapshotUpdateProperties - The updatable properties of the FileShareSnapshot.
type FileShareSnapshotUpdateProperties struct {
	// The metadata
	Metadata []*MetadataItem
}

// FileShareUpdate - The type used for update operations of the FileShare.
type FileShareUpdate struct {
	// The resource-specific properties for this resource.
	Properties *FileShareUpdateProperties

	// Resource tags.
	Tags map[string]*string
}

// FileShareUpdateProperties - The updatable properties of the FileShare.
type FileShareUpdateProperties struct {
	// Protocol settings specific NFS.
	NfsProtocolProperties *NfsProtocolProperties

	// The provisioned IO / sec of the share.
	ProvisionedIOPerSec *int32

	// The provisioned storage size of the share in GiB (1 GiB is 1024^3 bytes or 1073741824 bytes). A component of the file share's
	// bill is the provisioned storage, regardless of the amount of used storage.
	ProvisionedStorageGiB *int32

	// The provisioned throughput / sec of the share.
	ProvisionedThroughputMiBPerSec *int32

	// The set of properties for control public access.
	PublicAccessProperties *PublicAccessProperties

	// Gets or sets allow or disallow public network access to azure managed file share
	PublicNetworkAccess *PublicNetworkAccess
}

// MetadataItem - FileShareSnapshot Metadata item
type MetadataItem struct {
	// REQUIRED; The name of the metadata item.
	Name *string

	// REQUIRED; The value of the metadata item.
	Value *string
}

// NfsProtocolProperties - Properties specific to the NFS protocol.
type NfsProtocolProperties struct {
	// REQUIRED; Root squash defines how root users on clients are mapped to the NFS share.
	RootSquash *ShareRootSquash
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Extensible enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for Azure
	// Resource Manager/control-plane operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for and operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// REQUIRED; The Operation items on this page
	Value []*Operation

	// The link to the next page of items
	NextLink *string
}

// PrivateEndpoint - The Private Endpoint resource.
type PrivateEndpoint struct {
	// READ-ONLY; The resource identifier for private endpoint
	ID *string
}

// PrivateEndpointConnection - The private endpoint connection resource
type PrivateEndpointConnection struct {
	// The private endpoint connection properties
	Properties *PrivateEndpointConnectionProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// PrivateEndpointConnectionProperties - Properties of the private endpoint connection.
type PrivateEndpointConnectionProperties struct {
	// REQUIRED; A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState

	// The private endpoint resource.
	PrivateEndpoint *PrivateEndpoint

	// READ-ONLY; The group ids for the private endpoint resource.
	GroupIDs []*string

	// READ-ONLY; The provisioning state of the private endpoint connection resource.
	ProvisioningState *PrivateEndpointConnectionProvisioningState
}

// PrivateLinkServiceConnectionState - A collection of information about the state of the connection between service consumer
// and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string

	// The reason for approval/rejection of the connection.
	Description *string

	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *PrivateEndpointServiceConnectionStatus
}

// PublicAccessProperties - The set of properties for control public access.
type PublicAccessProperties struct {
	// REQUIRED; The allowed set of subnets when access is restricted.
	AllowedSubnets []*string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}
