// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdatabasefleetmanager

import "time"

// DatabaseChangeTierProperties - A database change tier definition.
type DatabaseChangeTierProperties struct {
	// A target tier name.
	TargetTierName *string
}

// DatabaseIdentity - Database Identity properties.
type DatabaseIdentity struct {
	// Client Id of the database identity.
	ClientID *string

	// Principal Id of the database identity.
	PrincipalID *string

	// Resource Id of the database identity.
	ResourceID *string
}

// DatabaseRenameProperties - A database rename definition.
type DatabaseRenameProperties struct {
	// New database name.
	NewName *string
}

// DestinationTierOverride - A destination tier override.
type DestinationTierOverride struct {
	// REQUIRED; Resource name.
	ResourceName *string

	// REQUIRED; Resource type.
	ResourceType *ResourceType

	// REQUIRED; Destination tier name.
	TierName *string
}

// FirewallRule - A firewall rule.
type FirewallRule struct {
	// A Firewall rule properties.
	Properties *FirewallRuleProperties

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// FirewallRuleListResult - The response of a FirewallRule list operation.
type FirewallRuleListResult struct {
	// REQUIRED; The FirewallRule items on this page
	Value []*FirewallRule

	// The link to the next page of items
	NextLink *string
}

// FirewallRuleProperties - A Firewall rule properties.
type FirewallRuleProperties struct {
	// End IP address.
	EndIPAddress *string

	// Start IP address.
	StartIPAddress *string

	// READ-ONLY; Provisioning state.
	ProvisioningState *AzureProvisioningState
}

// Fleet - A Database Fleet.
type Fleet struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// The fleet properties.
	Properties *FleetProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// FleetDatabase - A fleet database.
type FleetDatabase struct {
	// Fleet database properties.
	Properties *FleetDatabaseProperties

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// FleetDatabaseListResult - The response of a FleetDatabase list operation.
type FleetDatabaseListResult struct {
	// REQUIRED; The FleetDatabase items on this page
	Value []*FleetDatabase

	// The link to the next page of items
	NextLink *string
}

// FleetDatabaseProperties - Fleet database properties.
type FleetDatabaseProperties struct {
	// Database collation.
	Collation *string

	// Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must
	// be specified) PointInTimeRestore - Create a database by restoring source
	// database from a point in time (source database name and restore from time must be specified)
	CreateMode *DatabaseCreateMode

	// Identity property.
	Identity *Identity

	// Additional database properties to be applied as the underlying database resource tags.
	ResourceTags map[string]*string

	// Restore from time when CreateMode is PointInTimeRestore.
	RestoreFromTime *time.Time

	// Source database name used when CreateMode is Copy or PointInTimeRestore.
	SourceDatabaseName *string

	// Name of the tier this database belongs to.
	TierName *string

	// Transparent Data Encryption properties
	TransparentDataEncryption *TransparentDataEncryption

	// READ-ONLY; Backup retention in days.
	BackupRetentionDays *int32

	// READ-ONLY; Connection string to connect to the database with.
	ConnectionString *string

	// READ-ONLY; Maximum database size in Gb.
	DatabaseSizeGbMax *int32

	// READ-ONLY; Earliest restore time.
	EarliestRestoreTime *time.Time

	// READ-ONLY; Latest restore time.
	LatestRestoreTime *time.Time

	// READ-ONLY; Resource identifier for the underlying database resource.
	OriginalDatabaseID *string

	// READ-ONLY; Database state.
	ProvisioningState *AzureProvisioningState

	// READ-ONLY; If true, database is recoverable.
	Recoverable *bool
}

// FleetListResult - The response of a Fleet list operation.
type FleetListResult struct {
	// REQUIRED; The Fleet items on this page
	Value []*Fleet

	// The link to the next page of items
	NextLink *string
}

// FleetProperties - The Database Fleet properties.
type FleetProperties struct {
	// Fleet description.
	Description *string

	// READ-ONLY; Provisioning state.
	ProvisioningState *AzureProvisioningState
}

// FleetTier - A SQL Database Fleet tier.
type FleetTier struct {
	// A Fleet tier properties.
	Properties *FleetTierProperties

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// FleetTierListResult - The response of a FleetTier list operation.
type FleetTierListResult struct {
	// REQUIRED; The FleetTier items on this page
	Value []*FleetTier

	// The link to the next page of items
	NextLink *string
}

// FleetTierProperties - A Fleet tier properties.
type FleetTierProperties struct {
	// Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.
	Capacity *int32

	// Maximum allocated capacity per database, in units matching the specified service tier.
	DatabaseCapacityMax *float64

	// Minimum allocated capacity per database, in units matching the specified service tier.
	DatabaseCapacityMin *float64

	// Maximum database size in Gb.
	DatabaseSizeGbMax *int32

	// Family of provisioned resources, for example Gen5.
	Family *string

	// Number of high availability replicas for databases in this tier.
	HighAvailabilityReplicaCount *int32

	// Maximum number of databases per pool.
	PoolNumOfDatabasesMax *int32

	// If true, databases are pooled.
	Pooled *bool

	// If true, serverless resources are provisioned in the tier.
	Serverless *bool

	// Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.
	ServiceTier *string

	// Enable zone redundancy for all databases in this tier.
	ZoneRedundancy *ZoneRedundancy

	// READ-ONLY; If true, tier is disabled.
	Disabled *bool

	// READ-ONLY; Provisioning state.
	ProvisioningState *AzureProvisioningState
}

// FleetUpdate - An update to a Database Fleet.
type FleetUpdate struct {
	// The Database Fleet properties.
	Properties *FleetProperties

	// Resource tags.
	Tags map[string]*string
}

// Fleetspace - A fleetspace.
type Fleetspace struct {
	// A Fleetspace properties.
	Properties *FleetspaceProperties

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// FleetspaceListResult - The response of a Fleetspace list operation.
type FleetspaceListResult struct {
	// REQUIRED; The Fleetspace items on this page
	Value []*Fleetspace

	// The link to the next page of items
	NextLink *string
}

// FleetspaceProperties - A Fleetspace properties.
type FleetspaceProperties struct {
	// Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.
	CapacityMax *int32

	// Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.
	MainPrincipal *MainPrincipal

	// READ-ONLY; Fleetspace state.
	ProvisioningState *AzureProvisioningState
}

// Identity - Database Identity.
type Identity struct {
	// The federated client id for the SQL Database. It is used for cross tenant CMK scenario.
	FederatedClientID *string

	// Identity type of the main principal.
	IdentityType *IdentityType

	// User identity ids
	UserAssignedIdentities []*DatabaseIdentity
}

// MainPrincipal - A main principal.
type MainPrincipal struct {
	// Application Id of the main principal.
	ApplicationID *string

	// Login name of the main principal.
	Login *string

	// Object Id of the main principal.
	ObjectID *string

	// Principal type of the main principal.
	PrincipalType *PrincipalType

	// Tenant Id of the main principal.
	TenantID *string
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation
}

// RegisterServerProperties - Server registration definition.
type RegisterServerProperties struct {
	// Destination tier overrides.
	DestinationTierOverrides []*DestinationTierOverride

	// Source resource group name.
	SourceResourceGroupName *string

	// Source SQL Server name.
	SourceServerName *string

	// Source subscription id.
	SourceSubscriptionID *string

	// Destination tier name.
	TierName *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// TransparentDataEncryption - Transparent Data Encryption properties.
type TransparentDataEncryption struct {
	// Enable key auto rotation
	EnableAutoRotation *bool

	// Customer Managed Key (CMK) Uri.
	KeyURI *string

	// Additional Keys
	Keys []*string
}
