//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsovereign

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sovereign/armsovereign"
	moduleVersion = "v0.1.0"
)

// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// AuthoringStatus - The authoring status for a landing zone configuration.
type AuthoringStatus string

const (
	// AuthoringStatusAuthoring - This is the default status when a create configuration request is made. In this state, the Landing
	// Zone configuration can be updated.
	AuthoringStatusAuthoring AuthoringStatus = "Authoring"
	// AuthoringStatusDisabled - This status is set when the landing zone configuration is no longer in use.
	AuthoringStatusDisabled AuthoringStatus = "Disabled"
	// AuthoringStatusReadyForUse - This status is set when the configuration changes are complete and the configuration is ready
	// for code generation
	AuthoringStatusReadyForUse AuthoringStatus = "ReadyForUse"
)

// PossibleAuthoringStatusValues returns the possible values for the AuthoringStatus const type.
func PossibleAuthoringStatusValues() []AuthoringStatus {
	return []AuthoringStatus{
		AuthoringStatusAuthoring,
		AuthoringStatusDisabled,
		AuthoringStatusReadyForUse,
	}
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// FirewallCreationOptions - The input values for creating or using an existing firewall resource.
type FirewallCreationOptions string

const (
	// FirewallCreationOptionsNone - Value when a firewall resource is not created.
	FirewallCreationOptionsNone FirewallCreationOptions = "None"
	// FirewallCreationOptionsPremium - Value when the firewall creation is based on the premium SKU.
	FirewallCreationOptionsPremium FirewallCreationOptions = "Premium"
	// FirewallCreationOptionsStandard - Value when the firewall creation is based on the standard SKU.
	FirewallCreationOptionsStandard FirewallCreationOptions = "Standard"
)

// PossibleFirewallCreationOptionsValues returns the possible values for the FirewallCreationOptions const type.
func PossibleFirewallCreationOptionsValues() []FirewallCreationOptions {
	return []FirewallCreationOptions{
		FirewallCreationOptionsNone,
		FirewallCreationOptionsPremium,
		FirewallCreationOptionsStandard,
	}
}

// InfrastructureAsCodeOutputOptions - Output options for landing zone code generation.
type InfrastructureAsCodeOutputOptions string

const (
	// InfrastructureAsCodeOutputOptionsARM - Value when generating landing zone code in Arm.
	InfrastructureAsCodeOutputOptionsARM InfrastructureAsCodeOutputOptions = "ARM"
	// InfrastructureAsCodeOutputOptionsBicep - Value when generating Landing Zone code in Bicep.
	InfrastructureAsCodeOutputOptionsBicep InfrastructureAsCodeOutputOptions = "Bicep"
)

// PossibleInfrastructureAsCodeOutputOptionsValues returns the possible values for the InfrastructureAsCodeOutputOptions const type.
func PossibleInfrastructureAsCodeOutputOptionsValues() []InfrastructureAsCodeOutputOptions {
	return []InfrastructureAsCodeOutputOptions{
		InfrastructureAsCodeOutputOptionsARM,
		InfrastructureAsCodeOutputOptionsBicep,
	}
}

// ManagedIdentityResourceType - The authoring status for a landing zone configuration.
type ManagedIdentityResourceType string

const (
	// ManagedIdentityResourceTypeSystemAssigned - System assigned managed identity.
	ManagedIdentityResourceTypeSystemAssigned ManagedIdentityResourceType = "SystemAssigned"
	// ManagedIdentityResourceTypeUserAssigned - User assigned managed identity.
	ManagedIdentityResourceTypeUserAssigned ManagedIdentityResourceType = "UserAssigned"
)

// PossibleManagedIdentityResourceTypeValues returns the possible values for the ManagedIdentityResourceType const type.
func PossibleManagedIdentityResourceTypeValues() []ManagedIdentityResourceType {
	return []ManagedIdentityResourceType{
		ManagedIdentityResourceTypeSystemAssigned,
		ManagedIdentityResourceTypeUserAssigned,
	}
}

// ManagedServiceIdentityType - Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                       ManagedServiceIdentityType = "None"
	ManagedServiceIdentityTypeSystemAssigned             ManagedServiceIdentityType = "SystemAssigned"
	ManagedServiceIdentityTypeSystemAssignedUserAssigned ManagedServiceIdentityType = "SystemAssigned,UserAssigned"
	ManagedServiceIdentityTypeUserAssigned               ManagedServiceIdentityType = "UserAssigned"
)

// PossibleManagedServiceIdentityTypeValues returns the possible values for the ManagedServiceIdentityType const type.
func PossibleManagedServiceIdentityTypeValues() []ManagedServiceIdentityType {
	return []ManagedServiceIdentityType{
		ManagedServiceIdentityTypeNone,
		ManagedServiceIdentityTypeSystemAssigned,
		ManagedServiceIdentityTypeSystemAssignedUserAssigned,
		ManagedServiceIdentityTypeUserAssigned,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	OriginSystem     Origin = "system"
	OriginUser       Origin = "user"
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// ProvisioningState - The custom provisioning state.
type ProvisioningState string

const (
	// ProvisioningStateCanceled - Resource creation was canceled.
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateCreating - The state of the resource when creating
	ProvisioningStateCreating ProvisioningState = "Creating"
	// ProvisioningStateDeleting - The state of the resource when deleting
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed - Resource creation failed.
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateSucceeded - Resource has been created.
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating - The state of the resource when updating
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateCanceled,
		ProvisioningStateCreating,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}

// ResourceCreationOptions - Options for resource creation.
type ResourceCreationOptions string

const (
	// ResourceCreationOptionsNo - Value to not create a new resource.
	ResourceCreationOptionsNo ResourceCreationOptions = "No"
	// ResourceCreationOptionsUseExisting - Value to use an existing resource.
	ResourceCreationOptionsUseExisting ResourceCreationOptions = "UseExisting"
	// ResourceCreationOptionsYes - Value to create a new resource.
	ResourceCreationOptionsYes ResourceCreationOptions = "Yes"
)

// PossibleResourceCreationOptionsValues returns the possible values for the ResourceCreationOptions const type.
func PossibleResourceCreationOptionsValues() []ResourceCreationOptions {
	return []ResourceCreationOptions{
		ResourceCreationOptionsNo,
		ResourceCreationOptionsUseExisting,
		ResourceCreationOptionsYes,
	}
}

// ResourceType - The input values for defining resource types for naming conventions.
type ResourceType string

const (
	// ResourceTypeAutomationAccounts - Value when customer wants to provide custom naming convention for automation account.
	ResourceTypeAutomationAccounts ResourceType = "automationAccounts"
	// ResourceTypeAzureFirewalls - Value when customer wants to provide custom naming convention for Azure Firewall.
	ResourceTypeAzureFirewalls ResourceType = "azureFirewalls"
	// ResourceTypeBastionHosts - Value when customer wants to provide custom naming convention for Bastion.
	ResourceTypeBastionHosts ResourceType = "bastionHosts"
	// ResourceTypeDashboards - Value when customer wants to provide custom naming convention for dashboard.
	ResourceTypeDashboards ResourceType = "dashboards"
	// ResourceTypeDdosProtectionPlans - Value when customer wants to provide custom naming convention for DDoS protection plan.
	ResourceTypeDdosProtectionPlans ResourceType = "ddosProtectionPlans"
	// ResourceTypeNetworkSecurityGroups - Value when customer wants to provide custom naming convention for Bastion NSG.
	ResourceTypeNetworkSecurityGroups ResourceType = "networkSecurityGroups"
	// ResourceTypeRouteTables - Value when customer wants to provide custom naming convention for route table.
	ResourceTypeRouteTables ResourceType = "routeTables"
	// ResourceTypeUserAssignedIdentities - Value when customer wants to provide custom naming convention for managed identity.
	ResourceTypeUserAssignedIdentities ResourceType = "userAssignedIdentities"
	// ResourceTypeVirtualNetworks - Value when customer wants to provide custom naming convention for virtual network.
	ResourceTypeVirtualNetworks ResourceType = "virtualNetworks"
	// ResourceTypeWorkspaces - Value when customer wants to provide custom naming convention for Log Analytics workspace.
	ResourceTypeWorkspaces ResourceType = "workspaces"
)

// PossibleResourceTypeValues returns the possible values for the ResourceType const type.
func PossibleResourceTypeValues() []ResourceType {
	return []ResourceType{
		ResourceTypeAutomationAccounts,
		ResourceTypeAzureFirewalls,
		ResourceTypeBastionHosts,
		ResourceTypeDashboards,
		ResourceTypeDdosProtectionPlans,
		ResourceTypeNetworkSecurityGroups,
		ResourceTypeRouteTables,
		ResourceTypeUserAssignedIdentities,
		ResourceTypeVirtualNetworks,
		ResourceTypeWorkspaces,
	}
}
