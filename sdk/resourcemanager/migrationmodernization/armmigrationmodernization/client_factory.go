//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armmigrationmodernization

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	internal *arm.Client
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	internal, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		internal: internal,
	}, nil
}

// NewDeployedResourceClient creates a new instance of DeployedResourceClient.
func (c *ClientFactory) NewDeployedResourceClient() *DeployedResourceClient {
	return &DeployedResourceClient{
		internal: c.internal,
	}
}

// NewMigrateAgentClient creates a new instance of MigrateAgentClient.
func (c *ClientFactory) NewMigrateAgentClient() *MigrateAgentClient {
	return &MigrateAgentClient{
		internal: c.internal,
	}
}

// NewMigrateAgentOperationStatusClient creates a new instance of MigrateAgentOperationStatusClient.
func (c *ClientFactory) NewMigrateAgentOperationStatusClient() *MigrateAgentOperationStatusClient {
	return &MigrateAgentOperationStatusClient{
		internal: c.internal,
	}
}

// NewModernizeProjectClient creates a new instance of ModernizeProjectClient.
func (c *ClientFactory) NewModernizeProjectClient() *ModernizeProjectClient {
	return &ModernizeProjectClient{
		internal: c.internal,
	}
}

// NewModernizeProjectOperationStatusClient creates a new instance of ModernizeProjectOperationStatusClient.
func (c *ClientFactory) NewModernizeProjectOperationStatusClient() *ModernizeProjectOperationStatusClient {
	return &ModernizeProjectOperationStatusClient{
		internal: c.internal,
	}
}

// NewModernizeProjectStatisticsClient creates a new instance of ModernizeProjectStatisticsClient.
func (c *ClientFactory) NewModernizeProjectStatisticsClient() *ModernizeProjectStatisticsClient {
	return &ModernizeProjectStatisticsClient{
		internal: c.internal,
	}
}

// NewOperationsClient creates a new instance of OperationsClient.
func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	return &OperationsClient{
		internal: c.internal,
	}
}

// NewWorkflowClient creates a new instance of WorkflowClient.
func (c *ClientFactory) NewWorkflowClient() *WorkflowClient {
	return &WorkflowClient{
		internal: c.internal,
	}
}

// NewWorkflowOperationStatusClient creates a new instance of WorkflowOperationStatusClient.
func (c *ClientFactory) NewWorkflowOperationStatusClient() *WorkflowOperationStatusClient {
	return &WorkflowOperationStatusClient{
		internal: c.internal,
	}
}

// NewWorkloadDeploymentClient creates a new instance of WorkloadDeploymentClient.
func (c *ClientFactory) NewWorkloadDeploymentClient() *WorkloadDeploymentClient {
	return &WorkloadDeploymentClient{
		internal: c.internal,
	}
}

// NewWorkloadDeploymentOperationStatusClient creates a new instance of WorkloadDeploymentOperationStatusClient.
func (c *ClientFactory) NewWorkloadDeploymentOperationStatusClient() *WorkloadDeploymentOperationStatusClient {
	return &WorkloadDeploymentOperationStatusClient{
		internal: c.internal,
	}
}

// NewWorkloadInstanceClient creates a new instance of WorkloadInstanceClient.
func (c *ClientFactory) NewWorkloadInstanceClient() *WorkloadInstanceClient {
	return &WorkloadInstanceClient{
		internal: c.internal,
	}
}

// NewWorkloadInstanceOperationStatusClient creates a new instance of WorkloadInstanceOperationStatusClient.
func (c *ClientFactory) NewWorkloadInstanceOperationStatusClient() *WorkloadInstanceOperationStatusClient {
	return &WorkloadInstanceOperationStatusClient{
		internal: c.internal,
	}
}
