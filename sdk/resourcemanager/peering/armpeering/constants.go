// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armpeering

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/peering/armpeering"
	moduleVersion = "v1.3.0"
)

// Command - Invoked command
type Command string

const (
	CommandBgpRoute   Command = "BgpRoute"
	CommandPing       Command = "Ping"
	CommandTraceroute Command = "Traceroute"
)

// PossibleCommandValues returns the possible values for the Command const type.
func PossibleCommandValues() []Command {
	return []Command{
		CommandBgpRoute,
		CommandPing,
		CommandTraceroute,
	}
}

// ConnectionState - The state of the connection.
type ConnectionState string

const (
	ConnectionStateActive                ConnectionState = "Active"
	ConnectionStateApproved              ConnectionState = "Approved"
	ConnectionStateExternalBlocker       ConnectionState = "ExternalBlocker"
	ConnectionStateNone                  ConnectionState = "None"
	ConnectionStatePendingApproval       ConnectionState = "PendingApproval"
	ConnectionStateProvisioningCompleted ConnectionState = "ProvisioningCompleted"
	ConnectionStateProvisioningFailed    ConnectionState = "ProvisioningFailed"
	ConnectionStateProvisioningStarted   ConnectionState = "ProvisioningStarted"
	ConnectionStateTypeChangeInProgress  ConnectionState = "TypeChangeInProgress"
	ConnectionStateTypeChangeRequested   ConnectionState = "TypeChangeRequested"
	ConnectionStateValidating            ConnectionState = "Validating"
)

// PossibleConnectionStateValues returns the possible values for the ConnectionState const type.
func PossibleConnectionStateValues() []ConnectionState {
	return []ConnectionState{
		ConnectionStateActive,
		ConnectionStateApproved,
		ConnectionStateExternalBlocker,
		ConnectionStateNone,
		ConnectionStatePendingApproval,
		ConnectionStateProvisioningCompleted,
		ConnectionStateProvisioningFailed,
		ConnectionStateProvisioningStarted,
		ConnectionStateTypeChangeInProgress,
		ConnectionStateTypeChangeRequested,
		ConnectionStateValidating,
	}
}

// DirectPeeringType - The type of direct peering.
type DirectPeeringType string

const (
	DirectPeeringTypeCdn                  DirectPeeringType = "Cdn"
	DirectPeeringTypeEdge                 DirectPeeringType = "Edge"
	DirectPeeringTypeEdgeZoneForOperators DirectPeeringType = "EdgeZoneForOperators"
	DirectPeeringTypeInternal             DirectPeeringType = "Internal"
	DirectPeeringTypeIx                   DirectPeeringType = "Ix"
	DirectPeeringTypeIxRs                 DirectPeeringType = "IxRs"
	DirectPeeringTypePeerProp             DirectPeeringType = "PeerProp"
	DirectPeeringTypeTransit              DirectPeeringType = "Transit"
	DirectPeeringTypeVoice                DirectPeeringType = "Voice"
)

// PossibleDirectPeeringTypeValues returns the possible values for the DirectPeeringType const type.
func PossibleDirectPeeringTypeValues() []DirectPeeringType {
	return []DirectPeeringType{
		DirectPeeringTypeCdn,
		DirectPeeringTypeEdge,
		DirectPeeringTypeEdgeZoneForOperators,
		DirectPeeringTypeInternal,
		DirectPeeringTypeIx,
		DirectPeeringTypeIxRs,
		DirectPeeringTypePeerProp,
		DirectPeeringTypeTransit,
		DirectPeeringTypeVoice,
	}
}

type Enum0 string

const (
	Enum0Available   Enum0 = "Available"
	Enum0Unavailable Enum0 = "Unavailable"
)

// PossibleEnum0Values returns the possible values for the Enum0 const type.
func PossibleEnum0Values() []Enum0 {
	return []Enum0{
		Enum0Available,
		Enum0Unavailable,
	}
}

type Enum11 string

const (
	Enum11Active        Enum11 = "Active"
	Enum11Connect       Enum11 = "Connect"
	Enum11Established   Enum11 = "Established"
	Enum11Idle          Enum11 = "Idle"
	Enum11None          Enum11 = "None"
	Enum11OpenConfirm   Enum11 = "OpenConfirm"
	Enum11OpenReceived  Enum11 = "OpenReceived"
	Enum11OpenSent      Enum11 = "OpenSent"
	Enum11PendingAdd    Enum11 = "PendingAdd"
	Enum11PendingRemove Enum11 = "PendingRemove"
	Enum11PendingUpdate Enum11 = "PendingUpdate"
)

// PossibleEnum11Values returns the possible values for the Enum11 const type.
func PossibleEnum11Values() []Enum11 {
	return []Enum11{
		Enum11Active,
		Enum11Connect,
		Enum11Established,
		Enum11Idle,
		Enum11None,
		Enum11OpenConfirm,
		Enum11OpenReceived,
		Enum11OpenSent,
		Enum11PendingAdd,
		Enum11PendingRemove,
		Enum11PendingUpdate,
	}
}

type Enum13 string

const (
	Enum13Active        Enum13 = "Active"
	Enum13Connect       Enum13 = "Connect"
	Enum13Established   Enum13 = "Established"
	Enum13Idle          Enum13 = "Idle"
	Enum13None          Enum13 = "None"
	Enum13OpenConfirm   Enum13 = "OpenConfirm"
	Enum13OpenReceived  Enum13 = "OpenReceived"
	Enum13OpenSent      Enum13 = "OpenSent"
	Enum13PendingAdd    Enum13 = "PendingAdd"
	Enum13PendingRemove Enum13 = "PendingRemove"
	Enum13PendingUpdate Enum13 = "PendingUpdate"
)

// PossibleEnum13Values returns the possible values for the Enum13 const type.
func PossibleEnum13Values() []Enum13 {
	return []Enum13{
		Enum13Active,
		Enum13Connect,
		Enum13Established,
		Enum13Idle,
		Enum13None,
		Enum13OpenConfirm,
		Enum13OpenReceived,
		Enum13OpenSent,
		Enum13PendingAdd,
		Enum13PendingRemove,
		Enum13PendingUpdate,
	}
}

// Family - The family of the peering SKU.
type Family string

const (
	FamilyDirect   Family = "Direct"
	FamilyExchange Family = "Exchange"
)

// PossibleFamilyValues returns the possible values for the Family const type.
func PossibleFamilyValues() []Family {
	return []Family{
		FamilyDirect,
		FamilyExchange,
	}
}

// Kind - The kind of the peering.
type Kind string

const (
	KindDirect   Kind = "Direct"
	KindExchange Kind = "Exchange"
)

// PossibleKindValues returns the possible values for the Kind const type.
func PossibleKindValues() []Kind {
	return []Kind{
		KindDirect,
		KindExchange,
	}
}

// LearnedType - The prefix learned type
type LearnedType string

const (
	LearnedTypeNone               LearnedType = "None"
	LearnedTypeViaServiceProvider LearnedType = "ViaServiceProvider"
	LearnedTypeViaSession         LearnedType = "ViaSession"
)

// PossibleLearnedTypeValues returns the possible values for the LearnedType const type.
func PossibleLearnedTypeValues() []LearnedType {
	return []LearnedType{
		LearnedTypeNone,
		LearnedTypeViaServiceProvider,
		LearnedTypeViaSession,
	}
}

type LegacyPeeringsKind string

const (
	LegacyPeeringsKindDirect   LegacyPeeringsKind = "Direct"
	LegacyPeeringsKindExchange LegacyPeeringsKind = "Exchange"
)

// PossibleLegacyPeeringsKindValues returns the possible values for the LegacyPeeringsKind const type.
func PossibleLegacyPeeringsKindValues() []LegacyPeeringsKind {
	return []LegacyPeeringsKind{
		LegacyPeeringsKindDirect,
		LegacyPeeringsKindExchange,
	}
}

type LookingGlassCommand string

const (
	LookingGlassCommandBgpRoute   LookingGlassCommand = "BgpRoute"
	LookingGlassCommandPing       LookingGlassCommand = "Ping"
	LookingGlassCommandTraceroute LookingGlassCommand = "Traceroute"
)

// PossibleLookingGlassCommandValues returns the possible values for the LookingGlassCommand const type.
func PossibleLookingGlassCommandValues() []LookingGlassCommand {
	return []LookingGlassCommand{
		LookingGlassCommandBgpRoute,
		LookingGlassCommandPing,
		LookingGlassCommandTraceroute,
	}
}

type LookingGlassSourceType string

const (
	LookingGlassSourceTypeAzureRegion LookingGlassSourceType = "AzureRegion"
	LookingGlassSourceTypeEdgeSite    LookingGlassSourceType = "EdgeSite"
)

// PossibleLookingGlassSourceTypeValues returns the possible values for the LookingGlassSourceType const type.
func PossibleLookingGlassSourceTypeValues() []LookingGlassSourceType {
	return []LookingGlassSourceType{
		LookingGlassSourceTypeAzureRegion,
		LookingGlassSourceTypeEdgeSite,
	}
}

type PeeringLocationsDirectPeeringType string

const (
	PeeringLocationsDirectPeeringTypeCdn                  PeeringLocationsDirectPeeringType = "Cdn"
	PeeringLocationsDirectPeeringTypeEdge                 PeeringLocationsDirectPeeringType = "Edge"
	PeeringLocationsDirectPeeringTypeEdgeZoneForOperators PeeringLocationsDirectPeeringType = "EdgeZoneForOperators"
	PeeringLocationsDirectPeeringTypeInternal             PeeringLocationsDirectPeeringType = "Internal"
	PeeringLocationsDirectPeeringTypeIx                   PeeringLocationsDirectPeeringType = "Ix"
	PeeringLocationsDirectPeeringTypeIxRs                 PeeringLocationsDirectPeeringType = "IxRs"
	PeeringLocationsDirectPeeringTypePeerProp             PeeringLocationsDirectPeeringType = "PeerProp"
	PeeringLocationsDirectPeeringTypeTransit              PeeringLocationsDirectPeeringType = "Transit"
	PeeringLocationsDirectPeeringTypeVoice                PeeringLocationsDirectPeeringType = "Voice"
)

// PossiblePeeringLocationsDirectPeeringTypeValues returns the possible values for the PeeringLocationsDirectPeeringType const type.
func PossiblePeeringLocationsDirectPeeringTypeValues() []PeeringLocationsDirectPeeringType {
	return []PeeringLocationsDirectPeeringType{
		PeeringLocationsDirectPeeringTypeCdn,
		PeeringLocationsDirectPeeringTypeEdge,
		PeeringLocationsDirectPeeringTypeEdgeZoneForOperators,
		PeeringLocationsDirectPeeringTypeInternal,
		PeeringLocationsDirectPeeringTypeIx,
		PeeringLocationsDirectPeeringTypeIxRs,
		PeeringLocationsDirectPeeringTypePeerProp,
		PeeringLocationsDirectPeeringTypeTransit,
		PeeringLocationsDirectPeeringTypeVoice,
	}
}

type PeeringLocationsKind string

const (
	PeeringLocationsKindDirect   PeeringLocationsKind = "Direct"
	PeeringLocationsKindExchange PeeringLocationsKind = "Exchange"
)

// PossiblePeeringLocationsKindValues returns the possible values for the PeeringLocationsKind const type.
func PossiblePeeringLocationsKindValues() []PeeringLocationsKind {
	return []PeeringLocationsKind{
		PeeringLocationsKindDirect,
		PeeringLocationsKindExchange,
	}
}

// PrefixValidationState - The prefix validation state.
type PrefixValidationState string

const (
	PrefixValidationStateFailed   PrefixValidationState = "Failed"
	PrefixValidationStateInvalid  PrefixValidationState = "Invalid"
	PrefixValidationStateNone     PrefixValidationState = "None"
	PrefixValidationStatePending  PrefixValidationState = "Pending"
	PrefixValidationStateUnknown  PrefixValidationState = "Unknown"
	PrefixValidationStateVerified PrefixValidationState = "Verified"
	PrefixValidationStateWarning  PrefixValidationState = "Warning"
)

// PossiblePrefixValidationStateValues returns the possible values for the PrefixValidationState const type.
func PossiblePrefixValidationStateValues() []PrefixValidationState {
	return []PrefixValidationState{
		PrefixValidationStateFailed,
		PrefixValidationStateInvalid,
		PrefixValidationStateNone,
		PrefixValidationStatePending,
		PrefixValidationStateUnknown,
		PrefixValidationStateVerified,
		PrefixValidationStateWarning,
	}
}

// PreviousConnectionProvisioningState - The previous connection provisioning state, used to resume provisioning after connection
// has been blocked.
type PreviousConnectionProvisioningState string

const (
	PreviousConnectionProvisioningStateACLConfiguration                               PreviousConnectionProvisioningState = "ACLConfiguration"
	PreviousConnectionProvisioningStateAddDenyAllRocPendingApproval                   PreviousConnectionProvisioningState = "AddDenyAllRocPendingApproval"
	PreviousConnectionProvisioningStateAllocatePorts                                  PreviousConnectionProvisioningState = "AllocatePorts"
	PreviousConnectionProvisioningStateAwaitApplyDenyAll                              PreviousConnectionProvisioningState = "AwaitApplyDenyAll"
	PreviousConnectionProvisioningStateAwaitLagCompletion                             PreviousConnectionProvisioningState = "AwaitLagCompletion"
	PreviousConnectionProvisioningStateAwaitPairUpgrade                               PreviousConnectionProvisioningState = "AwaitPairUpgrade"
	PreviousConnectionProvisioningStateAwaitPeerIPs                                   PreviousConnectionProvisioningState = "AwaitPeerIps"
	PreviousConnectionProvisioningStateBfdConfiguration                               PreviousConnectionProvisioningState = "BfdConfiguration"
	PreviousConnectionProvisioningStateBgpGroupChangeRocPendingApproval               PreviousConnectionProvisioningState = "BgpGroupChangeRocPendingApproval"
	PreviousConnectionProvisioningStateBgpGroupChangeWorkWindow                       PreviousConnectionProvisioningState = "BgpGroupChangeWorkWindow"
	PreviousConnectionProvisioningStateBgpSessionConfiguration                        PreviousConnectionProvisioningState = "BgpSessionConfiguration"
	PreviousConnectionProvisioningStateCheckInterfaces                                PreviousConnectionProvisioningState = "CheckInterfaces"
	PreviousConnectionProvisioningStateDecomAddDenyAll                                PreviousConnectionProvisioningState = "DecomAddDenyAll"
	PreviousConnectionProvisioningStateDecomCabling                                   PreviousConnectionProvisioningState = "DecomCabling"
	PreviousConnectionProvisioningStateDecomCompleted                                 PreviousConnectionProvisioningState = "DecomCompleted"
	PreviousConnectionProvisioningStateDecomGraphCleanup                              PreviousConnectionProvisioningState = "DecomGraphCleanup"
	PreviousConnectionProvisioningStateDecomRemoveBgpConfig                           PreviousConnectionProvisioningState = "DecomRemoveBgpConfig"
	PreviousConnectionProvisioningStateDecomRemoveInterfaceConfig                     PreviousConnectionProvisioningState = "DecomRemoveInterfaceConfig"
	PreviousConnectionProvisioningStateDecomRocPendingApproval                        PreviousConnectionProvisioningState = "DecomRocPendingApproval"
	PreviousConnectionProvisioningStateDecomShutInterfaces                            PreviousConnectionProvisioningState = "DecomShutInterfaces"
	PreviousConnectionProvisioningStateDecomShutdownBgp                               PreviousConnectionProvisioningState = "DecomShutdownBgp"
	PreviousConnectionProvisioningStateDecomValidatePrefix                            PreviousConnectionProvisioningState = "DecomValidatePrefix"
	PreviousConnectionProvisioningStateDecomValidateTraffic                           PreviousConnectionProvisioningState = "DecomValidateTraffic"
	PreviousConnectionProvisioningStateDeviceStateValidation                          PreviousConnectionProvisioningState = "DeviceStateValidation"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateApplyDenyAll            PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateApplyDenyAll"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateApproved                PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateApproved"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateBfdConfig               PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateBfdConfig"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateBgpConfig               PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateBgpConfig"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateCleanupOldIPsfromLAG    PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateCleanupOldIPsfromLAG"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateConfigureLagWithNewIP   PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateConfigureLagWithNewIP"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateDeleteDenyAll           PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateDeleteDenyAll"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateDeleteSession           PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateDeleteSession"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateFetchSessionState       PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateFetchSessionState"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateIfDescription           PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateIfDescription"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateLagACL                  PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateLagAcl"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateMD5AuthKeyConfiguration PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateMd5AuthKeyConfiguration"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateMD5AuthKeyRead          PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateMd5AuthKeyRead"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdatePrefixPostCheck         PreviousConnectionProvisioningState = "DirectPeeringTypeUpdatePrefixPostCheck"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdatePrefixPrecheck          PreviousConnectionProvisioningState = "DirectPeeringTypeUpdatePrefixPrecheck"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateReadMaxPrefixLimit      PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateReadMaxPrefixLimit"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateRejected                PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateRejected"
	PreviousConnectionProvisioningStateDirectPeeringTypeUpdateUpdatePortWithNewIP     PreviousConnectionProvisioningState = "DirectPeeringTypeUpdateUpdatePortWithNewIP"
	PreviousConnectionProvisioningStateEnableInterfaces                               PreviousConnectionProvisioningState = "EnableInterfaces"
	PreviousConnectionProvisioningStateExternalBlocker                                PreviousConnectionProvisioningState = "ExternalBlocker"
	PreviousConnectionProvisioningStateFacilityMapValidation                          PreviousConnectionProvisioningState = "FacilityMapValidation"
	PreviousConnectionProvisioningStateFetchPrefixLimitFromPeeringDb                  PreviousConnectionProvisioningState = "FetchPrefixLimitFromPeeringDb"
	PreviousConnectionProvisioningStateFetchSessionState                              PreviousConnectionProvisioningState = "FetchSessionState"
	PreviousConnectionProvisioningStateForcedIPChangeCleanup                          PreviousConnectionProvisioningState = "ForcedIpChangeCleanup"
	PreviousConnectionProvisioningStateForcedIPChangeCleanupWithActiveSessions        PreviousConnectionProvisioningState = "ForcedIpChangeCleanupWithActiveSessions"
	PreviousConnectionProvisioningStateIPChangeApplyDenyAll                           PreviousConnectionProvisioningState = "IPChangeApplyDenyAll"
	PreviousConnectionProvisioningStateIPChangeBgpUpdate                              PreviousConnectionProvisioningState = "IPChangeBgpUpdate"
	PreviousConnectionProvisioningStateIPChangeCleanup                                PreviousConnectionProvisioningState = "IPChangeCleanup"
	PreviousConnectionProvisioningStateIPChangeInitiate                               PreviousConnectionProvisioningState = "IPChangeInitiate"
	PreviousConnectionProvisioningStateIPChangeLag                                    PreviousConnectionProvisioningState = "IPChangeLag"
	PreviousConnectionProvisioningStateIPChangeMD5Configuration                       PreviousConnectionProvisioningState = "IPChangeMd5Configuration"
	PreviousConnectionProvisioningStateIPChangeRemoveDenyAll                          PreviousConnectionProvisioningState = "IPChangeRemoveDenyAll"
	PreviousConnectionProvisioningStateIPChangeValidateSessions                       PreviousConnectionProvisioningState = "IPChangeValidateSessions"
	PreviousConnectionProvisioningStateIPChangeValidation                             PreviousConnectionProvisioningState = "IPChangeValidation"
	PreviousConnectionProvisioningStateIPChangeWorkWindow                             PreviousConnectionProvisioningState = "IPChangeWorkWindow"
	PreviousConnectionProvisioningStateInterconnectionPendingApproval                 PreviousConnectionProvisioningState = "InterconnectionPendingApproval"
	PreviousConnectionProvisioningStateLagSetup                                       PreviousConnectionProvisioningState = "LagSetup"
	PreviousConnectionProvisioningStateLightCheck                                     PreviousConnectionProvisioningState = "LightCheck"
	PreviousConnectionProvisioningStateMD5AuthKeyConfiguration                        PreviousConnectionProvisioningState = "Md5AuthKeyConfiguration"
	PreviousConnectionProvisioningStateMapsToMapsVoiceConfigureBFD                    PreviousConnectionProvisioningState = "MapsToMapsVoiceConfigureBFD"
	PreviousConnectionProvisioningStateMapsToMapsVoiceFetchSessionState               PreviousConnectionProvisioningState = "MapsToMapsVoiceFetchSessionState"
	PreviousConnectionProvisioningStateMapsToMapsVoicePrefixPostCheck                 PreviousConnectionProvisioningState = "MapsToMapsVoicePrefixPostCheck"
	PreviousConnectionProvisioningStateMapsToMapsVoicePrefixPrecheck                  PreviousConnectionProvisioningState = "MapsToMapsVoicePrefixPrecheck"
	PreviousConnectionProvisioningStateMapsToMapsVoiceUpdateIfDescription             PreviousConnectionProvisioningState = "MapsToMapsVoiceUpdateIfDescription"
	PreviousConnectionProvisioningStateMapsToMapsVoiceUpdateLAGACL                    PreviousConnectionProvisioningState = "MapsToMapsVoiceUpdateLAGAcl"
	PreviousConnectionProvisioningStateMigrationCompletionRequested                   PreviousConnectionProvisioningState = "MigrationCompletionRequested"
	PreviousConnectionProvisioningStateMigrationConfigValidation                      PreviousConnectionProvisioningState = "MigrationConfigValidation"
	PreviousConnectionProvisioningStateMigrationNpmError                              PreviousConnectionProvisioningState = "MigrationNpmError"
	PreviousConnectionProvisioningStateMigrationRequestPortAllocationRequested        PreviousConnectionProvisioningState = "MigrationRequestPortAllocationRequested"
	PreviousConnectionProvisioningStateMigrationSpecificConfigDrift                   PreviousConnectionProvisioningState = "MigrationSpecificConfigDrift"
	PreviousConnectionProvisioningStateMigrationWorkWindow                            PreviousConnectionProvisioningState = "MigrationWorkWindow"
	PreviousConnectionProvisioningStateNone                                           PreviousConnectionProvisioningState = "None"
	PreviousConnectionProvisioningStateNpmBgpSessionConfiguration                     PreviousConnectionProvisioningState = "NpmBgpSessionConfiguration"
	PreviousConnectionProvisioningStatePendingASNChangeApplyDenyALL                   PreviousConnectionProvisioningState = "PendingASNChangeApplyDenyALL"
	PreviousConnectionProvisioningStatePendingASNChangeRemoveDenyALL                  PreviousConnectionProvisioningState = "PendingASNChangeRemoveDenyALL"
	PreviousConnectionProvisioningStatePendingASNChangeUpdateInterfaceDescription     PreviousConnectionProvisioningState = "PendingASNChangeUpdateInterfaceDescription"
	PreviousConnectionProvisioningStatePendingASNChangeUpdateNeighborConfig           PreviousConnectionProvisioningState = "PendingASNChangeUpdateNeighborConfig"
	PreviousConnectionProvisioningStatePendingGlobalPolicyUpdate                      PreviousConnectionProvisioningState = "PendingGlobalPolicyUpdate"
	PreviousConnectionProvisioningStatePendingMigration                               PreviousConnectionProvisioningState = "PendingMigration"
	PreviousConnectionProvisioningStatePendingMigrationCompletion                     PreviousConnectionProvisioningState = "PendingMigrationCompletion"
	PreviousConnectionProvisioningStatePendingSpecialWorkItem                         PreviousConnectionProvisioningState = "PendingSpecialWorkItem"
	PreviousConnectionProvisioningStatePendingWorkWindow                              PreviousConnectionProvisioningState = "PendingWorkWindow"
	PreviousConnectionProvisioningStatePhysicalConnectionSetup                        PreviousConnectionProvisioningState = "PhysicalConnectionSetup"
	PreviousConnectionProvisioningStatePingTestDone                                   PreviousConnectionProvisioningState = "PingTestDone"
	PreviousConnectionProvisioningStatePortExhaustion                                 PreviousConnectionProvisioningState = "PortExhaustion"
	PreviousConnectionProvisioningStatePrefixListConfiguration                        PreviousConnectionProvisioningState = "PrefixListConfiguration"
	PreviousConnectionProvisioningStateProvisioningCompleted                          PreviousConnectionProvisioningState = "ProvisioningCompleted"
	PreviousConnectionProvisioningStateRemoveNomonit                                  PreviousConnectionProvisioningState = "RemoveNomonit"
	PreviousConnectionProvisioningStateRocPendingApproval                             PreviousConnectionProvisioningState = "RocPendingApproval"
	PreviousConnectionProvisioningStateStaticMacConfiguration                         PreviousConnectionProvisioningState = "StaticMacConfiguration"
	PreviousConnectionProvisioningStateTestPing                                       PreviousConnectionProvisioningState = "TestPing"
	PreviousConnectionProvisioningStateUndoMigrationGraphCleanup                      PreviousConnectionProvisioningState = "UndoMigrationGraphCleanup"
	PreviousConnectionProvisioningStateUpdateAddressesOnDevice                        PreviousConnectionProvisioningState = "UpdateAddressesOnDevice"
	PreviousConnectionProvisioningStateUpdateApipaPrefixInSitepro                     PreviousConnectionProvisioningState = "UpdateApipaPrefixInSitepro"
	PreviousConnectionProvisioningStateUpdateGraphForASNChange                        PreviousConnectionProvisioningState = "UpdateGraphForASNChange"
	PreviousConnectionProvisioningStateUpdatePeeringForASNChange                      PreviousConnectionProvisioningState = "UpdatePeeringForASNChange"
	PreviousConnectionProvisioningStateValidateFltFirewall                            PreviousConnectionProvisioningState = "ValidateFltFirewall"
	PreviousConnectionProvisioningStateWorkWindowCompleted                            PreviousConnectionProvisioningState = "WorkWindowCompleted"
)

// PossiblePreviousConnectionProvisioningStateValues returns the possible values for the PreviousConnectionProvisioningState const type.
func PossiblePreviousConnectionProvisioningStateValues() []PreviousConnectionProvisioningState {
	return []PreviousConnectionProvisioningState{
		PreviousConnectionProvisioningStateACLConfiguration,
		PreviousConnectionProvisioningStateAddDenyAllRocPendingApproval,
		PreviousConnectionProvisioningStateAllocatePorts,
		PreviousConnectionProvisioningStateAwaitApplyDenyAll,
		PreviousConnectionProvisioningStateAwaitLagCompletion,
		PreviousConnectionProvisioningStateAwaitPairUpgrade,
		PreviousConnectionProvisioningStateAwaitPeerIPs,
		PreviousConnectionProvisioningStateBfdConfiguration,
		PreviousConnectionProvisioningStateBgpGroupChangeRocPendingApproval,
		PreviousConnectionProvisioningStateBgpGroupChangeWorkWindow,
		PreviousConnectionProvisioningStateBgpSessionConfiguration,
		PreviousConnectionProvisioningStateCheckInterfaces,
		PreviousConnectionProvisioningStateDecomAddDenyAll,
		PreviousConnectionProvisioningStateDecomCabling,
		PreviousConnectionProvisioningStateDecomCompleted,
		PreviousConnectionProvisioningStateDecomGraphCleanup,
		PreviousConnectionProvisioningStateDecomRemoveBgpConfig,
		PreviousConnectionProvisioningStateDecomRemoveInterfaceConfig,
		PreviousConnectionProvisioningStateDecomRocPendingApproval,
		PreviousConnectionProvisioningStateDecomShutInterfaces,
		PreviousConnectionProvisioningStateDecomShutdownBgp,
		PreviousConnectionProvisioningStateDecomValidatePrefix,
		PreviousConnectionProvisioningStateDecomValidateTraffic,
		PreviousConnectionProvisioningStateDeviceStateValidation,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateApplyDenyAll,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateApproved,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateBfdConfig,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateBgpConfig,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateCleanupOldIPsfromLAG,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateConfigureLagWithNewIP,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateDeleteDenyAll,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateDeleteSession,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateFetchSessionState,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateIfDescription,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateLagACL,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateMD5AuthKeyConfiguration,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateMD5AuthKeyRead,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdatePrefixPostCheck,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdatePrefixPrecheck,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateReadMaxPrefixLimit,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateRejected,
		PreviousConnectionProvisioningStateDirectPeeringTypeUpdateUpdatePortWithNewIP,
		PreviousConnectionProvisioningStateEnableInterfaces,
		PreviousConnectionProvisioningStateExternalBlocker,
		PreviousConnectionProvisioningStateFacilityMapValidation,
		PreviousConnectionProvisioningStateFetchPrefixLimitFromPeeringDb,
		PreviousConnectionProvisioningStateFetchSessionState,
		PreviousConnectionProvisioningStateForcedIPChangeCleanup,
		PreviousConnectionProvisioningStateForcedIPChangeCleanupWithActiveSessions,
		PreviousConnectionProvisioningStateIPChangeApplyDenyAll,
		PreviousConnectionProvisioningStateIPChangeBgpUpdate,
		PreviousConnectionProvisioningStateIPChangeCleanup,
		PreviousConnectionProvisioningStateIPChangeInitiate,
		PreviousConnectionProvisioningStateIPChangeLag,
		PreviousConnectionProvisioningStateIPChangeMD5Configuration,
		PreviousConnectionProvisioningStateIPChangeRemoveDenyAll,
		PreviousConnectionProvisioningStateIPChangeValidateSessions,
		PreviousConnectionProvisioningStateIPChangeValidation,
		PreviousConnectionProvisioningStateIPChangeWorkWindow,
		PreviousConnectionProvisioningStateInterconnectionPendingApproval,
		PreviousConnectionProvisioningStateLagSetup,
		PreviousConnectionProvisioningStateLightCheck,
		PreviousConnectionProvisioningStateMD5AuthKeyConfiguration,
		PreviousConnectionProvisioningStateMapsToMapsVoiceConfigureBFD,
		PreviousConnectionProvisioningStateMapsToMapsVoiceFetchSessionState,
		PreviousConnectionProvisioningStateMapsToMapsVoicePrefixPostCheck,
		PreviousConnectionProvisioningStateMapsToMapsVoicePrefixPrecheck,
		PreviousConnectionProvisioningStateMapsToMapsVoiceUpdateIfDescription,
		PreviousConnectionProvisioningStateMapsToMapsVoiceUpdateLAGACL,
		PreviousConnectionProvisioningStateMigrationCompletionRequested,
		PreviousConnectionProvisioningStateMigrationConfigValidation,
		PreviousConnectionProvisioningStateMigrationNpmError,
		PreviousConnectionProvisioningStateMigrationRequestPortAllocationRequested,
		PreviousConnectionProvisioningStateMigrationSpecificConfigDrift,
		PreviousConnectionProvisioningStateMigrationWorkWindow,
		PreviousConnectionProvisioningStateNone,
		PreviousConnectionProvisioningStateNpmBgpSessionConfiguration,
		PreviousConnectionProvisioningStatePendingASNChangeApplyDenyALL,
		PreviousConnectionProvisioningStatePendingASNChangeRemoveDenyALL,
		PreviousConnectionProvisioningStatePendingASNChangeUpdateInterfaceDescription,
		PreviousConnectionProvisioningStatePendingASNChangeUpdateNeighborConfig,
		PreviousConnectionProvisioningStatePendingGlobalPolicyUpdate,
		PreviousConnectionProvisioningStatePendingMigration,
		PreviousConnectionProvisioningStatePendingMigrationCompletion,
		PreviousConnectionProvisioningStatePendingSpecialWorkItem,
		PreviousConnectionProvisioningStatePendingWorkWindow,
		PreviousConnectionProvisioningStatePhysicalConnectionSetup,
		PreviousConnectionProvisioningStatePingTestDone,
		PreviousConnectionProvisioningStatePortExhaustion,
		PreviousConnectionProvisioningStatePrefixListConfiguration,
		PreviousConnectionProvisioningStateProvisioningCompleted,
		PreviousConnectionProvisioningStateRemoveNomonit,
		PreviousConnectionProvisioningStateRocPendingApproval,
		PreviousConnectionProvisioningStateStaticMacConfiguration,
		PreviousConnectionProvisioningStateTestPing,
		PreviousConnectionProvisioningStateUndoMigrationGraphCleanup,
		PreviousConnectionProvisioningStateUpdateAddressesOnDevice,
		PreviousConnectionProvisioningStateUpdateApipaPrefixInSitepro,
		PreviousConnectionProvisioningStateUpdateGraphForASNChange,
		PreviousConnectionProvisioningStateUpdatePeeringForASNChange,
		PreviousConnectionProvisioningStateValidateFltFirewall,
		PreviousConnectionProvisioningStateWorkWindowCompleted,
	}
}

// Protocol - The protocol of the traffic that will be sent.
type Protocol string

const (
	ProtocolICMP Protocol = "ICMP"
	ProtocolNone Protocol = "None"
	ProtocolTCP  Protocol = "TCP"
)

// PossibleProtocolValues returns the possible values for the Protocol const type.
func PossibleProtocolValues() []Protocol {
	return []Protocol{
		ProtocolICMP,
		ProtocolNone,
		ProtocolTCP,
	}
}

// ProvisioningState - The provisioning state of the resource.
type ProvisioningState string

const (
	ProvisioningStateDeleting  ProvisioningState = "Deleting"
	ProvisioningStateFailed    ProvisioningState = "Failed"
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	ProvisioningStateUpdating  ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}

// Role - The role of the contact.
type Role string

const (
	RoleEscalation Role = "Escalation"
	RoleNoc        Role = "Noc"
	RoleOther      Role = "Other"
	RolePolicy     Role = "Policy"
	RoleService    Role = "Service"
	RoleTechnical  Role = "Technical"
)

// PossibleRoleValues returns the possible values for the Role const type.
func PossibleRoleValues() []Role {
	return []Role{
		RoleEscalation,
		RoleNoc,
		RoleOther,
		RolePolicy,
		RoleService,
		RoleTechnical,
	}
}

// SessionAddressProvider - The field indicating if Microsoft provides session ip addresses.
type SessionAddressProvider string

const (
	SessionAddressProviderMicrosoft SessionAddressProvider = "Microsoft"
	SessionAddressProviderPeer      SessionAddressProvider = "Peer"
)

// PossibleSessionAddressProviderValues returns the possible values for the SessionAddressProvider const type.
func PossibleSessionAddressProviderValues() []SessionAddressProvider {
	return []SessionAddressProvider{
		SessionAddressProviderMicrosoft,
		SessionAddressProviderPeer,
	}
}

// SessionStateV4 - The state of the IPv4 session.
type SessionStateV4 string

const (
	SessionStateV4Active        SessionStateV4 = "Active"
	SessionStateV4Connect       SessionStateV4 = "Connect"
	SessionStateV4Established   SessionStateV4 = "Established"
	SessionStateV4Idle          SessionStateV4 = "Idle"
	SessionStateV4None          SessionStateV4 = "None"
	SessionStateV4OpenConfirm   SessionStateV4 = "OpenConfirm"
	SessionStateV4OpenReceived  SessionStateV4 = "OpenReceived"
	SessionStateV4OpenSent      SessionStateV4 = "OpenSent"
	SessionStateV4PendingAdd    SessionStateV4 = "PendingAdd"
	SessionStateV4PendingRemove SessionStateV4 = "PendingRemove"
	SessionStateV4PendingUpdate SessionStateV4 = "PendingUpdate"
)

// PossibleSessionStateV4Values returns the possible values for the SessionStateV4 const type.
func PossibleSessionStateV4Values() []SessionStateV4 {
	return []SessionStateV4{
		SessionStateV4Active,
		SessionStateV4Connect,
		SessionStateV4Established,
		SessionStateV4Idle,
		SessionStateV4None,
		SessionStateV4OpenConfirm,
		SessionStateV4OpenReceived,
		SessionStateV4OpenSent,
		SessionStateV4PendingAdd,
		SessionStateV4PendingRemove,
		SessionStateV4PendingUpdate,
	}
}

// SessionStateV6 - The state of the IPv6 session.
type SessionStateV6 string

const (
	SessionStateV6Active        SessionStateV6 = "Active"
	SessionStateV6Connect       SessionStateV6 = "Connect"
	SessionStateV6Established   SessionStateV6 = "Established"
	SessionStateV6Idle          SessionStateV6 = "Idle"
	SessionStateV6None          SessionStateV6 = "None"
	SessionStateV6OpenConfirm   SessionStateV6 = "OpenConfirm"
	SessionStateV6OpenReceived  SessionStateV6 = "OpenReceived"
	SessionStateV6OpenSent      SessionStateV6 = "OpenSent"
	SessionStateV6PendingAdd    SessionStateV6 = "PendingAdd"
	SessionStateV6PendingRemove SessionStateV6 = "PendingRemove"
	SessionStateV6PendingUpdate SessionStateV6 = "PendingUpdate"
)

// PossibleSessionStateV6Values returns the possible values for the SessionStateV6 const type.
func PossibleSessionStateV6Values() []SessionStateV6 {
	return []SessionStateV6{
		SessionStateV6Active,
		SessionStateV6Connect,
		SessionStateV6Established,
		SessionStateV6Idle,
		SessionStateV6None,
		SessionStateV6OpenConfirm,
		SessionStateV6OpenReceived,
		SessionStateV6OpenSent,
		SessionStateV6PendingAdd,
		SessionStateV6PendingRemove,
		SessionStateV6PendingUpdate,
	}
}

// Size - The size of the peering SKU.
type Size string

const (
	SizeFree      Size = "Free"
	SizeMetered   Size = "Metered"
	SizeUnlimited Size = "Unlimited"
)

// PossibleSizeValues returns the possible values for the Size const type.
func PossibleSizeValues() []Size {
	return []Size{
		SizeFree,
		SizeMetered,
		SizeUnlimited,
	}
}

// Tier - The tier of the peering SKU.
type Tier string

const (
	TierBasic   Tier = "Basic"
	TierPremium Tier = "Premium"
)

// PossibleTierValues returns the possible values for the Tier const type.
func PossibleTierValues() []Tier {
	return []Tier{
		TierBasic,
		TierPremium,
	}
}

// ValidationState - The validation state of the ASN associated with the peer.
type ValidationState string

const (
	ValidationStateApproved ValidationState = "Approved"
	ValidationStateFailed   ValidationState = "Failed"
	ValidationStateNone     ValidationState = "None"
	ValidationStatePending  ValidationState = "Pending"
)

// PossibleValidationStateValues returns the possible values for the ValidationState const type.
func PossibleValidationStateValues() []ValidationState {
	return []ValidationState{
		ValidationStateApproved,
		ValidationStateFailed,
		ValidationStateNone,
		ValidationStatePending,
	}
}
