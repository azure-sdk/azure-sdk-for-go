//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcodesigning

import "time"

// Account - Code signing account resource
type Account struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Code signing account properties
	Properties *AccountProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// AccountPatch - Parameters for creating or updating a code signing account
type AccountPatch struct {
	// Properties of the code signing account
	Properties *AccountPatchProperties

	// Resource tags.
	Tags map[string]*string
}

// AccountPatchProperties - Properties of the code signing account
type AccountPatchProperties struct {
	// READ-ONLY; Account Uri of the code signing account
	AccountURI *string
}

// AccountProperties - Properties of the code signing account
type AccountProperties struct {
	// READ-ONLY; The URI of the code signing account for performing operations on certificate profiles. This property is readonly
	AccountURI *string

	// READ-ONLY; Provisioning state of the code signing account
	ProvisioningState *ProvisioningState
}

// Accounts - The paginated list of code signing accounts
type Accounts struct {
	// The link to fetch the next page of code signing account
	NextLink *string

	// List of code signing accounts
	Value []*Account
}

// Certificate - Properties of the certificate
type Certificate struct {
	// Certificate created date
	CreatedDate *string

	// Certificate expiry date
	ExpiryDate  *string
	Revocations []*Revocation

	// Serial number of the certificate
	SerialNumber *string

	// Status of the certificate
	Status *CertificateStatus

	// Subject name of the certificate
	SubjectName *string

	// Thumbprint of the certificate
	Thumbprint *string
}

// CertificateProfile - Certificate profile resource
type CertificateProfile struct {
	// REQUIRED; Properties of the certificate profile
	Properties *CertificateProfileProperties

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// CertificateProfilePatch - Certificate Profile Patch Properties
type CertificateProfilePatch struct {
	// Properties of the certificate profile
	Properties *CertificateProfilePatchProperties
}

// CertificateProfilePatchProperties - Properties of the certificate profile
type CertificateProfilePatchProperties struct {
	Certificates []*Certificate
}

// CertificateProfileProperties - Properties of the certificate profile
type CertificateProfileProperties struct {
	// REQUIRED; Used as CN in the subject name of the certificate
	CommonName *string

	// REQUIRED; Used as O in the subject name of the certificate
	Organization *string

	// REQUIRED; Profile type of the certificate
	ProfileType *ProfileType

	// REQUIRED; Rotation policy of the certificate
	RotationPolicy *RotationPolicy

	// Whether to include in the public trust or private trust certificate subject name
	IncludeCity *bool

	// Whether to include in the public trust or private trust certificate subject name
	IncludeCountry *bool

	// Whether to include in the public trust certificate subject name
	IncludePostalCode *bool

	// Whether to include in the public trust or private trust certificate subject name
	IncludeState *bool

	// Whether to include in the public trust certificate subject name
	IncludeStreetAddress *bool

	// Used as OU in the subject name of the private trust certificate
	OrganizationUnit *string

	// READ-ONLY
	Certificates []*Certificate

	// READ-ONLY
	City *string

	// READ-ONLY
	Country *string

	// READ-ONLY; Enhanced key usage of the certificate
	EnhancedKeyUsage *string

	// READ-ONLY
	IdentityValidationID *string

	// READ-ONLY
	PostalCode *string

	// READ-ONLY; Provisioning state of the code signing account
	ProvisioningState *ProvisioningState

	// READ-ONLY
	State *string

	// READ-ONLY; Status of the certificate profiles
	Status *CertificateProfileStatus

	// READ-ONLY
	StreetAddress *string
}

// CertificateProfiles - The paginated list of certificate profiles
type CertificateProfiles struct {
	// The link to fetch the next page of certificate profile
	NextLink *string

	// The list of certificate profiles
	Value []*CertificateProfile
}

// CheckNameAvailability - The parameters used to check the availability of the code signing account name.
type CheckNameAvailability struct {
	// REQUIRED; Code signing account name.
	Name *string
}

// CheckNameAvailabilityResult - The CheckNameAvailability operation response.
type CheckNameAvailabilityResult struct {
	// READ-ONLY; An error message explaining the Reason value in more detail.
	Message *string

	// READ-ONLY; A boolean value that indicates whether the name is available for you to use. If true, the name is available.
	// If false, the name has already been taken or is invalid and cannot be used.
	NameAvailable *bool

	// READ-ONLY; The reason that a code signing account name could not be used. The Reason element is only returned if nameAvailable
	// is false.
	Reason *Reason
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation
}

// Revocations history of a certificate
type Revocation struct {
	// Reason for revocation
	Reason *string

	// Remarks for the revocation
	Remarks *string

	// The requested timestamp of the revocation
	RequestedAt *string

	// Revocation timestamp
	RevokedAt *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}
