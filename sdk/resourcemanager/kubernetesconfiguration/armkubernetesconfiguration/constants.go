//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armkubernetesconfiguration

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/kubernetesconfiguration/armkubernetesconfiguration"
	moduleVersion = "v3.0.0-beta.1"
)

// AKSIdentityType - IdentityType Enum
type AKSIdentityType string

const (
	// AKSIdentityTypeSystemAssigned - System Assigned Identity
	AKSIdentityTypeSystemAssigned AKSIdentityType = "SystemAssigned"
	// AKSIdentityTypeUserAssigned - User Assigned Identity
	AKSIdentityTypeUserAssigned AKSIdentityType = "UserAssigned"
)

// PossibleAKSIdentityTypeValues returns the possible values for the AKSIdentityType const type.
func PossibleAKSIdentityTypeValues() []AKSIdentityType {
	return []AKSIdentityType{
		AKSIdentityTypeSystemAssigned,
		AKSIdentityTypeUserAssigned,
	}
}

// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// ComplianceStateType - The compliance state of the configuration.
type ComplianceStateType string

const (
	ComplianceStateTypeCompliant    ComplianceStateType = "Compliant"
	ComplianceStateTypeFailed       ComplianceStateType = "Failed"
	ComplianceStateTypeInstalled    ComplianceStateType = "Installed"
	ComplianceStateTypeNoncompliant ComplianceStateType = "Noncompliant"
	ComplianceStateTypePending      ComplianceStateType = "Pending"
)

// PossibleComplianceStateTypeValues returns the possible values for the ComplianceStateType const type.
func PossibleComplianceStateTypeValues() []ComplianceStateType {
	return []ComplianceStateType{
		ComplianceStateTypeCompliant,
		ComplianceStateTypeFailed,
		ComplianceStateTypeInstalled,
		ComplianceStateTypeNoncompliant,
		ComplianceStateTypePending,
	}
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// FluxComplianceState - Compliance state of the cluster object.
type FluxComplianceState string

const (
	// FluxComplianceStateCompliant - Compliant
	FluxComplianceStateCompliant FluxComplianceState = "Compliant"
	// FluxComplianceStateNonCompliant - Non-Compliant
	FluxComplianceStateNonCompliant FluxComplianceState = "Non-Compliant"
	// FluxComplianceStatePending - Pending
	FluxComplianceStatePending FluxComplianceState = "Pending"
	// FluxComplianceStateSuspended - Suspended
	FluxComplianceStateSuspended FluxComplianceState = "Suspended"
	// FluxComplianceStateUnknown - Unknown
	FluxComplianceStateUnknown FluxComplianceState = "Unknown"
)

// PossibleFluxComplianceStateValues returns the possible values for the FluxComplianceState const type.
func PossibleFluxComplianceStateValues() []FluxComplianceState {
	return []FluxComplianceState{
		FluxComplianceStateCompliant,
		FluxComplianceStateNonCompliant,
		FluxComplianceStatePending,
		FluxComplianceStateSuspended,
		FluxComplianceStateUnknown,
	}
}

// KustomizationValidationType - Specify whether to validate the Kubernetes objects referenced in the Kustomization before
// applying them to the cluster.
type KustomizationValidationType string

const (
	// KustomizationValidationTypeClient - client side validation
	KustomizationValidationTypeClient KustomizationValidationType = "client"
	// KustomizationValidationTypeNone - No validation
	KustomizationValidationTypeNone KustomizationValidationType = "none"
	// KustomizationValidationTypeServer - server side validation
	KustomizationValidationTypeServer KustomizationValidationType = "server"
)

// PossibleKustomizationValidationTypeValues returns the possible values for the KustomizationValidationType const type.
func PossibleKustomizationValidationTypeValues() []KustomizationValidationType {
	return []KustomizationValidationType{
		KustomizationValidationTypeClient,
		KustomizationValidationTypeNone,
		KustomizationValidationTypeServer,
	}
}

// LevelType - Level of the status.
type LevelType string

const (
	// LevelTypeError - Error
	LevelTypeError LevelType = "Error"
	// LevelTypeInformation - Information
	LevelTypeInformation LevelType = "Information"
	// LevelTypeWarning - Warning
	LevelTypeWarning LevelType = "Warning"
)

// PossibleLevelTypeValues returns the possible values for the LevelType const type.
func PossibleLevelTypeValues() []LevelType {
	return []LevelType{
		LevelTypeError,
		LevelTypeInformation,
		LevelTypeWarning,
	}
}

// ManagedServiceIdentityType - Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                       ManagedServiceIdentityType = "None"
	ManagedServiceIdentityTypeSystemAssigned             ManagedServiceIdentityType = "SystemAssigned"
	ManagedServiceIdentityTypeSystemAssignedUserAssigned ManagedServiceIdentityType = "SystemAssigned,UserAssigned"
	ManagedServiceIdentityTypeUserAssigned               ManagedServiceIdentityType = "UserAssigned"
)

// PossibleManagedServiceIdentityTypeValues returns the possible values for the ManagedServiceIdentityType const type.
func PossibleManagedServiceIdentityTypeValues() []ManagedServiceIdentityType {
	return []ManagedServiceIdentityType{
		ManagedServiceIdentityTypeNone,
		ManagedServiceIdentityTypeSystemAssigned,
		ManagedServiceIdentityTypeSystemAssignedUserAssigned,
		ManagedServiceIdentityTypeUserAssigned,
	}
}

// MessageLevelType - Level of the message.
type MessageLevelType string

const (
	// MessageLevelTypeError - Message level : Error
	MessageLevelTypeError MessageLevelType = "Error"
	// MessageLevelTypeInformation - Message level : Information
	MessageLevelTypeInformation MessageLevelType = "Information"
	// MessageLevelTypeWarning - Message level : Warning
	MessageLevelTypeWarning MessageLevelType = "Warning"
)

// PossibleMessageLevelTypeValues returns the possible values for the MessageLevelType const type.
func PossibleMessageLevelTypeValues() []MessageLevelType {
	return []MessageLevelType{
		MessageLevelTypeError,
		MessageLevelTypeInformation,
		MessageLevelTypeWarning,
	}
}

// OperatorScopeType - Scope at which the operator will be installed.
type OperatorScopeType string

const (
	OperatorScopeTypeCluster   OperatorScopeType = "cluster"
	OperatorScopeTypeNameSpace OperatorScopeType = "namespace"
)

// PossibleOperatorScopeTypeValues returns the possible values for the OperatorScopeType const type.
func PossibleOperatorScopeTypeValues() []OperatorScopeType {
	return []OperatorScopeType{
		OperatorScopeTypeCluster,
		OperatorScopeTypeNameSpace,
	}
}

// OperatorType - Type of the operator
type OperatorType string

const (
	OperatorTypeFlux OperatorType = "Flux"
)

// PossibleOperatorTypeValues returns the possible values for the OperatorType const type.
func PossibleOperatorTypeValues() []OperatorType {
	return []OperatorType{
		OperatorTypeFlux,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	OriginSystem     Origin = "system"
	OriginUser       Origin = "user"
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// ProvisioningState - The provisioning state of the resource.
type ProvisioningState string

const (
	// ProvisioningStateCanceled - Canceled
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateCreating - Creating
	ProvisioningStateCreating ProvisioningState = "Creating"
	// ProvisioningStateDeleting - Deleting
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed - Failed
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateSucceeded - Succeeded
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating - Updating
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateCanceled,
		ProvisioningStateCreating,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}

// ProvisioningStateType - The provisioning state of the resource provider.
type ProvisioningStateType string

const (
	ProvisioningStateTypeAccepted  ProvisioningStateType = "Accepted"
	ProvisioningStateTypeCanceled  ProvisioningStateType = "Canceled"
	ProvisioningStateTypeDeleting  ProvisioningStateType = "Deleting"
	ProvisioningStateTypeFailed    ProvisioningStateType = "Failed"
	ProvisioningStateTypeRunning   ProvisioningStateType = "Running"
	ProvisioningStateTypeSucceeded ProvisioningStateType = "Succeeded"
)

// PossibleProvisioningStateTypeValues returns the possible values for the ProvisioningStateType const type.
func PossibleProvisioningStateTypeValues() []ProvisioningStateType {
	return []ProvisioningStateType{
		ProvisioningStateTypeAccepted,
		ProvisioningStateTypeCanceled,
		ProvisioningStateTypeDeleting,
		ProvisioningStateTypeFailed,
		ProvisioningStateTypeRunning,
		ProvisioningStateTypeSucceeded,
	}
}

// ResourceProvisioningState - The provisioning state of a resource type.
type ResourceProvisioningState string

const (
	// ResourceProvisioningStateCanceled - Resource creation was canceled.
	ResourceProvisioningStateCanceled ResourceProvisioningState = "Canceled"
	// ResourceProvisioningStateFailed - Resource creation failed.
	ResourceProvisioningStateFailed ResourceProvisioningState = "Failed"
	// ResourceProvisioningStateSucceeded - Resource has been created.
	ResourceProvisioningStateSucceeded ResourceProvisioningState = "Succeeded"
)

// PossibleResourceProvisioningStateValues returns the possible values for the ResourceProvisioningState const type.
func PossibleResourceProvisioningStateValues() []ResourceProvisioningState {
	return []ResourceProvisioningState{
		ResourceProvisioningStateCanceled,
		ResourceProvisioningStateFailed,
		ResourceProvisioningStateSucceeded,
	}
}

// ScopeType - Scope at which the operator will be installed.
type ScopeType string

const (
	// ScopeTypeCluster - cluster
	ScopeTypeCluster ScopeType = "cluster"
	// ScopeTypeNameSpace - namespace
	ScopeTypeNameSpace ScopeType = "namespace"
)

// PossibleScopeTypeValues returns the possible values for the ScopeType const type.
func PossibleScopeTypeValues() []ScopeType {
	return []ScopeType{
		ScopeTypeCluster,
		ScopeTypeNameSpace,
	}
}

// SourceKindType - Source Kind to pull the configuration data from.
type SourceKindType string

const (
	// SourceKindTypeAzureBlob - AzureBlob
	SourceKindTypeAzureBlob SourceKindType = "AzureBlob"
	// SourceKindTypeBucket - Bucket
	SourceKindTypeBucket SourceKindType = "Bucket"
	// SourceKindTypeGitRepository - GitRepository
	SourceKindTypeGitRepository SourceKindType = "GitRepository"
)

// PossibleSourceKindTypeValues returns the possible values for the SourceKindType const type.
func PossibleSourceKindTypeValues() []SourceKindType {
	return []SourceKindType{
		SourceKindTypeAzureBlob,
		SourceKindTypeBucket,
		SourceKindTypeGitRepository,
	}
}

// Versions - The available API versions.
type Versions string

const (
	// VersionsV20240601Preview - The 2024-06-01 API version.
	VersionsV20240601Preview Versions = "2024-06-01-preview"
)

// PossibleVersionsValues returns the possible values for the Versions const type.
func PossibleVersionsValues() []Versions {
	return []Versions{
		VersionsV20240601Preview,
	}
}
