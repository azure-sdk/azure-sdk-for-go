//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armcostmanagement

const (
	moduleName    = "armcostmanagement"
	moduleVersion = "v2.0.0"
)

// BenefitPlanKind - Kind of the benefit plan.
type BenefitPlanKind string

const (
	// BenefitPlanKindReservation - Benefit Plan is for a Reservation.
	BenefitPlanKindReservation BenefitPlanKind = "Reservation"
	// BenefitPlanKindSavingsPlan - Benefit Plan is for a SavingsPlan.
	BenefitPlanKindSavingsPlan BenefitPlanKind = "SavingsPlan"
)

// PossibleBenefitPlanKindValues returns the possible values for the BenefitPlanKind const type.
func PossibleBenefitPlanKindValues() []BenefitPlanKind {
	return []BenefitPlanKind{
		BenefitPlanKindReservation,
		BenefitPlanKindSavingsPlan,
	}
}

// BenefitUtilizationSummaryKind - Kind of the benefit utilization summary.
type BenefitUtilizationSummaryKind string

const (
	// BenefitUtilizationSummaryKindIncludedQuantity - Benefit utilization summary is for an IncludedQuantity resource like Databricks.
	BenefitUtilizationSummaryKindIncludedQuantity BenefitUtilizationSummaryKind = "IncludedQuantity"
	// BenefitUtilizationSummaryKindReservation - Benefit utilization summary is for a Reservation that is not IncludedQuantity.
	BenefitUtilizationSummaryKindReservation BenefitUtilizationSummaryKind = "Reservation"
	// BenefitUtilizationSummaryKindSavingsPlan - Benefit utilization summary is for a SavingsPlan that is not IncludedQuantity.
	BenefitUtilizationSummaryKindSavingsPlan BenefitUtilizationSummaryKind = "SavingsPlan"
)

// PossibleBenefitUtilizationSummaryKindValues returns the possible values for the BenefitUtilizationSummaryKind const type.
func PossibleBenefitUtilizationSummaryKindValues() []BenefitUtilizationSummaryKind {
	return []BenefitUtilizationSummaryKind{
		BenefitUtilizationSummaryKindIncludedQuantity,
		BenefitUtilizationSummaryKindReservation,
		BenefitUtilizationSummaryKindSavingsPlan,
	}
}

// CostDetailsDataFormat - The data format of the report
type CostDetailsDataFormat string

const (
	// CostDetailsDataFormatCSVCostDetailsDataFormat - Csv data format.
	CostDetailsDataFormatCSVCostDetailsDataFormat CostDetailsDataFormat = "Csv"
)

// PossibleCostDetailsDataFormatValues returns the possible values for the CostDetailsDataFormat const type.
func PossibleCostDetailsDataFormatValues() []CostDetailsDataFormat {
	return []CostDetailsDataFormat{
		CostDetailsDataFormatCSVCostDetailsDataFormat,
	}
}

// CostDetailsMetricType - The type of the detailed report. By default ActualCost is provided
type CostDetailsMetricType string

const (
	// CostDetailsMetricTypeActualCostCostDetailsMetricType - Actual cost data.
	CostDetailsMetricTypeActualCostCostDetailsMetricType CostDetailsMetricType = "ActualCost"
	// CostDetailsMetricTypeAmortizedCostCostDetailsMetricType - Amortized cost data.
	CostDetailsMetricTypeAmortizedCostCostDetailsMetricType CostDetailsMetricType = "AmortizedCost"
)

// PossibleCostDetailsMetricTypeValues returns the possible values for the CostDetailsMetricType const type.
func PossibleCostDetailsMetricTypeValues() []CostDetailsMetricType {
	return []CostDetailsMetricType{
		CostDetailsMetricTypeActualCostCostDetailsMetricType,
		CostDetailsMetricTypeAmortizedCostCostDetailsMetricType,
	}
}

// CostDetailsStatusType - The status of the cost details operation
type CostDetailsStatusType string

const (
	// CostDetailsStatusTypeCompletedCostDetailsStatusType - Operation is Completed.
	CostDetailsStatusTypeCompletedCostDetailsStatusType CostDetailsStatusType = "Completed"
	// CostDetailsStatusTypeFailedCostDetailsStatusType - Operation Failed.
	CostDetailsStatusTypeFailedCostDetailsStatusType CostDetailsStatusType = "Failed"
	// CostDetailsStatusTypeNoDataFoundCostDetailsStatusType - Operation is Completed and no cost data found.
	CostDetailsStatusTypeNoDataFoundCostDetailsStatusType CostDetailsStatusType = "NoDataFound"
)

// PossibleCostDetailsStatusTypeValues returns the possible values for the CostDetailsStatusType const type.
func PossibleCostDetailsStatusTypeValues() []CostDetailsStatusType {
	return []CostDetailsStatusType{
		CostDetailsStatusTypeCompletedCostDetailsStatusType,
		CostDetailsStatusTypeFailedCostDetailsStatusType,
		CostDetailsStatusTypeNoDataFoundCostDetailsStatusType,
	}
}

// Scope - Kind of the recommendation scope.
type Scope string

const (
	// ScopeShared - Shared scope recommendation.
	ScopeShared Scope = "Shared"
	// ScopeSingle - Single scope recommendation.
	ScopeSingle Scope = "Single"
)

// PossibleScopeValues returns the possible values for the Scope const type.
func PossibleScopeValues() []Scope {
	return []Scope{
		ScopeShared,
		ScopeSingle,
	}
}
