// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armguestconfiguration

import "time"

// Assignment - Guest configuration assignment is an association between a machine and guest configuration.
type Assignment struct {
	// Properties of the Guest configuration assignment.
	Properties *AssignmentProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// AssignmentInfo - Information about the guest configuration assignment.
type AssignmentInfo struct {
	// Information about the configuration.
	Configuration *ConfigurationInfo

	// READ-ONLY; Name of the guest configuration assignment.
	Name *string
}

// AssignmentList - The response of the list guest configuration assignment operation.
type AssignmentList struct {
	// Result of the list guest configuration assignment operation.
	Value []*Assignment
}

// AssignmentProperties - Guest configuration assignment properties.
type AssignmentProperties struct {
	// The source which initiated the guest configuration assignment. Ex: Azure Policy
	Context *string

	// The guest configuration to assign.
	GuestConfiguration *Navigation

	// Last reported guest configuration assignment report.
	LatestAssignmentReport *CommonAssignmentReport

	// The list of VM Compliance data for VMSS
	VmssVMList []*VmssvmInfo

	// READ-ONLY; Combined hash of the configuration package and parameters.
	AssignmentHash *string

	// READ-ONLY; A value indicating compliance status of the machine for the assigned guest configuration.
	ComplianceStatus *ComplianceStatus

	// READ-ONLY; Date and time when last compliance status was checked.
	LastComplianceStatusChecked *time.Time

	// READ-ONLY; Id of the latest report for the guest configuration assignment.
	LatestReportID *string

	// READ-ONLY; parameter hash for the guest configuration assignment.
	ParameterHash *string

	// READ-ONLY; The provisioning state, which only appears in the response.
	ProvisioningState *ProvisioningState

	// READ-ONLY; Type of the resource - VMSS / VM
	ResourceType *string

	// READ-ONLY; VM resource Id.
	TargetResourceID *string
}

// AssignmentReport - Report for the guest configuration assignment. Report contains information such as compliance status,
// reason, and more.
type AssignmentReport struct {
	// Properties of the guest configuration report.
	Properties *AssignmentReportProperties

	// READ-ONLY; ARM resource id of the report for the guest configuration assignment.
	ID *string

	// READ-ONLY; GUID that identifies the guest configuration assignment report under a subscription, resource group.
	Name *string
}

// AssignmentReportDetails - Details of the guest configuration assignment report.
type AssignmentReportDetails struct {
	// The list of resources for which guest configuration assignment compliance is checked.
	Resources []*AssignmentReportResource

	// READ-ONLY; A value indicating compliance status of the machine for the assigned guest configuration.
	ComplianceStatus *ComplianceStatus

	// READ-ONLY; End date and time of the guest configuration assignment compliance status check.
	EndTime *time.Time

	// READ-ONLY; GUID of the report.
	JobID *string

	// READ-ONLY; Type of report, Consistency or Initial
	OperationType *Type

	// READ-ONLY; Start date and time of the guest configuration assignment compliance status check.
	StartTime *time.Time
}

// AssignmentReportList - List of guest configuration assignment reports.
type AssignmentReportList struct {
	// List of reports for the guest configuration. Report contains information such as compliance status, reason and more.
	Value []*AssignmentReport
}

// AssignmentReportProperties - Report for the guest configuration assignment. Report contains information such as compliance
// status, reason, and more.
type AssignmentReportProperties struct {
	// Configuration details of the guest configuration assignment.
	Assignment *AssignmentInfo

	// Details of the assignment report.
	Details *AssignmentReportDetails

	// Information about the VM.
	VM *VMInfo

	// READ-ONLY; A value indicating compliance status of the machine for the assigned guest configuration.
	ComplianceStatus *ComplianceStatus

	// READ-ONLY; End date and time of the guest configuration assignment compliance status check.
	EndTime *time.Time

	// READ-ONLY; GUID that identifies the guest configuration assignment report under a subscription, resource group.
	ReportID *string

	// READ-ONLY; Start date and time of the guest configuration assignment compliance status check.
	StartTime *time.Time

	// READ-ONLY; Azure resource Id of the VMSS.
	VmssResourceID *string
}

// AssignmentReportResource - The guest configuration assignment resource.
type AssignmentReportResource struct {
	// Compliance reason and reason code for a resource.
	Reasons []*AssignmentReportResourceComplianceReason

	// READ-ONLY; A value indicating compliance status of the machine for the assigned guest configuration.
	ComplianceStatus *ComplianceStatus

	// READ-ONLY; Properties of a guest configuration assignment resource.
	Properties map[string]any

	// READ-ONLY; Name of the guest configuration assignment resource setting.
	ResourceID *string
}

// AssignmentReportResourceComplianceReason - Reason and code for the compliance of the guest configuration assignment resource.
type AssignmentReportResourceComplianceReason struct {
	// READ-ONLY; Code for the compliance of the guest configuration assignment resource.
	Code *string

	// READ-ONLY; Reason for the compliance of the guest configuration assignment resource.
	Phrase *string
}

type CommonAssignmentReport struct {
	// Configuration details of the guest configuration assignment.
	Assignment *AssignmentInfo

	// The list of resources for which guest configuration assignment compliance is checked.
	Resources []*AssignmentReportResource

	// Information about the VM.
	VM *VMInfo

	// READ-ONLY; A value indicating compliance status of the machine for the assigned guest configuration.
	ComplianceStatus *ComplianceStatus

	// READ-ONLY; End date and time of the guest configuration assignment compliance status check.
	EndTime *time.Time

	// READ-ONLY; ARM resource id of the report for the guest configuration assignment.
	ID *string

	// READ-ONLY; Type of report, Consistency or Initial
	OperationType *Type

	// READ-ONLY; GUID that identifies the guest configuration assignment report under a subscription, resource group.
	ReportID *string

	// READ-ONLY; Start date and time of the guest configuration assignment compliance status check.
	StartTime *time.Time
}

// ConfigurationInfo - Information about the configuration.
type ConfigurationInfo struct {
	// READ-ONLY; Name of the configuration.
	Name *string

	// READ-ONLY; Version of the configuration.
	Version *string
}

// ConfigurationParameter - Represents a configuration parameter.
type ConfigurationParameter struct {
	// Name of the configuration parameter.
	Name *string

	// Value of the configuration parameter.
	Value *string
}

// ConfigurationSetting - Configuration setting of LCM (Local Configuration Manager).
type ConfigurationSetting struct {
	// READ-ONLY; Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration
	// and StopConfiguration
	ActionAfterReboot *ActionAfterReboot

	// READ-ONLY; If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target
	// node. Otherwise, false
	AllowModuleOverwrite *bool

	// READ-ONLY; Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible
	// values are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
	ConfigurationMode *ConfigurationMode

	// READ-ONLY; How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode
	// property is set to ApplyOnly. The default value is 15.
	ConfigurationModeFrequencyMins *float32

	// READ-ONLY; Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise,
	// you will have to manually reboot the node for any configuration that requires it.
	// The default value is false. To use this setting when a reboot condition is enacted by something other than DSC (such as
	// Windows Installer), combine this setting with the xPendingReboot module.
	RebootIfNeeded *bool

	// READ-ONLY; The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value
	// is ignored if the LCM is not configured in pull mode. The default value is 30.
	RefreshFrequencyMins *float32
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any

	// READ-ONLY; The additional info type.
	Type *string
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo

	// READ-ONLY; The error code.
	Code *string

	// READ-ONLY; The error details.
	Details []*ErrorDetail

	// READ-ONLY; The error message.
	Message *string

	// READ-ONLY; The error target.
	Target *string
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail
}

// Navigation - Guest configuration is an artifact that encapsulates DSC configuration and its dependencies. The artifact
// is a zip file containing DSC configuration (as MOF) and dependent resources and other
// dependencies like modules.
type Navigation struct {
	// Specifies the assignment type and execution of the configuration. Possible values are Audit, DeployAndAutoCorrect, ApplyAndAutoCorrect
	// and ApplyAndMonitor.
	AssignmentType *AssignmentType

	// The configuration parameters for the guest configuration.
	ConfigurationParameter []*ConfigurationParameter

	// The protected configuration parameters for the guest configuration.
	ConfigurationProtectedParameter []*ConfigurationParameter

	// Combined hash of the guest configuration package and configuration parameters.
	ContentHash *string

	// Managed identity with storage access of the guest configuration package and configuration parameters.
	ContentManagedIdentity *string

	// Uri of the storage where guest configuration package is uploaded.
	ContentURI *string

	// Kind of the guest configuration. For example:DSC
	Kind *Kind

	// Name of the guest configuration.
	Name *string

	// Version of the guest configuration.
	Version *string

	// READ-ONLY; Specifies the origin of the configuration.
	AssignmentSource *string

	// READ-ONLY; The configuration setting for the guest configuration.
	ConfigurationSetting *ConfigurationSetting

	// READ-ONLY; Specifies the content type of the configuration. Possible values could be Builtin or Custom.
	ContentType *string
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a
// location
type ProxyResource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// VMInfo - Information about the VM.
type VMInfo struct {
	// READ-ONLY; Azure resource Id of the VM.
	ID *string

	// READ-ONLY; UUID(Universally Unique Identifier) of the VM.
	UUID *string
}

// VmssvmInfo - Information about VMSS VM
type VmssvmInfo struct {
	// READ-ONLY; A value indicating compliance status of the machine for the assigned guest configuration.
	ComplianceStatus *ComplianceStatus

	// READ-ONLY; Date and time when last compliance status was checked.
	LastComplianceChecked *time.Time

	// READ-ONLY; Id of the latest report for the guest configuration assignment.
	LatestReportID *string

	// READ-ONLY; UUID of the VM.
	VMID *string

	// READ-ONLY; Azure resource Id of the VM.
	VMResourceID *string
}
