// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armprogrammableconnectivity

import "time"

// ApplicationOwnerProperties - Details about the Application Owner (i.e. organization) that would use the Operator's Network
// APIs.
type ApplicationOwnerProperties struct {
	// REQUIRED; Email address for the person responsible for the use of Network APIs in this application.
	ContactEmailAddress *string

	// REQUIRED; Data Protection Officer of the organization.
	DataProtectionOfficer *Person

	// REQUIRED; Legal name of the organization owning the application.
	LegalName *string

	// REQUIRED; Legal representative of the organization.
	LegalRepresentative *Person

	// REQUIRED; List of local representatives.
	LocalRepresentatives []*LocalRepresentative

	// REQUIRED; Common name of the organization owning the application.
	Name *string

	// REQUIRED; A description of the organization owning the application.
	OrganizationDescription *string

	// REQUIRED; ID number for official identification of the organization.
	OrganizationIdentificationID *string

	// REQUIRED; Issuing organization of the ID for official identification of the organization.
	OrganizationIdentificationIssuer *string

	// REQUIRED; Type of official identification of the organization.
	OrganizationIdentificationType *string

	// REQUIRED; The type of organization that the Application Owner is.
	OrganizationType *OrganizationType

	// REQUIRED; Privacy manager of the organization.
	PrivacyManager *Person

	// REQUIRED; URL for the organization's privacy policy.
	PrivacyPolicyURL *string

	// REQUIRED; Registered Geographic address.
	RegisteredGeographicAddress *GeographicAddress

	// REQUIRED; Unique Tax Number for the user's organization in the country/region the APC Gateway is being purchased.
	TaxNumber *string

	// REQUIRED; Trading name of the organization owning the application.
	TradingName *string
}

// ApplicationProperties - Details about the Application that would use the Operator's Network APIs.
type ApplicationProperties struct {
	// REQUIRED; Description of the application.
	ApplicationDescription *string

	// REQUIRED; The category of the application.
	Category *Category

	// REQUIRED; Commercial name of the application.
	CommercialName *string

	// REQUIRED; Name of the application.
	Name *string

	// REQUIRED; URL for the organization's privacy policy.
	PrivacyPolicyURL *string

	// REQUIRED; Privacy rights request email address.
	PrivacyRightsRequestEmailAddress *string
}

// DataProcessing - Model defining how received data is processed.
type DataProcessing struct {
	// REQUIRED; The contexts in which the data is processed.
	Contexts []*Context

	// REQUIRED; The duration or temporal limitation of the data processing.
	Duration *Duration

	// REQUIRED; The frequency of the data processing.
	Frequency *Frequency

	// REQUIRED; The operation that is performed on the data received.
	ProcessingOperation *ProcessingOperation

	// REQUIRED; The countries/regions the data is stored in.
	StorageRegions []*DataRegions

	// REQUIRED; The countries/regions the data transits through.
	TransitRegions []*DataRegions
}

// DataRegions - Model defining the information required about the countries/regions the data transits through or is stored
// in.
type DataRegions struct {
	// REQUIRED; Flag to indicate if commercial activity applies to this data management.
	CommercialActivity *bool

	// REQUIRED; The country code of the country/region the data transits through or is stored in.
	CountryCode *string

	// REQUIRED; URL of the organization or governmental data privacy framework.
	DataPrivacyFrameworkURL *string

	// The commercial organization who is managing the data.
	CommercialOrganization *string
}

// Gateway - A Programmable Connectivity Gateway resource.
type Gateway struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// The resource-specific properties for this resource.
	Properties *GatewayProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Azure Programmable Connectivity Gateway Name.
	Name *string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// GatewayListResult - The response of a Gateway list operation.
type GatewayListResult struct {
	// REQUIRED; The Gateway items on this page
	Value []*Gateway

	// The link to the next page of items
	NextLink *string
}

// GatewayProperties - Gateway resource properties.
type GatewayProperties struct {
	// REQUIRED; Details about the Application that would use the Operator's Network APIs.
	ConfiguredApplication *ApplicationProperties

	// REQUIRED; Details about the Organization owning the Application that would use the Operator's Network APIs.
	ConfiguredApplicationOwner *ApplicationOwnerProperties

	// READ-ONLY; Base URL of the Gateway resource. This is the URL that the users would use to make Network API requests to the
	// Operators via Azure.
	GatewayBaseURL *string

	// READ-ONLY; List of Operator API Connections selected by the user.
	OperatorAPIConnections []*string

	// READ-ONLY; The status of the last operation on the Gateway resource.
	ProvisioningState *ProvisioningState
}

// GatewayTagsUpdate - The type used for updating tags in Gateway resources.
type GatewayTagsUpdate struct {
	// Resource tags.
	Tags map[string]*string
}

// GeographicAddress - Model defining a geographic address.
type GeographicAddress struct {
	// REQUIRED; Country code of the address.
	CountryCode *string

	// City of the address.
	City *string

	// Locality of the address.
	Locality *string

	// Postal code of the address.
	PostalCode *string

	// State or province of the address.
	StateOrProvince *string

	// Street Name of the address.
	StreetName *string

	// Street Number of the address.
	StreetNumber *string
}

// LocalRepresentative - Model defining a local representative for a country/region.
type LocalRepresentative struct {
	// REQUIRED; Country code for the country/region the local representative is representing.
	CountryCode *string

	// REQUIRED; Local representative for this country/region.
	Representative *Person
}

// MarketplaceProperties - Azure marketplace properties for a plan.
type MarketplaceProperties struct {
	// READ-ONLY; Links to the Terms and Conditions of the Plan that must be accepted to create an
	// associated Operator Api Connection
	PlanTermsAndConditionsLinks []*string

	// Azure marketplace Offer ID for this plan.
	OfferID *string

	// Azure marketplace Plan ID for this plan.
	PlanID *string

	// Azure marketplace Publisher ID for this plan.
	PublisherID *string
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Extensible enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for Azure
	// Resource Manager/control-plane operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for and operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// REQUIRED; The Operation items on this page
	Value []*Operation

	// The link to the next page of items
	NextLink *string
}

// OperatorAPIConnection - A Programmable Connectivity Operator API Connection resource
type OperatorAPIConnection struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// The resource-specific properties for this resource.
	Properties *OperatorAPIConnectionProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Azure Programmable Connectivity (APC) Operator API Connection Name.
	Name *string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// OperatorAPIConnectionListResult - The response of a OperatorApiConnection list operation.
type OperatorAPIConnectionListResult struct {
	// REQUIRED; The OperatorApiConnection items on this page
	Value []*OperatorAPIConnection

	// The link to the next page of items
	NextLink *string
}

// OperatorAPIConnectionProperties - Operator API Connection resource properties that cannot be updated once a resource has
// been created.
type OperatorAPIConnectionProperties struct {
	// REQUIRED; List of ways the data returned on this API is processed.
	DataProcessingList []*DataProcessing

	// REQUIRED; Reference to the APC Gateway resource ID.
	GatewayID *string

	// REQUIRED; Reference to the Operator API Plan Resource ID.
	OperatorAPIPlanID *string

	// REQUIRED; Whether the caller has accepted the Terms and Conditions of the associated Operator API Plan.
	// After creation, the planTermsAndConditionsLink property is set to the Terms and Conditions that
	// have been accepted.
	// Must be set to True, as the Terms and Conditions must be accepted.
	PlanTermsAndConditionsAccepted *bool

	// REQUIRED; Explanation of the reason that justifies the purpose: specifically why is the API used for the application's
	// use case.
	PurposeReason *string

	// REQUIRED; The purpose for which the Application will use the API. Max Items 1 currently as Operators do not support multiple.
	Purposes []*Purpose

	// READ-ONLY; The Network API for the current operator in the country/region provided in the linked Operator API Plan.
	CamaraAPIName *string

	// READ-ONLY; Name of the Operator in the linked Operator API Plan belongs to.
	OperatorName *string

	// READ-ONLY; Links to the Terms and Conditions of the Operator API Plan that were accepted on creation.
	PlanTermsAndConditionsLinks []*string

	// READ-ONLY; The status of the last operation.
	ProvisioningState *ProvisioningState

	// READ-ONLY; The status of the OperatorApiConnection resource.
	Status *Status
}

// OperatorAPIConnectionUpdate - The type used for update operations of the OperatorApiConnection.
type OperatorAPIConnectionUpdate struct {
	// The resource-specific properties for this resource.
	Properties *OperatorAPIConnectionUpdateProperties

	// Resource tags.
	Tags map[string]*string
}

// OperatorAPIConnectionUpdateProperties - The updatable properties of the OperatorApiConnection.
type OperatorAPIConnectionUpdateProperties struct {
	// List of ways the data returned on this API is processed.
	DataProcessingList []*DataProcessing

	// Reference to the Operator API Plan Resource ID.
	OperatorAPIPlanID *string

	// Whether the caller has accepted the Terms and Conditions of the associated Operator API Plan.
	// After creation, the planTermsAndConditionsLink property is set to the Terms and Conditions that
	// have been accepted.
	// Must be set to True, as the Terms and Conditions must be accepted.
	PlanTermsAndConditionsAccepted *bool

	// Explanation of the reason that justifies the purpose: specifically why is the API used for the application's use case.
	PurposeReason *string

	// The purpose for which the Application will use the API. Max Items 1 currently as Operators do not support multiple.
	Purposes []*Purpose
}

// OperatorAPIPlan - A Programmable Connectivity Operator API Plans resource. This is a readonly resource that indicates which
// Operator Network APIs are available in the user's subscription.
type OperatorAPIPlan struct {
	// The resource-specific properties for this resource.
	Properties *OperatorAPIPlanProperties

	// READ-ONLY; APC Gateway Plan Name.
	Name *string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// OperatorAPIPlanListResult - The response of a OperatorApiPlan list operation.
type OperatorAPIPlanListResult struct {
	// REQUIRED; The OperatorApiPlan items on this page
	Value []*OperatorAPIPlan

	// The link to the next page of items
	NextLink *string
}

// OperatorAPIPlanProperties - Operator API Plan properties.
type OperatorAPIPlanProperties struct {
	// Standardized Network API name defined by CAMARA specifications.
	CamaraAPIName *string

	// The limits, if any, will be imposed by the operator.
	Limits *string

	// Azure marketplace properties for this plan.
	MarketplaceProperties *MarketplaceProperties

	// List of country/region names where this plan is being supported by Azure Marketplace.
	Markets []*string

	// Name of the Operator this plan belongs to.
	OperatorName *string

	// List of country/region names where this plan is being supported by the Operator.
	OperatorRegions []*string

	// List of Azure regions where this offer is supported.
	SupportedLocations []*string

	// READ-ONLY; The status of the last operation on the Gateway resource.
	ProvisioningState *ProvisioningState
}

// Person - Model defining a contactable person.
type Person struct {
	// REQUIRED; Email address of the contactable person.
	EmailAddress *string

	// REQUIRED; Family name of the contactable person.
	FamilyName *string

	// REQUIRED; Given name of the contactable person.
	GivenName *string
}

// Status - Description of the current status of the OperatorApiConnection resource.
type Status struct {
	// Explanation of the current state of the OperatorApiConnection resource.
	Reason *string

	// Current state of the OperatorApiConnection resource.
	State *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}
