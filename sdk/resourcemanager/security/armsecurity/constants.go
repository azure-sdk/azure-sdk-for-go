//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsecurity

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/security/armsecurity"
	moduleVersion = "v0.14.0"
)

// ActionableRemediationState - ActionableRemediation Setting. None - the setting was never set. Enabled - ActionableRemediation
// is enabled. Disabled - ActionableRemediation is disabled.
type ActionableRemediationState string

const (
	ActionableRemediationStateDisabled ActionableRemediationState = "Disabled"
	ActionableRemediationStateEnabled  ActionableRemediationState = "Enabled"
	ActionableRemediationStateNone     ActionableRemediationState = "None"
)

// PossibleActionableRemediationStateValues returns the possible values for the ActionableRemediationState const type.
func PossibleActionableRemediationStateValues() []ActionableRemediationState {
	return []ActionableRemediationState{
		ActionableRemediationStateDisabled,
		ActionableRemediationStateEnabled,
		ActionableRemediationStateNone,
	}
}

// AnnotateDefaultBranchState - Configuration of PR Annotations on default branch.
// Enabled - PR Annotations are enabled on the resource's default branch. Disabled - PR Annotations are disabled on the resource's
// default branch.
type AnnotateDefaultBranchState string

const (
	AnnotateDefaultBranchStateDisabled AnnotateDefaultBranchState = "Disabled"
	AnnotateDefaultBranchStateEnabled  AnnotateDefaultBranchState = "Enabled"
)

// PossibleAnnotateDefaultBranchStateValues returns the possible values for the AnnotateDefaultBranchState const type.
func PossibleAnnotateDefaultBranchStateValues() []AnnotateDefaultBranchState {
	return []AnnotateDefaultBranchState{
		AnnotateDefaultBranchStateDisabled,
		AnnotateDefaultBranchStateEnabled,
	}
}

// AutoDiscovery - AutoDiscovery states.
type AutoDiscovery string

const (
	AutoDiscoveryDisabled      AutoDiscovery = "Disabled"
	AutoDiscoveryEnabled       AutoDiscovery = "Enabled"
	AutoDiscoveryNotApplicable AutoDiscovery = "NotApplicable"
)

// PossibleAutoDiscoveryValues returns the possible values for the AutoDiscovery const type.
func PossibleAutoDiscoveryValues() []AutoDiscovery {
	return []AutoDiscovery{
		AutoDiscoveryDisabled,
		AutoDiscoveryEnabled,
		AutoDiscoveryNotApplicable,
	}
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// DesiredOnboardingState - Onboarding states.
type DesiredOnboardingState string

const (
	DesiredOnboardingStateDisabled DesiredOnboardingState = "Disabled"
	DesiredOnboardingStateEnabled  DesiredOnboardingState = "Enabled"
)

// PossibleDesiredOnboardingStateValues returns the possible values for the DesiredOnboardingState const type.
func PossibleDesiredOnboardingStateValues() []DesiredOnboardingState {
	return []DesiredOnboardingState{
		DesiredOnboardingStateDisabled,
		DesiredOnboardingStateEnabled,
	}
}

// DevOpsProvisioningState - The provisioning state of the resource.
// Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning
// canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion
// successful. DeletionFailure - Deletion failure.
type DevOpsProvisioningState string

const (
	DevOpsProvisioningStateCanceled        DevOpsProvisioningState = "Canceled"
	DevOpsProvisioningStateDeletionFailure DevOpsProvisioningState = "DeletionFailure"
	DevOpsProvisioningStateDeletionSuccess DevOpsProvisioningState = "DeletionSuccess"
	DevOpsProvisioningStateFailed          DevOpsProvisioningState = "Failed"
	DevOpsProvisioningStatePending         DevOpsProvisioningState = "Pending"
	DevOpsProvisioningStatePendingDeletion DevOpsProvisioningState = "PendingDeletion"
	DevOpsProvisioningStateSucceeded       DevOpsProvisioningState = "Succeeded"
)

// PossibleDevOpsProvisioningStateValues returns the possible values for the DevOpsProvisioningState const type.
func PossibleDevOpsProvisioningStateValues() []DevOpsProvisioningState {
	return []DevOpsProvisioningState{
		DevOpsProvisioningStateCanceled,
		DevOpsProvisioningStateDeletionFailure,
		DevOpsProvisioningStateDeletionSuccess,
		DevOpsProvisioningStateFailed,
		DevOpsProvisioningStatePending,
		DevOpsProvisioningStatePendingDeletion,
		DevOpsProvisioningStateSucceeded,
	}
}

// InheritFromParentState - Update Settings.
// Enabled - Resource should inherit configurations from parent. Disabled - Resource should not inherit configurations from
// parent.
type InheritFromParentState string

const (
	InheritFromParentStateDisabled InheritFromParentState = "Disabled"
	InheritFromParentStateEnabled  InheritFromParentState = "Enabled"
)

// PossibleInheritFromParentStateValues returns the possible values for the InheritFromParentState const type.
func PossibleInheritFromParentStateValues() []InheritFromParentState {
	return []InheritFromParentState{
		InheritFromParentStateDisabled,
		InheritFromParentStateEnabled,
	}
}

// OnboardingState - Details about resource onboarding status across all connectors.
// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level
// resources. Onboarded - this resource has already been onboarded by the
// specified connector. NotOnboarded - this resource has not been onboarded to any connector. NotApplicable - the onboarding
// state is not applicable to the current endpoint.
type OnboardingState string

const (
	OnboardingStateNotApplicable             OnboardingState = "NotApplicable"
	OnboardingStateNotOnboarded              OnboardingState = "NotOnboarded"
	OnboardingStateOnboarded                 OnboardingState = "Onboarded"
	OnboardingStateOnboardedByOtherConnector OnboardingState = "OnboardedByOtherConnector"
)

// PossibleOnboardingStateValues returns the possible values for the OnboardingState const type.
func PossibleOnboardingStateValues() []OnboardingState {
	return []OnboardingState{
		OnboardingStateNotApplicable,
		OnboardingStateNotOnboarded,
		OnboardingStateOnboarded,
		OnboardingStateOnboardedByOtherConnector,
	}
}

// RuleCategory - Rule categories. Code - code scanning results. Artifact scanning results. Dependencies scanning results.
// IaC results. Secrets scanning results. Container scanning results.
type RuleCategory string

const (
	RuleCategoryArtifacts    RuleCategory = "Artifacts"
	RuleCategoryCode         RuleCategory = "Code"
	RuleCategoryContainers   RuleCategory = "Containers"
	RuleCategoryDependencies RuleCategory = "Dependencies"
	RuleCategoryIaC          RuleCategory = "IaC"
	RuleCategorySecrets      RuleCategory = "Secrets"
)

// PossibleRuleCategoryValues returns the possible values for the RuleCategory const type.
func PossibleRuleCategoryValues() []RuleCategory {
	return []RuleCategory{
		RuleCategoryArtifacts,
		RuleCategoryCode,
		RuleCategoryContainers,
		RuleCategoryDependencies,
		RuleCategoryIaC,
		RuleCategorySecrets,
	}
}
