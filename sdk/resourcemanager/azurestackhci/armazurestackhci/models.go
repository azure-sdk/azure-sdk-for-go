//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armazurestackhci

import "time"

// ArcConnectivityProperties - Connectivity related configuration required by arc server.
type ArcConnectivityProperties struct {
	// True indicates ARC connectivity is enabled
	Enabled *bool

	// Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property
	// is set to 'true'.
	ServiceConfigurations []*ServiceConfiguration
}

// ArcIdentityResponse - ArcIdentity details.
type ArcIdentityResponse struct {
	// READ-ONLY; ArcIdentity properties.
	Properties *ArcIdentityResponseProperties
}

type ArcIdentityResponseProperties struct {
	ArcApplicationClientID      *string
	ArcApplicationObjectID      *string
	ArcApplicationTenantID      *string
	ArcServicePrincipalObjectID *string
}

// ArcSetting details.
type ArcSetting struct {
	// ArcSetting properties.
	Properties *ArcSettingProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ArcSettingList - List of ArcSetting proxy resources for the HCI cluster.
type ArcSettingList struct {
	// READ-ONLY; Link to the next set of results.
	NextLink *string

	// READ-ONLY; List of ArcSetting proxy resources.
	Value []*ArcSetting
}

// ArcSettingProperties - ArcSetting properties.
type ArcSettingProperties struct {
	// App id of arc AAD identity.
	ArcApplicationClientID *string

	// Object id of arc AAD identity.
	ArcApplicationObjectID *string

	// Tenant id of arc AAD identity.
	ArcApplicationTenantID *string

	// The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.
	ArcInstanceResourceGroup *string

	// Object id of arc AAD service principal.
	ArcServicePrincipalObjectID *string

	// contains connectivity related configuration for ARC resources
	ConnectivityProperties any

	// READ-ONLY; Aggregate state of Arc agent across the nodes in this HCI cluster.
	AggregateState *ArcSettingAggregateState

	// READ-ONLY; Properties for each of the default extensions category
	DefaultExtensions []*DefaultExtensionDetails

	// READ-ONLY; State of Arc agent in each of the nodes.
	PerNodeDetails []*PerNodeState

	// READ-ONLY; Provisioning state of the ArcSetting proxy resource.
	ProvisioningState *ProvisioningState
}

// ArcSettingsPatch - ArcSetting details to update.
type ArcSettingsPatch struct {
	// ArcSettings properties.
	Properties *ArcSettingsPatchProperties

	// Resource tags.
	Tags map[string]*string
}

// ArcSettingsPatchProperties - ArcSettings properties.
type ArcSettingsPatchProperties struct {
	// contains connectivity related configuration for ARC resources
	ConnectivityProperties any
}

// Cluster details.
type Cluster struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Identity of Cluster resource
	Identity *ManagedServiceIdentity

	// Cluster properties.
	Properties *ClusterProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ClusterDesiredProperties - Desired properties of the cluster.
type ClusterDesiredProperties struct {
	// Desired level of diagnostic data emitted by the cluster.
	DiagnosticLevel *DiagnosticLevel

	// Desired state of Windows Server Subscription.
	WindowsServerSubscription *WindowsServerSubscription
}

// ClusterIdentityResponse - Cluster Identity details.
type ClusterIdentityResponse struct {
	// READ-ONLY; Cluster identity properties.
	Properties *ClusterIdentityResponseProperties
}

type ClusterIdentityResponseProperties struct {
	AADApplicationObjectID      *string
	AADClientID                 *string
	AADServicePrincipalObjectID *string
	AADTenantID                 *string
}

// ClusterList - List of clusters.
type ClusterList struct {
	// List of clusters.
	Value []*Cluster

	// READ-ONLY; Link to the next set of results.
	NextLink *string
}

// ClusterNode - Cluster node details.
type ClusterNode struct {
	// READ-ONLY; Number of physical cores on the cluster node.
	CoreCount *float32

	// READ-ONLY; Edge Hardware Center Resource Id
	EhcResourceID *string

	// READ-ONLY; Id of the node in the cluster.
	ID *float32

	// READ-ONLY; Most recent licensing timestamp.
	LastLicensingTimestamp *time.Time

	// READ-ONLY; Manufacturer of the cluster node hardware.
	Manufacturer *string

	// READ-ONLY; Total available memory on the cluster node (in GiB).
	MemoryInGiB *float32

	// READ-ONLY; Model name of the cluster node hardware.
	Model *string

	// READ-ONLY; Name of the cluster node.
	Name *string

	// READ-ONLY; Type of the cluster node hardware.
	NodeType *ClusterNodeType

	// READ-ONLY; Display version of the operating system running on the cluster node.
	OSDisplayVersion *string

	// READ-ONLY; Operating system running on the cluster node.
	OSName *string

	// READ-ONLY; Version of the operating system running on the cluster node.
	OSVersion *string

	// READ-ONLY; OEM activation status of the node.
	OemActivation *OemActivation

	// READ-ONLY; Immutable id of the cluster node.
	SerialNumber *string

	// READ-ONLY; State of Windows Server Subscription.
	WindowsServerSubscription *WindowsServerSubscription
}

// ClusterPatch - Cluster details to update.
type ClusterPatch struct {
	// Identity of Cluster resource
	Identity *ManagedServiceIdentity

	// Cluster properties.
	Properties *ClusterPatchProperties

	// Resource tags.
	Tags map[string]*string
}

// ClusterPatchProperties - Cluster properties.
type ClusterPatchProperties struct {
	// App id of cluster AAD identity.
	AADClientID *string

	// Tenant id of cluster AAD identity.
	AADTenantID *string

	// Endpoint configured for management from the Azure portal
	CloudManagementEndpoint *string

	// Desired properties of the cluster.
	DesiredProperties *ClusterDesiredProperties
}

// ClusterProperties - Cluster properties.
type ClusterProperties struct {
	// Object id of cluster AAD identity.
	AADApplicationObjectID *string

	// App id of cluster AAD identity.
	AADClientID *string

	// Id of cluster identity service principal.
	AADServicePrincipalObjectID *string

	// Tenant id of cluster AAD identity.
	AADTenantID *string

	// Endpoint configured for management from the Azure portal.
	CloudManagementEndpoint *string

	// Desired properties of the cluster.
	DesiredProperties *ClusterDesiredProperties

	// Software Assurance properties of the cluster.
	SoftwareAssuranceProperties *SoftwareAssuranceProperties

	// READ-ONLY; Type of billing applied to the resource.
	BillingModel *string

	// READ-ONLY; Unique, immutable resource id.
	CloudID *string

	// READ-ONLY; Overall connectivity status for the cluster resource.
	ConnectivityStatus *ConnectivityStatus

	// READ-ONLY; Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.
	IsolatedVMAttestationConfiguration *IsolatedVMAttestationConfiguration

	// READ-ONLY; Most recent billing meter timestamp.
	LastBillingTimestamp *time.Time

	// READ-ONLY; Most recent cluster sync timestamp.
	LastSyncTimestamp *time.Time

	// READ-ONLY; Provisioning state.
	ProvisioningState *ProvisioningState

	// READ-ONLY; First cluster sync timestamp.
	RegistrationTimestamp *time.Time

	// READ-ONLY; Properties reported by cluster agent.
	ReportedProperties *ClusterReportedProperties

	// READ-ONLY; Object id of RP Service Principal
	ResourceProviderObjectID *string

	// READ-ONLY; Region specific DataPath Endpoint of the cluster.
	ServiceEndpoint *string

	// READ-ONLY; Status of the cluster agent.
	Status *Status

	// READ-ONLY; Number of days remaining in the trial period.
	TrialDaysRemaining *float32
}

// ClusterReportedProperties - Properties reported by cluster agent.
type ClusterReportedProperties struct {
	// Level of diagnostic data emitted by the cluster.
	DiagnosticLevel *DiagnosticLevel

	// READ-ONLY; Unique id generated by the on-prem cluster.
	ClusterID *string

	// READ-ONLY; Name of the on-prem cluster connected to this resource.
	ClusterName *string

	// READ-ONLY; The node type of all the nodes of the cluster.
	ClusterType *ClusterNodeType

	// READ-ONLY; Version of the cluster software.
	ClusterVersion *string

	// READ-ONLY; IMDS attestation status of the cluster.
	ImdsAttestation *ImdsAttestation

	// READ-ONLY; Last time the cluster reported the data.
	LastUpdated *time.Time

	// READ-ONLY; The manufacturer of all the nodes of the cluster.
	Manufacturer *string

	// READ-ONLY; List of nodes reported by the cluster.
	Nodes []*ClusterNode

	// READ-ONLY; OEM activation status of the cluster.
	OemActivation *OemActivation

	// READ-ONLY; Capabilities supported by the cluster.
	SupportedCapabilities []*string
}

// DefaultExtensionDetails - Properties for a particular default extension category.
type DefaultExtensionDetails struct {
	// READ-ONLY; Default extension category
	Category *string

	// READ-ONLY; Consent time for extension category
	ConsentTime *time.Time
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any

	// READ-ONLY; The additional info type.
	Type *string
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo

	// READ-ONLY; The error code.
	Code *string

	// READ-ONLY; The error details.
	Details []*ErrorDetail

	// READ-ONLY; The error message.
	Message *string

	// READ-ONLY; The error target.
	Target *string
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail
}

// Extension - Details of a particular extension in HCI Cluster.
type Extension struct {
	// Describes Machine Extension Properties.
	Properties *ExtensionProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ExtensionInstanceView - Describes the Extension Instance View.
type ExtensionInstanceView struct {
	// The extension name.
	Name *string

	// Instance view status.
	Status *ExtensionInstanceViewStatus

	// Specifies the type of the extension; an example is "MicrosoftMonitoringAgent".
	Type *string

	// Specifies the version of the script handler.
	TypeHandlerVersion *string
}

// ExtensionInstanceViewStatus - Instance view status.
type ExtensionInstanceViewStatus struct {
	// The status code.
	Code *string

	// The short localizable label for the status.
	DisplayStatus *string

	// The level code.
	Level *StatusLevelTypes

	// The detailed status message, including for alerts and error messages.
	Message *string

	// The time of the status.
	Time *time.Time
}

// ExtensionList - List of Extensions in HCI cluster.
type ExtensionList struct {
	// READ-ONLY; Link to the next set of results.
	NextLink *string

	// READ-ONLY; List of Extensions in HCI cluster.
	Value []*Extension
}

// ExtensionParameters - Describes the properties of a Machine Extension. This object mirrors the definition in HybridCompute.
type ExtensionParameters struct {
	// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed,
	// however, the extension will not upgrade minor versions unless redeployed, even
	// with this property set to true.
	AutoUpgradeMinorVersion *bool

	// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.
	EnableAutomaticUpgrade *bool

	// How the extension handler should be forced to update even if the extension configuration has not changed.
	ForceUpdateTag *string

	// Protected settings (may contain secrets).
	ProtectedSettings any

	// The name of the extension handler publisher.
	Publisher *string

	// Json formatted public settings for the extension.
	Settings any

	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type *string

	// Specifies the version of the script handler. Latest version would be used if not specified.
	TypeHandlerVersion *string
}

// ExtensionPatch - Extension Details to update
type ExtensionPatch struct {
	// Describes Machine Extension Properties that can be updated.
	Properties *ExtensionPatchProperties
}

// ExtensionPatchParameters - Describes the properties of a Machine Extension that can be updated.
type ExtensionPatchParameters struct {
	// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.
	EnableAutomaticUpgrade *bool

	// Protected settings (may contain secrets).
	ProtectedSettings any

	// Json formatted public settings for the extension.
	Settings any

	// Specifies the version of the script handler. Latest version would be used if not specified.
	TypeHandlerVersion *string
}

// ExtensionPatchProperties - Describes Machine Extension Properties that can be updated.
type ExtensionPatchProperties struct {
	// Describes the properties of a Machine Extension that can be updated.
	ExtensionParameters *ExtensionPatchParameters
}

// ExtensionProperties - Status of Arc Extension for a particular node in HCI Cluster.
type ExtensionProperties struct {
	// Parameters specific to this extension type.
	ExtensionParameters *ExtensionParameters

	// READ-ONLY; Aggregate state of Arc Extensions across the nodes in this HCI cluster.
	AggregateState *ExtensionAggregateState

	// READ-ONLY; Indicates if the extension is managed by azure or the user.
	ManagedBy *ExtensionManagedBy

	// READ-ONLY; State of Arc Extension in each of the nodes.
	PerNodeExtensionDetails []*PerNodeExtensionState

	// READ-ONLY; Provisioning state of the Extension proxy resource.
	ProvisioningState *ProvisioningState
}

// ExtensionUpgradeParameters - Describes the parameters for Extension upgrade.
type ExtensionUpgradeParameters struct {
	// Extension Upgrade Target Version.
	TargetVersion *string
}

// IsolatedVMAttestationConfiguration - Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.
type IsolatedVMAttestationConfiguration struct {
	// READ-ONLY; Fully qualified Arm Resource Id of the Microsoft Azure Attestation resource associated with this cluster.
	AttestationResourceID *string

	// READ-ONLY; Region specific endpoint for Microsoft Azure Attestation service for the cluster
	AttestationServiceEndpoint *string

	// READ-ONLY; Region specific endpoint for relying party service.
	RelyingPartyServiceEndpoint *string
}

// ManagedServiceIdentity - Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// REQUIRED; Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type *ManagedServiceIdentityType

	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
	// resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
	// The dictionary values can be empty objects ({}) in
	// requests.
	UserAssignedIdentities map[string]*UserAssignedIdentity

	// READ-ONLY; The service principal ID of the system assigned identity. This property will only be provided for a system assigned
	// identity.
	PrincipalID *string

	// READ-ONLY; The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantID *string
}

// Offer details.
type Offer struct {
	// Offer properties.
	Properties *OfferProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// OfferList - List of Offer proxy resources for the HCI cluster.
type OfferList struct {
	// READ-ONLY; Link to the next set of results.
	NextLink *string

	// READ-ONLY; List of Offer proxy resources.
	Value []*Offer
}

// OfferProperties - Publisher properties.
type OfferProperties struct {
	// JSON serialized catalog content of the offer
	Content *string

	// The API version of the catalog service used to serve the catalog content
	ContentVersion *string

	// Identifier of the Publisher for the offer
	PublisherID *string

	// Array of SKU mappings
	SKUMappings []*SKUMappings

	// READ-ONLY; Provisioning State
	ProvisioningState *string
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation
}

// PackageVersionInfo - Current version of each updatable component.
type PackageVersionInfo struct {
	// Last time this component was updated.
	LastUpdated *time.Time

	// Package type
	PackageType *string

	// Package version
	Version *string
}

type PasswordCredential struct {
	EndDateTime   *time.Time
	KeyID         *string
	SecretText    *string
	StartDateTime *time.Time
}

// PerNodeExtensionState - Status of Arc Extension for a particular node in HCI Cluster.
type PerNodeExtensionState struct {
	// READ-ONLY; Fully qualified resource ID for the particular Arc Extension on this node.
	Extension *string

	// READ-ONLY; The extension instance view.
	InstanceView *ExtensionInstanceView

	// READ-ONLY; Name of the node in HCI Cluster.
	Name *string

	// READ-ONLY; State of Arc Extension in this node.
	State *NodeExtensionState

	// READ-ONLY; Specifies the version of the script handler.
	TypeHandlerVersion *string
}

// PerNodeState - Status of Arc agent for a particular node in HCI Cluster.
type PerNodeState struct {
	// READ-ONLY; Fully qualified resource ID for the Arc agent of this node.
	ArcInstance *string

	// READ-ONLY; Name of the Node in HCI Cluster
	Name *string

	// READ-ONLY; State of Arc agent in this node.
	State *NodeArcState
}

type PrecheckResult struct {
	// Property bag of key value pairs for additional information.
	AdditionalData *string

	// Detailed overview of the issue and what impact the issue has on the stamp.
	Description *string

	// The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).
	HealthCheckSource *string

	// Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.
	Name *string

	// Set of steps that can be taken to resolve the issue found.
	Remediation *string

	// Severity of the result (Critical, Warning, Informational, Hidden). This answers how important the result is. Critical is
	// the only update-blocking severity.
	Severity *Severity

	// The status of the check running (i.e. Failed, Succeeded, In Progress). This answers whether the check ran, and passed or
	// failed.
	Status *Status

	// Key-value pairs that allow grouping/filtering individual tests.
	Tags *PrecheckResultTags

	// The unique identifier for the affected resource (such as a node or drive).
	TargetResourceID *string

	// The name of the affected resource.
	TargetResourceName *string

	// The Time in which the HealthCheck was called.
	Timestamp *time.Time

	// User-facing name; one or more sentences indicating the direct issue.
	Title *string
}

// PrecheckResultTags - Key-value pairs that allow grouping/filtering individual tests.
type PrecheckResultTags struct {
	// Key that allow grouping/filtering individual tests.
	Key *string

	// Value of the key that allow grouping/filtering individual tests.
	Value *string
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a
// location
type ProxyResource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// Publisher details.
type Publisher struct {
	// Publisher properties.
	Properties *PublisherProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// PublisherList - List of Publisher proxy resources for the HCI cluster.
type PublisherList struct {
	// READ-ONLY; Link to the next set of results.
	NextLink *string

	// READ-ONLY; List of Publisher proxy resources.
	Value []*Publisher
}

// PublisherProperties - Publisher properties.
type PublisherProperties struct {
	// READ-ONLY; Provisioning State
	ProvisioningState *string
}

type RawCertificateData struct {
	Certificates []*string
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// SKU - Sku details.
type SKU struct {
	// SKU properties.
	Properties *SKUProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// SKUList - List of SKU proxy resources for the HCI cluster.
type SKUList struct {
	// READ-ONLY; Link to the next set of results.
	NextLink *string

	// READ-ONLY; List of SKU proxy resources.
	Value []*SKU
}

// SKUMappings - SKU Mapping details.
type SKUMappings struct {
	// Identifier of the CatalogPlan for the sku
	CatalogPlanID *string

	// Identifier for the sku
	MarketplaceSKUID *string

	// Array of SKU versions available
	MarketplaceSKUVersions []*string
}

// SKUProperties - SKU properties.
type SKUProperties struct {
	// JSON serialized catalog content of the sku offer
	Content *string

	// The API version of the catalog service used to serve the catalog content
	ContentVersion *string

	// Identifier of the Offer for the sku
	OfferID *string

	// Identifier of the Publisher for the offer
	PublisherID *string

	// Array of SKU mappings
	SKUMappings []*SKUMappings

	// READ-ONLY; Provisioning State
	ProvisioningState *string
}

// ServiceConfiguration - Service configuration details
type ServiceConfiguration struct {
	// REQUIRED; The port on which service is enabled.
	Port *int64

	// REQUIRED; Name of the service.
	ServiceName *ServiceName
}

type SoftwareAssuranceChangeRequest struct {
	Properties *SoftwareAssuranceChangeRequestProperties
}

type SoftwareAssuranceChangeRequestProperties struct {
	// Customer Intent for Software Assurance Benefit.
	SoftwareAssuranceIntent *SoftwareAssuranceIntent
}

// SoftwareAssuranceProperties - Software Assurance properties of the cluster.
type SoftwareAssuranceProperties struct {
	// Customer Intent for Software Assurance Benefit.
	SoftwareAssuranceIntent *SoftwareAssuranceIntent

	// READ-ONLY; TimeStamp denoting the latest SA benefit applicability is validated.
	LastUpdated *time.Time

	// READ-ONLY; Status of the Software Assurance for the cluster.
	SoftwareAssuranceStatus *SoftwareAssuranceStatus
}

// Step - Progress representation of the update run steps.
type Step struct {
	// More detailed description of the step.
	Description *string

	// When the step reached a terminal state.
	EndTimeUTC *time.Time

	// Error message, specified if the step is in a failed state.
	ErrorMessage *string

	// Completion time of this step or the last completed sub-step.
	LastUpdatedTimeUTC *time.Time

	// Name of the step.
	Name *string

	// When the step started, or empty if it has not started executing.
	StartTimeUTC *time.Time

	// Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress',
	// and 'Unknown status'.
	Status *string

	// Recursive model for child steps of this step.
	Steps []*Step
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// Update details
type Update struct {
	// The geo-location where the resource lives
	Location *string

	// Update properties
	Properties *UpdateProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// UpdateList - List of Updates
type UpdateList struct {
	// List of Updates
	Value []*Update

	// READ-ONLY; Link to the next set of results.
	NextLink *string
}

// UpdatePrerequisite - If update State is HasPrerequisite, this property contains an array of objects describing prerequisite
// updates before installing this update. Otherwise, it is empty.
type UpdatePrerequisite struct {
	// Friendly name of the prerequisite.
	PackageName *string

	// Updatable component type.
	UpdateType *string

	// Version of the prerequisite.
	Version *string
}

// UpdateProperties - Details of a singular Update in HCI Cluster
type UpdateProperties struct {
	// Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information
	// when an update is flagged as Invalid for the stamp based on OEM type.
	AdditionalProperties *string

	// Indicates the way the update content can be downloaded.
	AvailabilityType *AvailabilityType

	// An array of component versions for a Solution Bundle update, and an empty array otherwise.
	ComponentVersions []*PackageVersionInfo

	// Description of the update.
	Description *string

	// Display name of the Update
	DisplayName *string

	// Last time the package-specific checks were run.
	HealthCheckDate *time.Time

	// An array of PrecheckResult objects.
	HealthCheckResult []*PrecheckResult

	// Overall health state for update-specific health checks.
	HealthState *HealthState

	// Date that the update was installed.
	InstalledDate *time.Time

	// Path where the update package is available.
	PackagePath *string

	// Size of the package. This value is a combination of the size from update metadata and size of the payload that results
	// from the live scan operation for OS update content.
	PackageSizeInMb *float32

	// Customer-visible type of the update.
	PackageType *string

	// If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing
	// this update. Otherwise, it is empty.
	Prerequisites []*UpdatePrerequisite

	// Publisher of the update package.
	Publisher      *string
	RebootRequired *RebootRequirement

	// Link to release notes for the update.
	ReleaseLink *string

	// State of the update as it relates to this stamp.
	State *State

	// Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details
	// on this property.
	UpdateStateProperties *UpdateStateProperties

	// Version of the update.
	Version *string

	// READ-ONLY; Provisioning state of the Updates proxy resource.
	ProvisioningState *ProvisioningState
}

// UpdateRun - Details of an Update run
type UpdateRun struct {
	// The geo-location where the resource lives
	Location *string

	// Describes Update Run Properties.
	Properties *UpdateRunProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// UpdateRunList - List of Update runs
type UpdateRunList struct {
	// List of Update runs
	Value []*UpdateRun

	// READ-ONLY; Link to the next set of results.
	NextLink *string
}

// UpdateRunProperties - Details of an Update run
type UpdateRunProperties struct {
	// Duration of the update run.
	Duration *string

	// Timestamp of the most recently completed step in the update run.
	LastUpdatedTime *time.Time

	// Progress representation of the update run steps.
	Progress *Step

	// State of the update run.
	State *UpdateRunPropertiesState

	// Timestamp of the update run was started.
	TimeStarted *time.Time

	// READ-ONLY; Provisioning state of the UpdateRuns proxy resource.
	ProvisioningState *ProvisioningState
}

// UpdateStateProperties - Additional information regarding the state of the update. See definition of UpdateStateProperties
// type below for more details on this property.
type UpdateStateProperties struct {
	// Brief message with instructions for updates of AvailabilityType Notify.
	NotifyMessage *string

	// Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state,
	// where it maps to how much of the update content has been downloaded.
	ProgressPercentage *float32
}

// UpdateSummaries - Get the update summaries for the cluster
type UpdateSummaries struct {
	// The geo-location where the resource lives
	Location *string

	// Update summaries properties
	Properties *UpdateSummariesProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// UpdateSummariesList - List of Update Summaries
type UpdateSummariesList struct {
	// List of Update Summaries
	Value []*UpdateSummaries

	// READ-ONLY; Link to the next set of results.
	NextLink *string
}

// UpdateSummariesProperties - Properties of Update summaries
type UpdateSummariesProperties struct {
	// Current Solution Bundle version of the stamp.
	CurrentVersion *string

	// Name of the hardware model.
	HardwareModel *string

	// Last time the package-specific checks were run.
	HealthCheckDate *time.Time

	// An array of pre-check result objects.
	HealthCheckResult []*PrecheckResult

	// Overall health state for update-specific health checks.
	HealthState *HealthState

	// Last time the update service successfully checked for updates
	LastChecked *time.Time

	// Last time an update installation completed successfully.
	LastUpdated *time.Time

	// OEM family name.
	OemFamily *string

	// Current version of each updatable component.
	PackageVersions []*PackageVersionInfo

	// Overall update state of the stamp.
	State *UpdateSummariesPropertiesState

	// READ-ONLY; Provisioning state of the UpdateSummaries proxy resource.
	ProvisioningState *ProvisioningState
}

type UploadCertificateRequest struct {
	Properties *RawCertificateData
}

// UserAssignedIdentity - User assigned identity properties
type UserAssignedIdentity struct {
	// READ-ONLY; The client ID of the assigned identity.
	ClientID *string

	// READ-ONLY; The principal ID of the assigned identity.
	PrincipalID *string
}
