//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armresourcehealth

const (
	moduleName    = "armresourcehealth"
	moduleVersion = "v2.0.0"
)

// EventLevelValues - Level of event.
type EventLevelValues string

const (
	EventLevelValuesCritical      EventLevelValues = "Critical"
	EventLevelValuesError         EventLevelValues = "Error"
	EventLevelValuesInformational EventLevelValues = "Informational"
	EventLevelValuesWarning       EventLevelValues = "Warning"
)

// PossibleEventLevelValuesValues returns the possible values for the EventLevelValues const type.
func PossibleEventLevelValuesValues() []EventLevelValues {
	return []EventLevelValues{
		EventLevelValuesCritical,
		EventLevelValuesError,
		EventLevelValuesInformational,
		EventLevelValuesWarning,
	}
}

// EventSourceValues - Source of event.
type EventSourceValues string

const (
	EventSourceValuesResourceHealth EventSourceValues = "ResourceHealth"
	EventSourceValuesServiceHealth  EventSourceValues = "ServiceHealth"
)

// PossibleEventSourceValuesValues returns the possible values for the EventSourceValues const type.
func PossibleEventSourceValuesValues() []EventSourceValues {
	return []EventSourceValues{
		EventSourceValuesResourceHealth,
		EventSourceValuesServiceHealth,
	}
}

// EventStatusValues - Current status of event.
type EventStatusValues string

const (
	EventStatusValuesActive   EventStatusValues = "Active"
	EventStatusValuesResolved EventStatusValues = "Resolved"
)

// PossibleEventStatusValuesValues returns the possible values for the EventStatusValues const type.
func PossibleEventStatusValuesValues() []EventStatusValues {
	return []EventStatusValues{
		EventStatusValuesActive,
		EventStatusValuesResolved,
	}
}

// EventTypeValues - Type of event.
type EventTypeValues string

const (
	EventTypeValuesEmergingIssues     EventTypeValues = "EmergingIssues"
	EventTypeValuesHealthAdvisory     EventTypeValues = "HealthAdvisory"
	EventTypeValuesPlannedMaintenance EventTypeValues = "PlannedMaintenance"
	EventTypeValuesRCA                EventTypeValues = "RCA"
	EventTypeValuesSecurityAdvisory   EventTypeValues = "SecurityAdvisory"
	EventTypeValuesServiceIssue       EventTypeValues = "ServiceIssue"
)

// PossibleEventTypeValuesValues returns the possible values for the EventTypeValues const type.
func PossibleEventTypeValuesValues() []EventTypeValues {
	return []EventTypeValues{
		EventTypeValuesEmergingIssues,
		EventTypeValuesHealthAdvisory,
		EventTypeValuesPlannedMaintenance,
		EventTypeValuesRCA,
		EventTypeValuesSecurityAdvisory,
		EventTypeValuesServiceIssue,
	}
}

// LevelValues - Level of insight.
type LevelValues string

const (
	LevelValuesCritical LevelValues = "Critical"
	LevelValuesWarning  LevelValues = "Warning"
)

// PossibleLevelValuesValues returns the possible values for the LevelValues const type.
func PossibleLevelValuesValues() []LevelValues {
	return []LevelValues{
		LevelValuesCritical,
		LevelValuesWarning,
	}
}

// LinkTypeValues - Type of link.
type LinkTypeValues string

const (
	LinkTypeValuesButton    LinkTypeValues = "Button"
	LinkTypeValuesHyperlink LinkTypeValues = "Hyperlink"
)

// PossibleLinkTypeValuesValues returns the possible values for the LinkTypeValues const type.
func PossibleLinkTypeValuesValues() []LinkTypeValues {
	return []LinkTypeValues{
		LinkTypeValuesButton,
		LinkTypeValuesHyperlink,
	}
}
