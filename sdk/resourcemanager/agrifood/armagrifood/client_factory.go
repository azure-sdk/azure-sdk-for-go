//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armagrifood

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID string
	credential     azcore.TokenCredential
	options        *arm.ClientOptions
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - The ID of the target subscription. The value must be an UUID.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	_, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID: subscriptionID, credential: credential,
		options: options.Clone(),
	}, nil
}

// NewCheckNameAvailabilityClient creates a new instance of CheckNameAvailabilityClient.
func (c *ClientFactory) NewCheckNameAvailabilityClient() *CheckNameAvailabilityClient {
	subClient, _ := NewCheckNameAvailabilityClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

// NewDataConnectorsClient creates a new instance of DataConnectorsClient.
func (c *ClientFactory) NewDataConnectorsClient() *DataConnectorsClient {
	subClient, _ := NewDataConnectorsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

// NewDataManagerForAgricultureExtensionsClient creates a new instance of DataManagerForAgricultureExtensionsClient.
func (c *ClientFactory) NewDataManagerForAgricultureExtensionsClient() *DataManagerForAgricultureExtensionsClient {
	subClient, _ := NewDataManagerForAgricultureExtensionsClient(c.credential, c.options)
	return subClient
}

// NewDataManagerForAgricultureResourcesClient creates a new instance of DataManagerForAgricultureResourcesClient.
func (c *ClientFactory) NewDataManagerForAgricultureResourcesClient() *DataManagerForAgricultureResourcesClient {
	subClient, _ := NewDataManagerForAgricultureResourcesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

// NewExtensionsClient creates a new instance of ExtensionsClient.
func (c *ClientFactory) NewExtensionsClient() *ExtensionsClient {
	subClient, _ := NewExtensionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

// NewOperationResultsClient creates a new instance of OperationResultsClient.
func (c *ClientFactory) NewOperationResultsClient() *OperationResultsClient {
	subClient, _ := NewOperationResultsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

// NewOperationsClient creates a new instance of OperationsClient.
func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	subClient, _ := NewOperationsClient(c.credential, c.options)
	return subClient
}

// NewPrivateEndpointConnectionsClient creates a new instance of PrivateEndpointConnectionsClient.
func (c *ClientFactory) NewPrivateEndpointConnectionsClient() *PrivateEndpointConnectionsClient {
	subClient, _ := NewPrivateEndpointConnectionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

// NewPrivateLinkResourcesClient creates a new instance of PrivateLinkResourcesClient.
func (c *ClientFactory) NewPrivateLinkResourcesClient() *PrivateLinkResourcesClient {
	subClient, _ := NewPrivateLinkResourcesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

// NewSolutionsClient creates a new instance of SolutionsClient.
func (c *ClientFactory) NewSolutionsClient() *SolutionsClient {
	subClient, _ := NewSolutionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

// NewSolutionsDiscoverabilityClient creates a new instance of SolutionsDiscoverabilityClient.
func (c *ClientFactory) NewSolutionsDiscoverabilityClient() *SolutionsDiscoverabilityClient {
	subClient, _ := NewSolutionsDiscoverabilityClient(c.credential, c.options)
	return subClient
}
