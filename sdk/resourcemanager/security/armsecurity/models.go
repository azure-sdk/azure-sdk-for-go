//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armsecurity

import "time"

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any `json:"info,omitempty" azure:"ro"`

	// READ-ONLY; The additional info type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SQLVulnerabilityAssessmentScansClientGetOptions contains the optional parameters for the SQLVulnerabilityAssessmentScansClient.Get
// method.
type SQLVulnerabilityAssessmentScansClientGetOptions struct {
	// placeholder for future optional parameters
}

// SQLVulnerabilityAssessmentScansClientListOptions contains the optional parameters for the SQLVulnerabilityAssessmentScansClient.List
// method.
type SQLVulnerabilityAssessmentScansClientListOptions struct {
	// placeholder for future optional parameters
}

// ScanPropertiesV2 - A vulnerability assessment scan record properties.
type ScanPropertiesV2 struct {
	// The database name.
	Database *string `json:"database,omitempty"`

	// Scan results are valid until end time (UTC).
	EndTime *time.Time `json:"endTime,omitempty"`

	// The number of failed rules with high severity.
	HighSeverityFailedRulesCount *int32 `json:"highSeverityFailedRulesCount,omitempty"`

	// Baseline created for this database, and has one or more rules.
	IsBaselineApplied *bool `json:"isBaselineApplied,omitempty"`

	// Last scan time.
	LastScanTime *time.Time `json:"lastScanTime,omitempty"`

	// The number of failed rules with low severity.
	LowSeverityFailedRulesCount *int32 `json:"lowSeverityFailedRulesCount,omitempty"`

	// The number of failed rules with medium severity.
	MediumSeverityFailedRulesCount *int32 `json:"mediumSeverityFailedRulesCount,omitempty"`

	// The SQL version.
	SQLVersion *string `json:"sqlVersion,omitempty"`

	// The server name.
	Server *string `json:"server,omitempty"`

	// The scan start time (UTC).
	StartTime *time.Time `json:"startTime,omitempty"`

	// The scan status.
	State *ScanState `json:"state,omitempty"`

	// The number of total failed rules.
	TotalFailedRulesCount *int32 `json:"totalFailedRulesCount,omitempty"`

	// The number of total passed rules.
	TotalPassedRulesCount *int32 `json:"totalPassedRulesCount,omitempty"`

	// The number of total rules assessed.
	TotalRulesCount *int32 `json:"totalRulesCount,omitempty"`

	// The scan trigger type.
	TriggerType *ScanTriggerType `json:"triggerType,omitempty"`
}

// ScanV2 - A vulnerability assessment scan record.
type ScanV2 struct {
	// Resource Id.
	ID *string `json:"id,omitempty"`

	// Resource name.
	Name *string `json:"name,omitempty"`

	// A vulnerability assessment scan record properties.
	Properties *ScanPropertiesV2 `json:"properties,omitempty"`

	// Resource type.
	Type *string `json:"type,omitempty"`
}

type ScansV2 struct {
	// List of vulnerability assessment scan records.
	Value []*ScanV2 `json:"value,omitempty"`
}
