//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armmigrate

import "time"

type AgentConfiguration struct {
	AgentID                 *string                         `json:"agentId,omitempty"`
	ClockGranularity        *int32                          `json:"clockGranularity,omitempty"`
	DependencyAgentID       *string                         `json:"dependencyAgentId,omitempty"`
	DependencyAgentRevision *string                         `json:"dependencyAgentRevision,omitempty"`
	DependencyAgentVersion  *string                         `json:"dependencyAgentVersion,omitempty"`
	RebootStatus            *AgentConfigurationRebootStatus `json:"rebootStatus,omitempty"`
}

// Application in the guest virtual machine.
type Application struct {
	// READ-ONLY; Name of the Application.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Provider of the Application.
	Provider *string `json:"provider,omitempty" azure:"ro"`

	// READ-ONLY; Version of the Application.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// AppsAndRoles in the guest virtual machine.
type AppsAndRoles struct {
	// READ-ONLY; Applications of the AppsAndRoles.
	Applications []*Application `json:"applications,omitempty" azure:"ro"`

	// READ-ONLY; BizTalkServers of the AppsAndRoles.
	BizTalkServers []*BizTalkServer `json:"bizTalkServers,omitempty" azure:"ro"`

	// READ-ONLY; ExchangeServers of the AppsAndRoles.
	ExchangeServers []*ExchangeServer `json:"exchangeServers,omitempty" azure:"ro"`

	// READ-ONLY; Features of the AppsAndRoles.
	Features []*Feature `json:"features,omitempty" azure:"ro"`

	// READ-ONLY; OtherDatabaseServers of the AppsAndRoles.
	OtherDatabases []*OtherDatabase `json:"otherDatabases,omitempty" azure:"ro"`

	// READ-ONLY; SQLServers of the AppsAndRoles.
	SQLServers []*SQLServer `json:"sqlServers,omitempty" azure:"ro"`

	// READ-ONLY; SharePointServers of the AppsAndRoles.
	SharePointServers []*SharePointServer `json:"sharePointServers,omitempty" azure:"ro"`

	// READ-ONLY; SystemCenters of the AppsAndRoles.
	SystemCenters []*SystemCenter `json:"systemCenters,omitempty" azure:"ro"`

	// READ-ONLY; WebApplications of the AppsAndRoles.
	WebApplications []*WebApplication `json:"webApplications,omitempty" azure:"ro"`
}

// AvailableOperations - Available operations of the service
type AvailableOperations struct {
	// URL client should use to fetch the next page (per server side paging). It's null for now, added for future use.
	NextLink *string `json:"nextLink,omitempty"`

	// Collection of available operation details
	Value []*OperationDetail `json:"value,omitempty"`
}

// BizTalkServer in the guest virtual machine.
type BizTalkServer struct {
	// READ-ONLY; ProductName of the BizTalkServer.
	ProductName *string `json:"productName,omitempty" azure:"ro"`

	// READ-ONLY; Status of the BizTalkServer.
	Status *string `json:"status,omitempty" azure:"ro"`
}

// ErrorDetails - Error contract returned when some exception occurs in Rest API.
type ErrorDetails struct {
	// READ-ONLY; Agent error code.
	AgentErrorCode *string `json:"agentErrorCode,omitempty" azure:"ro"`

	// READ-ONLY; Error message from the agent.
	AgentErrorMessage *string `json:"agentErrorMessage,omitempty" azure:"ro"`

	// READ-ONLY; Possible causes for the agent error.
	AgentErrorPossibleCauses *string `json:"agentErrorPossibleCauses,omitempty" azure:"ro"`

	// READ-ONLY; Recommended action for the agent error.
	AgentErrorRecommendedAction *string `json:"agentErrorRecommendedAction,omitempty" azure:"ro"`

	// READ-ONLY; Error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Value indicating whether the error originated from a agent or not.
	IsAgentReportedError *bool `json:"isAgentReportedError,omitempty" azure:"ro"`

	// READ-ONLY; Error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; Possible causes of error.
	PossibleCauses *string `json:"possibleCauses,omitempty" azure:"ro"`

	// READ-ONLY; Recommended action to resolve error.
	RecommendedAction *string `json:"recommendedAction,omitempty" azure:"ro"`

	// READ-ONLY; Error severity.
	Severity *string `json:"severity,omitempty" azure:"ro"`
}

// ExchangeServer in the guest virtual machine.
type ExchangeServer struct {
	// READ-ONLY; Edition of the ExchangeServer.
	Edition *string `json:"edition,omitempty" azure:"ro"`

	// READ-ONLY; ProductName of the ExchangeServer.
	ProductName *string `json:"productName,omitempty" azure:"ro"`

	// READ-ONLY; Roles of the ExchangeServer.
	Roles *string `json:"roles,omitempty" azure:"ro"`

	// READ-ONLY; ServicePack of the ExchangeServer.
	ServicePack *string `json:"servicePack,omitempty" azure:"ro"`

	// READ-ONLY; Version of the ExchangeServer.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// Feature in the guest virtual machine.
type Feature struct {
	// READ-ONLY; FeatureType of the Feature.
	FeatureType *string `json:"featureType,omitempty" azure:"ro"`

	// READ-ONLY; Name of the Feature.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Parent of the Feature.
	Parent *string `json:"parent,omitempty" azure:"ro"`

	// READ-ONLY; Status of the Feature.
	Status *string `json:"status,omitempty" azure:"ro"`
}

// GuestOSDetails - Data related to a machine's operating system. Serialized and stored as part of Machine Rest object.
type GuestOSDetails struct {
	// Type of the operating system.
	OSType *string `json:"osType,omitempty"`

	// READ-ONLY; Name of the operating system.
	OSName *string `json:"osName,omitempty" azure:"ro"`

	// READ-ONLY; Version of the operating system.
	OSVersion *string `json:"osVersion,omitempty" azure:"ro"`
}

// HealthErrorDetails - Error contract returned when some exception occurs in Rest API.
type HealthErrorDetails struct {
	// READ-ONLY; Error name.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Error ID.
	ID *int64 `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; Message parameters.
	MessageParameters map[string]*string `json:"messageParameters,omitempty" azure:"ro"`

	// READ-ONLY; Possible causes of error.
	PossibleCauses *string `json:"possibleCauses,omitempty" azure:"ro"`

	// READ-ONLY; Recommended action to resolve error.
	RecommendedAction *string `json:"recommendedAction,omitempty" azure:"ro"`

	// READ-ONLY; Error severity.
	Severity *string `json:"severity,omitempty" azure:"ro"`

	// READ-ONLY; Error source.
	Source *string `json:"source,omitempty" azure:"ro"`

	// READ-ONLY; Error summary message.
	SummaryMessage *string `json:"summaryMessage,omitempty" azure:"ro"`
}

type HostingConfiguration struct {
	Provider *string `json:"provider,omitempty"`
}

// HyperVCluster - Cluster REST Resource.
type HyperVCluster struct {
	// Name of the cluster.
	Name *string `json:"name,omitempty"`

	// Nested properties of the cluster.
	Properties *HyperVClusterProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/hyperVSites/clusters.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// HyperVClusterClientGetAllClustersInSiteOptions contains the optional parameters for the HyperVClusterClient.NewGetAllClustersInSitePager
// method.
type HyperVClusterClientGetAllClustersInSiteOptions struct {
	Filter *string
}

// HyperVClusterClientGetClusterOptions contains the optional parameters for the HyperVClusterClient.GetCluster method.
type HyperVClusterClientGetClusterOptions struct {
	// placeholder for future optional parameters
}

// HyperVClusterClientPutClusterOptions contains the optional parameters for the HyperVClusterClient.PutCluster method.
type HyperVClusterClientPutClusterOptions struct {
	// placeholder for future optional parameters
}

// HyperVClusterCollection - Collection of Hyper-V clusters.
type HyperVClusterCollection struct {
	// READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of clusters.
	Value []*HyperVCluster `json:"value,omitempty" azure:"ro"`
}

// HyperVClusterProperties - Class for cluster properties.
type HyperVClusterProperties struct {
	// FQDN/IPAddress of the Hyper-V cluster.
	Fqdn *string `json:"fqdn,omitempty"`

	// List of hosts (FQDN) currently being tracked by the cluster.
	HostFqdnList []*string `json:"hostFqdnList,omitempty"`

	// Run as account ID of the Hyper-V cluster.
	RunAsAccountID *string `json:"runAsAccountId,omitempty"`

	// READ-ONLY; Timestamp marking Hyper-V cluster creation.
	CreatedTimestamp *string `json:"createdTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Errors for Hyper-V clusters.
	Errors []*HealthErrorDetails `json:"errors,omitempty" azure:"ro"`

	// READ-ONLY; Functional level of the Hyper-V cluster.
	FunctionalLevel *int32 `json:"functionalLevel,omitempty" azure:"ro"`

	// READ-ONLY; Status of the Hyper-V cluster.
	Status *string `json:"status,omitempty" azure:"ro"`

	// READ-ONLY; Timestamp marking last updated on the Hyper-V cluster.
	UpdatedTimestamp *string `json:"updatedTimestamp,omitempty" azure:"ro"`
}

// HyperVDisk - Second level object returned as part of Machine REST resource.
type HyperVDisk struct {
	// READ-ONLY; Type of the disk.
	DiskType *string `json:"diskType,omitempty" azure:"ro"`

	// READ-ONLY; Id of the disk.
	InstanceID *string `json:"instanceId,omitempty" azure:"ro"`

	// READ-ONLY; LUN of the disk.
	Lun *int32 `json:"lun,omitempty" azure:"ro"`

	// READ-ONLY; Bytes allocated for the disk.
	MaxSizeInBytes *int64 `json:"maxSizeInBytes,omitempty" azure:"ro"`

	// READ-ONLY; Name of the disk.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Path of the disk.
	Path *string `json:"path,omitempty" azure:"ro"`

	// READ-ONLY; VHD Id of the disk.
	VhdID *string `json:"vhdId,omitempty" azure:"ro"`
}

// HyperVHost - Host REST Resource.
type HyperVHost struct {
	// Name of the host.
	Name *string `json:"name,omitempty"`

	// Nested properties.
	Properties *HyperVHostProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/hyperVSites/hosts.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// HyperVHostClientGetAllHostsInSiteOptions contains the optional parameters for the HyperVHostClient.NewGetAllHostsInSitePager
// method.
type HyperVHostClientGetAllHostsInSiteOptions struct {
	Filter *string
}

// HyperVHostClientGetHostOptions contains the optional parameters for the HyperVHostClient.GetHost method.
type HyperVHostClientGetHostOptions struct {
	// placeholder for future optional parameters
}

// HyperVHostClientPutHostOptions contains the optional parameters for the HyperVHostClient.PutHost method.
type HyperVHostClientPutHostOptions struct {
	// placeholder for future optional parameters
}

// HyperVHostCollection - Collection of Hyper-V hosts.
type HyperVHostCollection struct {
	// READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of hosts.
	Value []*HyperVHost `json:"value,omitempty" azure:"ro"`
}

// HyperVHostProperties - Class for host properties.
type HyperVHostProperties struct {
	// FQDN/IPAddress of the Hyper-V host.
	Fqdn *string `json:"fqdn,omitempty"`

	// Run as account ID of the Hyper-V host.
	RunAsAccountID *string `json:"runAsAccountId,omitempty"`

	// READ-ONLY; Timestamp marking Hyper-V host creation.
	CreatedTimestamp *string `json:"createdTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Errors for Hyper-V hosts.
	Errors []*HealthErrorDetails `json:"errors,omitempty" azure:"ro"`

	// READ-ONLY; Timestamp marking last updated on the Hyper-V host.
	UpdatedTimestamp *string `json:"updatedTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Version of the Hyper-V host.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// HyperVJob - Job REST Resource.
type HyperVJob struct {
	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the Job.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; nested properties of Hyper-V job.
	Properties *JobProperties `json:"properties,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/HyperVSites/Jobs.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// HyperVJobCollection - Collection of Hyper-V jobs.
type HyperVJobCollection struct {
	// READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of jobs.
	Value []*HyperVJob `json:"value,omitempty" azure:"ro"`
}

// HyperVJobsClientGetAllJobsInSiteOptions contains the optional parameters for the HyperVJobsClient.NewGetAllJobsInSitePager
// method.
type HyperVJobsClientGetAllJobsInSiteOptions struct {
	// placeholder for future optional parameters
}

// HyperVJobsClientGetJobOptions contains the optional parameters for the HyperVJobsClient.GetJob method.
type HyperVJobsClientGetJobOptions struct {
	// placeholder for future optional parameters
}

// HyperVMachine - Machine REST Resource.
type HyperVMachine struct {
	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the Sites.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Nested properties.
	Properties *HyperVMachineProperties `json:"properties,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/HyperVSites/Machines.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// HyperVMachineCollection - Collection of Hyper-V machines.
type HyperVMachineCollection struct {
	// READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of machines.
	Value []*HyperVMachine `json:"value,omitempty" azure:"ro"`
}

// HyperVMachineProperties - Class for machine properties.
type HyperVMachineProperties struct {
	// READ-ONLY; Allocated Memory in MB.
	AllocatedMemoryInMB *float64 `json:"allocatedMemoryInMB,omitempty" azure:"ro"`

	// READ-ONLY; Apps and Roles of the VM.
	AppsAndRoles *AppsAndRoles `json:"appsAndRoles,omitempty" azure:"ro"`

	// READ-ONLY; Machine BIOS GUID.
	BiosGUID *string `json:"biosGuid,omitempty" azure:"ro"`

	// READ-ONLY; Machine BIOS serial number.
	BiosSerialNumber *string `json:"biosSerialNumber,omitempty" azure:"ro"`

	// READ-ONLY; Cluster FQDN/IPAddress.
	ClusterFqdn *string `json:"clusterFqdn,omitempty" azure:"ro"`

	// READ-ONLY; Cluster ARM ID.
	ClusterID *string `json:"clusterId,omitempty" azure:"ro"`

	// READ-ONLY; Timestamp marking machine creation.
	CreatedTimestamp *string `json:"createdTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Disks attached to the machine.
	Disks []*HyperVDisk `json:"disks,omitempty" azure:"ro"`

	// READ-ONLY; Display name of the machine.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; Errors for machine.
	Errors []*HealthErrorDetails `json:"errors,omitempty" azure:"ro"`

	// READ-ONLY; Firmware of the machine.
	Firmware *string `json:"firmware,omitempty" azure:"ro"`

	// READ-ONLY; Generation of the virtual machine.
	Generation *int32 `json:"generation,omitempty" azure:"ro"`

	// READ-ONLY; The last time at which the Guest Details of machine was discovered.
	GuestDetailsDiscoveryTimestamp *time.Time `json:"guestDetailsDiscoveryTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Operating System Details extracted from the guest by executing script inside the guest VM.
	GuestOSDetails *GuestOSDetails `json:"guestOSDetails,omitempty" azure:"ro"`

	// READ-ONLY; Value indicating whether the VM is highly available.
	HighAvailability *HighlyAvailable `json:"highAvailability,omitempty" azure:"ro"`

	// READ-ONLY; Host FQDN/IPAddress.
	HostFqdn *string `json:"hostFqdn,omitempty" azure:"ro"`

	// READ-ONLY; Host ARM ID.
	HostID *string `json:"hostId,omitempty" azure:"ro"`

	// READ-ONLY; On-premise Instance UUID of the machine.
	InstanceUUID *string `json:"instanceUuid,omitempty" azure:"ro"`

	// READ-ONLY; Value indicating whether VM is deleted.
	IsDeleted *bool `json:"isDeleted,omitempty" azure:"ro"`

	// READ-ONLY; Value indicating whether dynamic memory is enabled for the VM.
	IsDynamicMemoryEnabled *bool `json:"isDynamicMemoryEnabled,omitempty" azure:"ro"`

	// READ-ONLY; Whether Refresh Fabric Layout Guest Details has been completed once. Portal will show discovery in progress,
	// if this value is true.
	IsGuestDetailsDiscoveryInProgress *bool `json:"isGuestDetailsDiscoveryInProgress,omitempty" azure:"ro"`

	// READ-ONLY; Management server type of the machine. It is either Host or Cluster.
	ManagementServerType *string `json:"managementServerType,omitempty" azure:"ro"`

	// READ-ONLY; Max memory of the virtual machine in MB.
	MaxMemoryMB *int32 `json:"maxMemoryMB,omitempty" azure:"ro"`

	// READ-ONLY; Network adapters attached to the machine.
	NetworkAdapters []*HyperVNetworkAdapter `json:"networkAdapters,omitempty" azure:"ro"`

	// READ-ONLY; Number of applications installed in the guest VM.
	NumberOfApplications *int32 `json:"numberOfApplications,omitempty" azure:"ro"`

	// READ-ONLY; Number of Processor Cores allocated for the machine.
	NumberOfProcessorCore *int32 `json:"numberOfProcessorCore,omitempty" azure:"ro"`

	// READ-ONLY; Operating System Details installed on the machine.
	OperatingSystemDetails *OperatingSystem `json:"operatingSystemDetails,omitempty" azure:"ro"`

	// READ-ONLY; Machine power status.
	PowerStatus *string `json:"powerStatus,omitempty" azure:"ro"`

	// READ-ONLY; Timestamp marking last updated on the machine.
	UpdatedTimestamp *string `json:"updatedTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Root location of the VM configuration file.
	VMConfigurationFileLocation *string `json:"vmConfigurationFileLocation,omitempty" azure:"ro"`

	// READ-ONLY; Machine FQDN.
	VMFqdn *string `json:"vmFqdn,omitempty" azure:"ro"`

	// READ-ONLY; VM version.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// HyperVMachinesClientGetAllMachinesInSiteOptions contains the optional parameters for the HyperVMachinesClient.NewGetAllMachinesInSitePager
// method.
type HyperVMachinesClientGetAllMachinesInSiteOptions struct {
	// Optional parameter for continuation token.
	ContinuationToken *string
	Filter            *string
	Top               *int32
	// Total count of machines in the given site.
	TotalRecordCount *int32
}

// HyperVMachinesClientGetMachineOptions contains the optional parameters for the HyperVMachinesClient.GetMachine method.
type HyperVMachinesClientGetMachineOptions struct {
	// placeholder for future optional parameters
}

// HyperVNetworkAdapter - Second level object represented in responses as part of Machine REST resource.
type HyperVNetworkAdapter struct {
	// READ-ONLY; IP addresses for the machine.
	IPAddressList []*string `json:"ipAddressList,omitempty" azure:"ro"`

	// READ-ONLY; Type of the IP address.
	IPAddressType *string `json:"ipAddressType,omitempty" azure:"ro"`

	// READ-ONLY; Mac address of the NIC.
	MacAddress *string `json:"macAddress,omitempty" azure:"ro"`

	// READ-ONLY; Network Id.
	NetworkID *string `json:"networkId,omitempty" azure:"ro"`

	// READ-ONLY; Network Name.
	NetworkName *string `json:"networkName,omitempty" azure:"ro"`

	// READ-ONLY; NIC Id.
	NicID *string `json:"nicId,omitempty" azure:"ro"`

	// READ-ONLY; Mac address of the NIC.
	NicType *string `json:"nicType,omitempty" azure:"ro"`

	// READ-ONLY; Static IP address.
	StaticIPAddress *string `json:"staticIpAddress,omitempty" azure:"ro"`

	// READ-ONLY; Name of the VM subnet within the virtual network the NIC is attached to.
	SubnetName *string `json:"subnetName,omitempty" azure:"ro"`
}

// HyperVOperationsStatusClientGetOperationStatusOptions contains the optional parameters for the HyperVOperationsStatusClient.GetOperationStatus
// method.
type HyperVOperationsStatusClientGetOperationStatusOptions struct {
	// placeholder for future optional parameters
}

// HyperVRunAsAccount - Run as account REST Resource.
type HyperVRunAsAccount struct {
	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the Sites.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Nested properties of run as account.
	Properties *RunAsAccountProperties `json:"properties,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/HyperVSites/RunAsAccounts.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// HyperVRunAsAccountCollection - Collection of Hyper-V run as accounts.
type HyperVRunAsAccountCollection struct {
	// READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of run as accounts.
	Value []*HyperVRunAsAccount `json:"value,omitempty" azure:"ro"`
}

// HyperVRunAsAccountsClientGetAllRunAsAccountsInSiteOptions contains the optional parameters for the HyperVRunAsAccountsClient.NewGetAllRunAsAccountsInSitePager
// method.
type HyperVRunAsAccountsClientGetAllRunAsAccountsInSiteOptions struct {
	// placeholder for future optional parameters
}

// HyperVRunAsAccountsClientGetRunAsAccountOptions contains the optional parameters for the HyperVRunAsAccountsClient.GetRunAsAccount
// method.
type HyperVRunAsAccountsClientGetRunAsAccountOptions struct {
	// placeholder for future optional parameters
}

// HyperVSite - Site REST Resource.
type HyperVSite struct {
	// eTag for concurrency control.
	ETag *string `json:"eTag,omitempty"`

	// Azure location in which Sites is created.
	Location *string `json:"location,omitempty"`

	// Name of the Hyper-V site.
	Name *string `json:"name,omitempty"`

	// Nested properties of Hyper-V site.
	Properties *SiteProperties `json:"properties,omitempty"`

	// Dictionary of
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/HyperVSites.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// HyperVSiteUsage - Hyper-V site usage.
type HyperVSiteUsage struct {
	// Number of clusters part of the site.
	ClusterCount *int32 `json:"clusterCount,omitempty"`

	// Number of hosts part of the site.
	HostCount *int32 `json:"hostCount,omitempty"`

	// Number of machines discovered in the site.
	MachineCount *int32 `json:"machineCount,omitempty"`

	// Number of run as accounts in the site.
	RunAsAccountCount *int32 `json:"runAsAccountCount,omitempty"`
}

// HyperVSitesClientDeleteSiteOptions contains the optional parameters for the HyperVSitesClient.DeleteSite method.
type HyperVSitesClientDeleteSiteOptions struct {
	// placeholder for future optional parameters
}

// HyperVSitesClientGetSiteHealthSummaryOptions contains the optional parameters for the HyperVSitesClient.NewGetSiteHealthSummaryPager
// method.
type HyperVSitesClientGetSiteHealthSummaryOptions struct {
	// placeholder for future optional parameters
}

// HyperVSitesClientGetSiteOptions contains the optional parameters for the HyperVSitesClient.GetSite method.
type HyperVSitesClientGetSiteOptions struct {
	// placeholder for future optional parameters
}

// HyperVSitesClientGetSiteUsageOptions contains the optional parameters for the HyperVSitesClient.GetSiteUsage method.
type HyperVSitesClientGetSiteUsageOptions struct {
	// placeholder for future optional parameters
}

// HyperVSitesClientListBySubscriptionOptions contains the optional parameters for the HyperVSitesClient.NewListBySubscriptionPager
// method.
type HyperVSitesClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// HyperVSitesClientListOptions contains the optional parameters for the HyperVSitesClient.NewListPager method.
type HyperVSitesClientListOptions struct {
	// placeholder for future optional parameters
}

// HyperVSitesClientPatchSiteOptions contains the optional parameters for the HyperVSitesClient.PatchSite method.
type HyperVSitesClientPatchSiteOptions struct {
	// placeholder for future optional parameters
}

// HyperVSitesClientPutSiteOptions contains the optional parameters for the HyperVSitesClient.PutSite method.
type HyperVSitesClientPutSiteOptions struct {
	// placeholder for future optional parameters
}

// HyperVSitesClientRefreshSiteOptions contains the optional parameters for the HyperVSitesClient.RefreshSite method.
type HyperVSitesClientRefreshSiteOptions struct {
	// placeholder for future optional parameters
}

// HyperVSitesResultList - List of sites.
type HyperVSitesResultList struct {
	NextLink *string `json:"nextLink,omitempty"`

	// List of sites.
	Value []*HyperVSite `json:"value,omitempty"`
}

type HypervisorConfiguration struct {
	HypervisorType      *HypervisorConfigurationHypervisorType `json:"hypervisorType,omitempty"`
	NativeHostMachineID *string                                `json:"nativeHostMachineId,omitempty"`
}

type IPv4NetworkInterface struct {
	IPAddress  *string `json:"ipAddress,omitempty"`
	SubnetMask *string `json:"subnetMask,omitempty"`
}

type IPv6NetworkInterface struct {
	IPAddress *string `json:"ipAddress,omitempty"`
}

// JobProperties - Class for machine properties.
type JobProperties struct {
	// READ-ONLY; Activity Id used in the operation execution context.
	ActivityID *string `json:"activityId,omitempty" azure:"ro"`

	// READ-ONLY; Client request Id used in the operation execution context.
	ClientRequestID *string `json:"clientRequestId,omitempty" azure:"ro"`

	// READ-ONLY; Display name of the Job.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; Operation end time.
	EndTime *string `json:"endTime,omitempty" azure:"ro"`

	// READ-ONLY; Error details.
	Errors []*ErrorDetails `json:"errors,omitempty" azure:"ro"`

	// READ-ONLY; Operation start time.
	StartTime *string `json:"startTime,omitempty" azure:"ro"`

	// READ-ONLY; Operation status.
	Status *string `json:"status,omitempty" azure:"ro"`
}

// JobsClientGetAllJobsInSiteOptions contains the optional parameters for the JobsClient.NewGetAllJobsInSitePager method.
type JobsClientGetAllJobsInSiteOptions struct {
	// placeholder for future optional parameters
}

// JobsClientGetJobOptions contains the optional parameters for the JobsClient.GetJob method.
type JobsClientGetJobOptions struct {
	// placeholder for future optional parameters
}

type Machine struct {
	Etag                               *string                               `json:"etag,omitempty"`
	ID                                 *string                               `json:"id,omitempty"`
	Name                               *string                               `json:"name,omitempty"`
	PropertiesAgent                    *AgentConfiguration                   `json:"properties.agent,omitempty"`
	PropertiesBootTime                 *time.Time                            `json:"properties.bootTime,omitempty"`
	PropertiesComputerName             *string                               `json:"properties.computerName,omitempty"`
	PropertiesDisplayName              *string                               `json:"properties.displayName,omitempty"`
	PropertiesFullyQualifiedDomainName *string                               `json:"properties.fullyQualifiedDomainName,omitempty"`
	PropertiesHosting                  *HostingConfiguration                 `json:"properties.hosting,omitempty"`
	PropertiesHypervisor               *HypervisorConfiguration              `json:"properties.hypervisor,omitempty"`
	PropertiesMonitoringState          *MachinePropertiesMonitoringState     `json:"properties.monitoringState,omitempty"`
	PropertiesNetworking               *NetworkConfiguration                 `json:"properties.networking,omitempty"`
	PropertiesOperatingSystem          *OperatingSystemConfiguration         `json:"properties.operatingSystem,omitempty"`
	PropertiesResources                *MachineResourcesConfiguration        `json:"properties.resources,omitempty"`
	PropertiesTimestamp                *time.Time                            `json:"properties.timestamp,omitempty"`
	PropertiesTimezone                 *Timezone                             `json:"properties.timezone,omitempty"`
	PropertiesVirtualMachine           *VirtualMachineConfiguration          `json:"properties.virtualMachine,omitempty"`
	PropertiesVirtualizationState      *MachinePropertiesVirtualizationState `json:"properties.virtualizationState,omitempty"`
	Type                               *string                               `json:"type,omitempty"`
}

type MachineResourcesConfiguration struct {
	CPUSpeed         *int32                                         `json:"cpuSpeed,omitempty"`
	CPUSpeedAccuracy *MachineResourcesConfigurationCPUSpeedAccuracy `json:"cpuSpeedAccuracy,omitempty"`
	Cpus             *int32                                         `json:"cpus,omitempty"`
	PhysicalMemory   *int32                                         `json:"physicalMemory,omitempty"`
}

// MachinesClientGetAllMachinesInSiteOptions contains the optional parameters for the MachinesClient.NewGetAllMachinesInSitePager
// method.
type MachinesClientGetAllMachinesInSiteOptions struct {
	// Optional parameter for continuation token.
	ContinuationToken *string
	Filter            *string
	Top               *int32
	// Total count of machines in the given site.
	TotalRecordCount *int32
}

// MachinesClientGetMachineOptions contains the optional parameters for the MachinesClient.GetMachine method.
type MachinesClientGetMachineOptions struct {
	// placeholder for future optional parameters
}

// MachinesClientStartMachineOptions contains the optional parameters for the MachinesClient.StartMachine method.
type MachinesClientStartMachineOptions struct {
	// placeholder for future optional parameters
}

// MachinesClientStopMachineOptions contains the optional parameters for the MachinesClient.StopMachine method.
type MachinesClientStopMachineOptions struct {
	// placeholder for future optional parameters
}

// MasterSite - Site REST Resource.
type MasterSite struct {
	// eTag for concurrency control.
	ETag *string `json:"eTag,omitempty"`

	// Azure location in which Sites is created.
	Location *string `json:"location,omitempty"`

	// Name of the Master site.
	Name *string `json:"name,omitempty"`

	// Nested properties of Master site.
	Properties *MasterSiteProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/MasterSites.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MasterSiteList - List of sites.
type MasterSiteList struct {
	NextLink *string `json:"nextLink,omitempty"`

	// List of projects.
	Value []*MasterSite `json:"value,omitempty"`
}

// MasterSiteProperties - Class for site properties.
type MasterSiteProperties struct {
	// Value indicating whether multiple sites per site type are allowed.
	AllowMultipleSites *bool `json:"allowMultipleSites,omitempty"`

	// Gets or sets a value for customer storage account ARM id.
	CustomerStorageAccountArmID *string `json:"customerStorageAccountArmId,omitempty"`

	// Gets or sets the state of public network access.
	PublicNetworkAccess *MasterSitePropertiesPublicNetworkAccess `json:"publicNetworkAccess,omitempty"`

	// List of sites that are a part of Master Site.
	Sites []*string `json:"sites,omitempty"`

	// READ-ONLY; Gets the private endpoint connections.
	PrivateEndpointConnections []*PrivateEndpointConnection `json:"privateEndpointConnections,omitempty" azure:"ro"`
}

// MasterSitesClientDeleteSiteOptions contains the optional parameters for the MasterSitesClient.DeleteSite method.
type MasterSitesClientDeleteSiteOptions struct {
	// placeholder for future optional parameters
}

// MasterSitesClientGetSiteOptions contains the optional parameters for the MasterSitesClient.GetSite method.
type MasterSitesClientGetSiteOptions struct {
	// placeholder for future optional parameters
}

// MasterSitesClientListBySubscriptionOptions contains the optional parameters for the MasterSitesClient.NewListBySubscriptionPager
// method.
type MasterSitesClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// MasterSitesClientListOptions contains the optional parameters for the MasterSitesClient.NewListPager method.
type MasterSitesClientListOptions struct {
	// placeholder for future optional parameters
}

// MasterSitesClientPatchSiteOptions contains the optional parameters for the MasterSitesClient.PatchSite method.
type MasterSitesClientPatchSiteOptions struct {
	// placeholder for future optional parameters
}

// MasterSitesClientPutSiteOptions contains the optional parameters for the MasterSitesClient.PutSite method.
type MasterSitesClientPutSiteOptions struct {
	// placeholder for future optional parameters
}

type NetworkConfiguration struct {
	DNSCanonicalNames   []*string               `json:"dnsCanonicalNames,omitempty"`
	DNSNames            []*string               `json:"dnsNames,omitempty"`
	DNSQuestions        []*string               `json:"dnsQuestions,omitempty"`
	DefaultIPv4Gateways []*string               `json:"defaultIpv4Gateways,omitempty"`
	IPv4Interfaces      []*IPv4NetworkInterface `json:"ipv4Interfaces,omitempty"`
	IPv6Interfaces      []*IPv6NetworkInterface `json:"ipv6Interfaces,omitempty"`
	MacAddresses        []*string               `json:"macAddresses,omitempty"`
}

// OperatingSystem - Second level object returned as part of Machine REST resource.
type OperatingSystem struct {
	// READ-ONLY; Name of the operating system.
	OSName *string `json:"osName,omitempty" azure:"ro"`

	// READ-ONLY; Type of the operating system.
	OSType *string `json:"osType,omitempty" azure:"ro"`

	// READ-ONLY; Version of the operating system.
	OSVersion *string `json:"osVersion,omitempty" azure:"ro"`
}

type OperatingSystemConfiguration struct {
	Bitness  *OperatingSystemConfigurationBitness `json:"bitness,omitempty"`
	Family   *OperatingSystemConfigurationFamily  `json:"family,omitempty"`
	FullName *string                              `json:"fullName,omitempty"`
}

// OperationDetail - Operation detail payload
type OperationDetail struct {
	// Display of the operation
	Display *OperationDisplay `json:"display,omitempty"`

	// Indicates whether the operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// Name of the operation
	Name *string `json:"name,omitempty"`

	// Origin of the operation
	Origin *string `json:"origin,omitempty"`
}

// OperationDisplay - Operation display payload
type OperationDisplay struct {
	// Localized friendly description for the operation
	Description *string `json:"description,omitempty"`

	// Localized friendly name for the operation
	Operation *string `json:"operation,omitempty"`

	// Resource provider of the operation
	Provider *string `json:"provider,omitempty"`

	// Resource of the operation
	Resource *string `json:"resource,omitempty"`
}

// OperationStatus - Operation status REST resource.
type OperationStatus struct {
	// READ-ONLY; End time.
	EndTime *string `json:"endTime,omitempty" azure:"ro"`

	// READ-ONLY; Error stating all error details for the operation.
	Error *OperationStatusError `json:"error,omitempty" azure:"ro"`

	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Operation name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Custom data.
	Properties *OperationStatusProperties `json:"properties,omitempty" azure:"ro"`

	// READ-ONLY; Start time.
	StartTime *string `json:"startTime,omitempty" azure:"ro"`

	// READ-ONLY; Status of the operation. ARM expects the terminal status to be one of Succeeded/ Failed/ Canceled. All other
	// values imply that the operation is still running.
	Status *string `json:"status,omitempty" azure:"ro"`
}

// OperationStatusError - Class for operation status errors.
type OperationStatusError struct {
	// READ-ONLY; Error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Error message.
	Message *string `json:"message,omitempty" azure:"ro"`
}

// OperationStatusProperties - Class for operation result properties.
type OperationStatusProperties struct {
	// Result or output of the workflow.
	Result *string `json:"result,omitempty"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// OtherDatabase in the guest virtual machine.
type OtherDatabase struct {
	// READ-ONLY; DatabaseType of the OtherDatabase.
	DatabaseType *string `json:"databaseType,omitempty" azure:"ro"`

	// READ-ONLY; Instance of the OtherDatabase.
	Instance *string `json:"instance,omitempty" azure:"ro"`

	// READ-ONLY; Version of the OtherDatabase.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// PrivateEndpointConnection - REST model used to encapsulate the user visible state of a PrivateEndpoint.
type PrivateEndpointConnection struct {
	// READ-ONLY; Gets the tag for optimistic concurrency control.
	ETag *string `json:"eTag,omitempty" azure:"ro"`

	// READ-ONLY; Relative URL to get this Sites.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Gets the name of the resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Gets the properties of the object.
	Properties *PrivateEndpointConnectionProperties `json:"properties,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Gets the resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PrivateEndpointConnectionClientDeletePrivateEndpointConnectionOptions contains the optional parameters for the PrivateEndpointConnectionClient.DeletePrivateEndpointConnection
// method.
type PrivateEndpointConnectionClientDeletePrivateEndpointConnectionOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionClientGetPrivateEndpointConnectionOptions contains the optional parameters for the PrivateEndpointConnectionClient.GetPrivateEndpointConnection
// method.
type PrivateEndpointConnectionClientGetPrivateEndpointConnectionOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionClientGetPrivateEndpointConnectionsOptions contains the optional parameters for the PrivateEndpointConnectionClient.GetPrivateEndpointConnections
// method.
type PrivateEndpointConnectionClientGetPrivateEndpointConnectionsOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionClientPutPrivateEndpointConnectionOptions contains the optional parameters for the PrivateEndpointConnectionClient.PutPrivateEndpointConnection
// method.
type PrivateEndpointConnectionClientPutPrivateEndpointConnectionOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionCollection - Collection of PrivateLink resources.
type PrivateEndpointConnectionCollection struct {
	// READ-ONLY; Gets the value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Gets the list of machines.
	Value []*PrivateEndpointConnection `json:"value,omitempty" azure:"ro"`
}

type PrivateEndpointConnectionProperties struct {
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `json:"privateLinkServiceConnectionState,omitempty"`

	// READ-ONLY
	PrivateEndpoint *ResourceID `json:"privateEndpoint,omitempty" azure:"ro"`

	// READ-ONLY
	ProvisioningState *PrivateEndpointConnectionPropertiesProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// PrivateLinkResource - REST model used to encapsulate Private Link properties for tracked resources.
type PrivateLinkResource struct {
	// READ-ONLY; Relative URL to get this Sites.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Gets the name of the resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Gets nested properties.
	Properties *PrivateLinkResourceProperties `json:"properties,omitempty" azure:"ro"`

	// READ-ONLY; Gets the resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PrivateLinkResourceCollection - Collection of PrivateLink resources.
type PrivateLinkResourceCollection struct {
	// READ-ONLY; Gets the value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Gets the list of machines.
	Value []*PrivateLinkResource `json:"value,omitempty" azure:"ro"`
}

type PrivateLinkResourceProperties struct {
	GroupID           *string   `json:"groupId,omitempty"`
	RequiredMembers   []*string `json:"requiredMembers,omitempty"`
	RequiredZoneNames []*string `json:"requiredZoneNames,omitempty"`
}

// PrivateLinkResourcesClientGetPrivateLinkResourceOptions contains the optional parameters for the PrivateLinkResourcesClient.GetPrivateLinkResource
// method.
type PrivateLinkResourcesClientGetPrivateLinkResourceOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientGetPrivateLinkResourcesOptions contains the optional parameters for the PrivateLinkResourcesClient.GetPrivateLinkResources
// method.
type PrivateLinkResourcesClientGetPrivateLinkResourcesOptions struct {
	// placeholder for future optional parameters
}

type PrivateLinkServiceConnectionState struct {
	ActionsRequired *string                                  `json:"actionsRequired,omitempty"`
	Description     *string                                  `json:"description,omitempty"`
	Status          *PrivateLinkServiceConnectionStateStatus `json:"status,omitempty"`
}

type ResourceID struct {
	// READ-ONLY
	ID *string `json:"id,omitempty" azure:"ro"`
}

// RunAsAccountProperties - Class for run as account properties.
type RunAsAccountProperties struct {
	// READ-ONLY; Timestamp marking run as account creation.
	CreatedTimestamp *string `json:"createdTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Credential type of the run as account.
	CredentialType *CredentialType `json:"credentialType,omitempty" azure:"ro"`

	// READ-ONLY; Display name of the run as account.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; Timestamp marking last updated on the run as account.
	UpdatedTimestamp *string `json:"updatedTimestamp,omitempty" azure:"ro"`
}

// RunAsAccountsClientGetAllRunAsAccountsInSiteOptions contains the optional parameters for the RunAsAccountsClient.NewGetAllRunAsAccountsInSitePager
// method.
type RunAsAccountsClientGetAllRunAsAccountsInSiteOptions struct {
	// placeholder for future optional parameters
}

// RunAsAccountsClientGetRunAsAccountOptions contains the optional parameters for the RunAsAccountsClient.GetRunAsAccount
// method.
type RunAsAccountsClientGetRunAsAccountOptions struct {
	// placeholder for future optional parameters
}

// SQLServer in the guest virtual machine.
type SQLServer struct {
	// READ-ONLY; ClusterName of the SQLServer.
	ClusterName *string `json:"clusterName,omitempty" azure:"ro"`

	// READ-ONLY; Clustered of the SQLServer.
	Clustered *string `json:"clustered,omitempty" azure:"ro"`

	// READ-ONLY; Edition of the SQLServer.
	Edition *string `json:"edition,omitempty" azure:"ro"`

	// READ-ONLY; Name of the SQLServer.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; ServicePack of the SQLServer.
	ServicePack *string `json:"servicePack,omitempty" azure:"ro"`

	// READ-ONLY; Version of the SQLServer.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// SharePointServer in the guest virtual machine.
type SharePointServer struct {
	// READ-ONLY; Value indicating whether the SharePointServer is Enterprise.
	IsEnterprise *bool `json:"isEnterprise,omitempty" azure:"ro"`

	// READ-ONLY; ProductName of the SharePointServer.
	ProductName *string `json:"productName,omitempty" azure:"ro"`

	// READ-ONLY; Status of the SharePointServer.
	Status *string `json:"status,omitempty" azure:"ro"`

	// READ-ONLY; Version of the SharePointServer.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// SiteAgentProperties - Class for site agent properties.
type SiteAgentProperties struct {
	// Key vault ARM Id.
	KeyVaultID *string `json:"keyVaultId,omitempty"`

	// Key vault URI.
	KeyVaultURI *string `json:"keyVaultUri,omitempty"`

	// READ-ONLY; ID of the agent.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Last heartbeat time of the agent in UTC.
	LastHeartBeatUTC *time.Time `json:"lastHeartBeatUtc,omitempty" azure:"ro"`

	// READ-ONLY; Version of the agent.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// SiteHealthSummary - Site health summary model.
type SiteHealthSummary struct {
	// Count of affected objects.
	AffectedObjectsCount *int64 `json:"affectedObjectsCount,omitempty"`

	// Affected resources.
	AffectedResources []*string `json:"affectedResources,omitempty"`

	// Hit count of the error.
	HitCount *int64 `json:"hitCount,omitempty"`

	// READ-ONLY; Affected resource type.
	AffectedResourceType *string `json:"affectedResourceType,omitempty" azure:"ro"`

	// READ-ONLY; Appliance name.
	ApplianceName *string `json:"applianceName,omitempty" azure:"ro"`

	// READ-ONLY; Error code.
	ErrorCode *string `json:"errorCode,omitempty" azure:"ro"`

	// READ-ONLY; Error Id.
	ErrorID *int64 `json:"errorId,omitempty" azure:"ro"`

	// READ-ONLY; Error message.
	ErrorMessage *string `json:"errorMessage,omitempty" azure:"ro"`

	// READ-ONLY; Remediation guidance.
	RemediationGuidance *string `json:"remediationGuidance,omitempty" azure:"ro"`

	// READ-ONLY; Severity of error.
	Severity *string `json:"severity,omitempty" azure:"ro"`

	// READ-ONLY; Summary message.
	SummaryMessage *string `json:"summaryMessage,omitempty" azure:"ro"`
}

// SiteHealthSummaryCollection - Collection of SiteHealthSummary.
type SiteHealthSummaryCollection struct {
	// READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of SiteHealthSummary.
	Value []*SiteHealthSummary `json:"value,omitempty" azure:"ro"`
}

// SiteProperties - Class for site properties.
type SiteProperties struct {
	// On-premises agent details.
	AgentDetails *SiteAgentProperties `json:"agentDetails,omitempty"`

	// Appliance Name.
	ApplianceName *string `json:"applianceName,omitempty"`

	// ARM ID of migration hub solution for SDS.
	DiscoverySolutionID *string `json:"discoverySolutionId,omitempty"`

	// Service principal identity details used by agent for communication to the service.
	ServicePrincipalIdentityDetails *SiteSpnProperties `json:"servicePrincipalIdentityDetails,omitempty"`

	// READ-ONLY; Service endpoint.
	ServiceEndpoint *string `json:"serviceEndpoint,omitempty" azure:"ro"`
}

// SiteSpnProperties - Class for site properties.
type SiteSpnProperties struct {
	// AAD Authority URL which was used to request the token for the service principal.
	AADAuthority *string `json:"aadAuthority,omitempty"`

	// Application/client Id for the service principal with which the on-premise management/data plane components would communicate
	// with our Azure services.
	ApplicationID *string `json:"applicationId,omitempty"`

	// Intended audience for the service principal.
	Audience *string `json:"audience,omitempty"`

	// Object Id of the service principal with which the on-premise management/data plane components would communicate with our
	// Azure services.
	ObjectID *string `json:"objectId,omitempty"`

	// Raw certificate data for building certificate expiry flows.
	RawCertData *string `json:"rawCertData,omitempty"`

	// Tenant Id for the service principal with which the on-premise management/data plane components would communicate with our
	// Azure services.
	TenantID *string `json:"tenantId,omitempty"`
}

// SitesClientDeleteSiteOptions contains the optional parameters for the SitesClient.DeleteSite method.
type SitesClientDeleteSiteOptions struct {
	// placeholder for future optional parameters
}

// SitesClientGetSiteHealthSummaryOptions contains the optional parameters for the SitesClient.NewGetSiteHealthSummaryPager
// method.
type SitesClientGetSiteHealthSummaryOptions struct {
	// placeholder for future optional parameters
}

// SitesClientGetSiteOptions contains the optional parameters for the SitesClient.GetSite method.
type SitesClientGetSiteOptions struct {
	// placeholder for future optional parameters
}

// SitesClientGetSiteUsageOptions contains the optional parameters for the SitesClient.GetSiteUsage method.
type SitesClientGetSiteUsageOptions struct {
	// placeholder for future optional parameters
}

// SitesClientPatchSiteOptions contains the optional parameters for the SitesClient.PatchSite method.
type SitesClientPatchSiteOptions struct {
	// placeholder for future optional parameters
}

// SitesClientPutSiteOptions contains the optional parameters for the SitesClient.PutSite method.
type SitesClientPutSiteOptions struct {
	// placeholder for future optional parameters
}

// SitesClientRefreshSiteOptions contains the optional parameters for the SitesClient.RefreshSite method.
type SitesClientRefreshSiteOptions struct {
	// placeholder for future optional parameters
}

// SystemCenter in the guest virtual machine.
type SystemCenter struct {
	// READ-ONLY; ProductName of the SystemCenter.
	ProductName *string `json:"productName,omitempty" azure:"ro"`

	// READ-ONLY; Status of the SystemCenter.
	Status *string `json:"status,omitempty" azure:"ro"`

	// READ-ONLY; Version of the SystemCenter.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

type Timezone struct {
	FullName *string `json:"fullName,omitempty"`
}

// VCenter REST Resource.
type VCenter struct {
	// Name of the vCenter.
	Name *string `json:"name,omitempty"`

	// vCenter nested properties.
	Properties *VCenterProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/VMWareSites/VCenters.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// VCenterClientDeleteVCenterOptions contains the optional parameters for the VCenterClient.DeleteVCenter method.
type VCenterClientDeleteVCenterOptions struct {
	// placeholder for future optional parameters
}

// VCenterClientGetAllVCentersInSiteOptions contains the optional parameters for the VCenterClient.NewGetAllVCentersInSitePager
// method.
type VCenterClientGetAllVCentersInSiteOptions struct {
	Filter *string
}

// VCenterClientGetVCenterOptions contains the optional parameters for the VCenterClient.GetVCenter method.
type VCenterClientGetVCenterOptions struct {
	// placeholder for future optional parameters
}

// VCenterClientPutVCenterOptions contains the optional parameters for the VCenterClient.PutVCenter method.
type VCenterClientPutVCenterOptions struct {
	// placeholder for future optional parameters
}

// VCenterCollection - Collection of vCenter.
type VCenterCollection struct {
	// READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of vCenter.
	Value []*VCenter `json:"value,omitempty" azure:"ro"`
}

// VCenterProperties - Class for vCenter properties.
type VCenterProperties struct {
	// FQDN/IPAddress of the vCenter.
	Fqdn *string `json:"fqdn,omitempty"`

	// Port of the vCenter.
	Port *string `json:"port,omitempty"`

	// Run as account ID of the vCenter.
	RunAsAccountID *string `json:"runAsAccountId,omitempty"`

	// READ-ONLY; Timestamp marking vCenter creation.
	CreatedTimestamp *string `json:"createdTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Error details.
	Errors []*HealthErrorDetails `json:"errors,omitempty" azure:"ro"`

	// READ-ONLY; Instance UUID of the vCenter.
	InstanceUUID *string `json:"instanceUuid,omitempty" azure:"ro"`

	// READ-ONLY; Performance statistics enabled on the vCenter.
	PerfStatisticsLevel *string `json:"perfStatisticsLevel,omitempty" azure:"ro"`

	// READ-ONLY; Timestamp marking last updated on the vCenter.
	UpdatedTimestamp *string `json:"updatedTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Version of the vCenter.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// VMWareSitesResultList - List of sites.
type VMWareSitesResultList struct {
	NextLink *string `json:"nextLink,omitempty"`

	// List of sites.
	Value []*VMwareSite `json:"value,omitempty"`
}

// VMwareDisk - Second level object returned as part of Machine REST resource.
type VMwareDisk struct {
	// READ-ONLY; Disk mode property used for identifying independent disks.
	DiskMode *VirtualDiskMode `json:"diskMode,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning policy of the disk. It is Thin or Thick or Unknown for the VMWare.
	DiskProvisioningPolicy *string `json:"diskProvisioningPolicy,omitempty" azure:"ro"`

	// READ-ONLY; The scrubbing policy of disks which can be eagerly zeroed or lazily zeroed.
	DiskScrubbingPolicy *string `json:"diskScrubbingPolicy,omitempty" azure:"ro"`

	// READ-ONLY; Type of the disk.
	DiskType *string `json:"diskType,omitempty" azure:"ro"`

	// READ-ONLY; Label of the disk.
	Label *string `json:"label,omitempty" azure:"ro"`

	// READ-ONLY; LUN of the disk.
	Lun *int32 `json:"lun,omitempty" azure:"ro"`

	// READ-ONLY; Bytes allocated for the disk.
	MaxSizeInBytes *int64 `json:"maxSizeInBytes,omitempty" azure:"ro"`

	// READ-ONLY; Name of the disk.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Path of the disk.
	Path *string `json:"path,omitempty" azure:"ro"`

	// READ-ONLY; Disk UUID.
	UUID *string `json:"uuid,omitempty" azure:"ro"`
}

// VMwareJob - Job REST Resource.
type VMwareJob struct {
	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the job.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Nested properties of job.
	Properties *JobProperties `json:"properties,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/VMWareSites/Jobs.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// VMwareJobCollection - Collection of VMware jobs.
type VMwareJobCollection struct {
	// READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of jobs.
	Value []*VMwareJob `json:"value,omitempty" azure:"ro"`
}

// VMwareMachine - Machine REST Resource.
type VMwareMachine struct {
	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the Sites.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Nested properties.
	Properties *VMwareMachineProperties `json:"properties,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/VMWareSites/Machines.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// VMwareMachineCollection - Collection of VMware machines.
type VMwareMachineCollection struct {
	// READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of machines.
	Value []*VMwareMachine `json:"value,omitempty" azure:"ro"`
}

// VMwareMachineProperties - Class for machine properties.
type VMwareMachineProperties struct {
	// READ-ONLY; Allocated Memory in MB.
	AllocatedMemoryInMB *float64 `json:"allocatedMemoryInMB,omitempty" azure:"ro"`

	// READ-ONLY; Apps And Roles of the VM.
	AppsAndRoles *AppsAndRoles `json:"appsAndRoles,omitempty" azure:"ro"`

	// READ-ONLY; BIOS GUID.
	BiosGUID *string `json:"biosGuid,omitempty" azure:"ro"`

	// READ-ONLY; Machine BIOS serial number.
	BiosSerialNumber *string `json:"biosSerialNumber,omitempty" azure:"ro"`

	// READ-ONLY; Value indicating whether change tracking is enabled.
	ChangeTrackingEnabled *bool `json:"changeTrackingEnabled,omitempty" azure:"ro"`

	// READ-ONLY; Value indicating whether change tracking is supported.
	ChangeTrackingSupported *bool `json:"changeTrackingSupported,omitempty" azure:"ro"`

	// READ-ONLY; Timestamp marking machine creation.
	CreatedTimestamp *string `json:"createdTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Scope of the data center.
	DataCenterScope *string `json:"dataCenterScope,omitempty" azure:"ro"`

	// READ-ONLY; If dependency mapping feature is enabled or not for the VM.
	DependencyMapping *string `json:"dependencyMapping,omitempty" azure:"ro"`

	// READ-ONLY; When dependency mapping collection is last started.
	DependencyMappingStartTime *time.Time `json:"dependencyMappingStartTime,omitempty" azure:"ro"`

	// READ-ONLY; User description of the machine.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; Disks attached to the machine.
	Disks []*VMwareDisk `json:"disks,omitempty" azure:"ro"`

	// READ-ONLY; Display name of the machine.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; Errors for machine.
	Errors []*HealthErrorDetails `json:"errors,omitempty" azure:"ro"`

	// READ-ONLY; Firmware of the machine.
	Firmware *string `json:"firmware,omitempty" azure:"ro"`

	// READ-ONLY; The last time at which the Guest Details was discovered or the error while discovering guest details based discovery
	// of the machine.
	GuestDetailsDiscoveryTimestamp *time.Time `json:"guestDetailsDiscoveryTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; Operating System Details extracted from the guest bu executing script inside the guest VM.
	GuestOSDetails *GuestOSDetails `json:"guestOSDetails,omitempty" azure:"ro"`

	// READ-ONLY; Indicates whether the host is in maintenance mode.
	HostInMaintenanceMode *bool `json:"hostInMaintenanceMode,omitempty" azure:"ro"`

	// READ-ONLY; The host name.
	HostName *string `json:"hostName,omitempty" azure:"ro"`

	// READ-ONLY; The host power state.
	HostPowerState *string `json:"hostPowerState,omitempty" azure:"ro"`

	// READ-ONLY; The host version.
	HostVersion *string `json:"hostVersion,omitempty" azure:"ro"`

	// READ-ONLY; On-premise Instance UUID of the machine.
	InstanceUUID *string `json:"instanceUuid,omitempty" azure:"ro"`

	// READ-ONLY; Value indicating whether VM is deleted.
	IsDeleted *bool `json:"isDeleted,omitempty" azure:"ro"`

	// READ-ONLY; Whether Refresh Fabric Layout Guest Details has been completed once. Portal will show discovery in progress,
	// if this value is true.
	IsGuestDetailsDiscoveryInProgress *bool `json:"isGuestDetailsDiscoveryInProgress,omitempty" azure:"ro"`

	// READ-ONLY; Maximum number of snapshots for the VM. Default value is -1.
	MaxSnapshots *int32 `json:"maxSnapshots,omitempty" azure:"ro"`

	// READ-ONLY; Network adapters attached to the machine.
	NetworkAdapters []*VMwareNetworkAdapter `json:"networkAdapters,omitempty" azure:"ro"`

	// READ-ONLY; Number of applications installed in the guest VM.
	NumberOfApplications *int32 `json:"numberOfApplications,omitempty" azure:"ro"`

	// READ-ONLY; Number of Processor Cores allocated for the machine.
	NumberOfProcessorCore *int32 `json:"numberOfProcessorCore,omitempty" azure:"ro"`

	// READ-ONLY; Operating System Details installed on the machine.
	OperatingSystemDetails *OperatingSystem `json:"operatingSystemDetails,omitempty" azure:"ro"`

	// READ-ONLY; Machine power status.
	PowerStatus *string `json:"powerStatus,omitempty" azure:"ro"`

	// READ-ONLY; Timestamp marking last updated on the machine.
	UpdatedTimestamp *string `json:"updatedTimestamp,omitempty" azure:"ro"`

	// READ-ONLY; VCenter FQDN/IPAddress.
	VCenterFQDN *string `json:"vCenterFQDN,omitempty" azure:"ro"`

	// READ-ONLY; VCenter ARM ID.
	VCenterID *string `json:"vCenterId,omitempty" azure:"ro"`

	// READ-ONLY; Root location of the VM configuration file.
	VMConfigurationFileLocation *string `json:"vmConfigurationFileLocation,omitempty" azure:"ro"`

	// READ-ONLY; Machine FQDN.
	VMFqdn *string `json:"vmFqdn,omitempty" azure:"ro"`

	// READ-ONLY; VMware tools status.
	VMwareToolsStatus *string `json:"vMwareToolsStatus,omitempty" azure:"ro"`
}

// VMwareNetworkAdapter - Second level object represented in responses as part of Machine REST resource.
type VMwareNetworkAdapter struct {
	// READ-ONLY; IP addresses for the machine.
	IPAddressList []*string `json:"ipAddressList,omitempty" azure:"ro"`

	// READ-ONLY; Type of the IP address.
	IPAddressType *string `json:"ipAddressType,omitempty" azure:"ro"`

	// READ-ONLY; Label of the NIC.
	Label *string `json:"label,omitempty" azure:"ro"`

	// READ-ONLY; Mac address of the NIC.
	MacAddress *string `json:"macAddress,omitempty" azure:"ro"`

	// READ-ONLY; Network Name.
	NetworkName *string `json:"networkName,omitempty" azure:"ro"`

	// READ-ONLY; NIC Id.
	NicID *string `json:"nicId,omitempty" azure:"ro"`
}

// VMwareOperationsStatusClientGetOperationStatusOptions contains the optional parameters for the VMwareOperationsStatusClient.GetOperationStatus
// method.
type VMwareOperationsStatusClientGetOperationStatusOptions struct {
	// placeholder for future optional parameters
}

// VMwareRunAsAccount - Run as account REST Resource.
type VMwareRunAsAccount struct {
	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the Run as account.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Nested properties of Run as account.
	Properties *RunAsAccountProperties `json:"properties,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/VMWareSites/RunAsAccounts.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// VMwareRunAsAccountCollection - Collection of VMware run as accounts.
type VMwareRunAsAccountCollection struct {
	// READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of run as accounts.
	Value []*VMwareRunAsAccount `json:"value,omitempty" azure:"ro"`
}

// VMwareSite - Site REST Resource.
type VMwareSite struct {
	// eTag for concurrency control.
	ETag *string `json:"eTag,omitempty"`

	// Azure location in which Sites is created.
	Location *string `json:"location,omitempty"`

	// Name of the VMware site.
	Name *string `json:"name,omitempty"`

	// Nested properties of VMWare site.
	Properties *SiteProperties `json:"properties,omitempty"`

	// Dictionary of
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Type of resource. Type = Microsoft.OffAzure/VMWareSites.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// VMwareSiteUsage - VMware site usage.
type VMwareSiteUsage struct {
	// Number of machines discovered in the site.
	MachineCount *int32 `json:"machineCount,omitempty"`

	// Number of run as accounts in the site.
	RunAsAccountCount *int32 `json:"runAsAccountCount,omitempty"`

	// Number of vCenters part of the site.
	VCenterCount *int32 `json:"vCenterCount,omitempty"`
}

// VMwareSitesClientListBySubscriptionOptions contains the optional parameters for the VMwareSitesClient.NewListBySubscriptionPager
// method.
type VMwareSitesClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// VMwareSitesClientListOptions contains the optional parameters for the VMwareSitesClient.NewListPager method.
type VMwareSitesClientListOptions struct {
	// placeholder for future optional parameters
}

type VirtualMachineConfiguration struct {
	NativeHostMachineID *string                                        `json:"nativeHostMachineId,omitempty"`
	NativeMachineID     *string                                        `json:"nativeMachineId,omitempty"`
	VirtualMachineName  *string                                        `json:"virtualMachineName,omitempty"`
	VirtualMachineType  *VirtualMachineConfigurationVirtualMachineType `json:"virtualMachineType,omitempty"`
}

// WebApplication in the guest virtual machine.
type WebApplication struct {
	// READ-ONLY; ApplicationPool of the WebApplication.
	ApplicationPool *string `json:"applicationPool,omitempty" azure:"ro"`

	// READ-ONLY; GroupName of the WebApplication.
	GroupName *string `json:"groupName,omitempty" azure:"ro"`

	// READ-ONLY; Name of the WebApplication.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Platform of the WebApplication.
	Platform *string `json:"platform,omitempty" azure:"ro"`

	// READ-ONLY; Status of the WebApplication.
	Status *string `json:"status,omitempty" azure:"ro"`

	// READ-ONLY; WebServer of the WebApplication.
	WebServer *string `json:"webServer,omitempty" azure:"ro"`
}
