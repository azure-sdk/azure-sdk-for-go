//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armcostmanagement

import "time"

// CheckNameAvailabilityRequest - The check availability request body.
type CheckNameAvailabilityRequest struct {
	// The name of the resource for which availability needs to be checked.
	Name *string `json:"name,omitempty"`

	// The resource type.
	Type *string `json:"type,omitempty"`
}

// CheckNameAvailabilityResponse - The check availability result.
type CheckNameAvailabilityResponse struct {
	// Detailed reason why the given name is available.
	Message *string `json:"message,omitempty"`

	// Indicates if the resource name is available.
	NameAvailable *bool `json:"nameAvailable,omitempty"`

	// The reason why the given name is not available.
	Reason *CheckNameAvailabilityReason `json:"reason,omitempty"`
}

// ErrorDetails - The details of the error.
type ErrorDetails struct {
	// READ-ONLY; Error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Error message indicating why the operation failed.
	Message *string `json:"message,omitempty" azure:"ro"`
}

// ErrorResponse - Error response indicates that the service is not able to process the incoming request. The reason is provided
// in the error message.
// Some Error responses:
// * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the "x-ms-ratelimit-microsoft.consumption-retry-after"
// header.
//
//
// * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the "Retry-After"
// header.
type ErrorResponse struct {
	// The details of the error.
	Error *ErrorDetails `json:"error,omitempty"`
}

// FileDestination - Destination of the view data. This is optional. Currently only csv format is supported.
type FileDestination struct {
	// Destination of the view data. Currently only csv format is supported.
	FileFormats []*FileFormat `json:"fileFormats,omitempty"`
}

// NotificationProperties - The properties of the scheduled action notification.
type NotificationProperties struct {
	// REQUIRED; Subject of the email. Length is limited to 70 characters.
	Subject *string `json:"subject,omitempty"`

	// REQUIRED; Array of email addresses.
	To []*string `json:"to,omitempty"`

	// Optional message to be added in the email. Length is limited to 250 characters.
	Message *string `json:"message,omitempty"`
}

// ScheduleProperties - The properties of the schedule.
type ScheduleProperties struct {
	// REQUIRED; The end date and time of the scheduled action (UTC).
	EndDate *time.Time `json:"endDate,omitempty"`

	// REQUIRED; Frequency of the schedule.
	Frequency *ScheduleFrequency `json:"frequency,omitempty"`

	// REQUIRED; The start date and time of the scheduled action (UTC).
	StartDate *time.Time `json:"startDate,omitempty"`

	// UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency
	// is Monthly and overrides weeksOfMonth or daysOfWeek.
	DayOfMonth *int32 `json:"dayOfMonth,omitempty"`

	// Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly
	// or Monthly.
	DaysOfWeek []*DaysOfWeek `json:"daysOfWeek,omitempty"`

	// UTC time at which cost analysis data will be emailed.
	HourOfDay *int32 `json:"hourOfDay,omitempty"`

	// Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination
	// with daysOfWeek.
	WeeksOfMonth []*WeeksOfMonth `json:"weeksOfMonth,omitempty"`
}

// ScheduledAction - Scheduled action definition.
type ScheduledAction struct {
	// Kind of the scheduled action.
	Kind *ScheduledActionKind `json:"kind,omitempty"`

	// The properties of the scheduled action.
	Properties *ScheduledActionProperties `json:"properties,omitempty"`

	// READ-ONLY; Resource Etag.
	ETag *string `json:"eTag,omitempty" azure:"ro"`

	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ScheduledActionListResult - Scheduled actions list result. It contains a list of scheduled actions.
type ScheduledActionListResult struct {
	// READ-ONLY; The link (url) to the next page of results.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; The list of scheduled actions.
	Value []*ScheduledAction `json:"value,omitempty" azure:"ro"`
}

// ScheduledActionProperties - The properties of the scheduled action.
type ScheduledActionProperties struct {
	// REQUIRED; Scheduled action name.
	DisplayName *string `json:"displayName,omitempty"`

	// REQUIRED; Notification properties based on scheduled action kind.
	Notification *NotificationProperties `json:"notification,omitempty"`

	// REQUIRED; Schedule of the scheduled action.
	Schedule *ScheduleProperties `json:"schedule,omitempty"`

	// REQUIRED; Status of the scheduled action.
	Status *ScheduledActionStatus `json:"status,omitempty"`

	// REQUIRED; Cost analysis viewId used for scheduled action. For example, '/providers/Microsoft.CostManagement/views/swaggerExample'
	ViewID *string `json:"viewId,omitempty"`

	// Destination format of the view data. This is optional.
	FileDestination *FileDestination `json:"fileDestination,omitempty"`

	// Cost Management scope like 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
	// for resourceGroup scope,
	// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}'
	// for Department
	// scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount
	// scope,
	// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile
	// scope,
	// 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection
	// scope,
	// '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope,
	// and
	// '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope.
	Scope *string `json:"scope,omitempty"`
}

// ScheduledActionProxyResource - The Resource model definition.
type ScheduledActionProxyResource struct {
	// Kind of the scheduled action.
	Kind *ScheduledActionKind `json:"kind,omitempty"`

	// READ-ONLY; Resource Etag.
	ETag *string `json:"eTag,omitempty" azure:"ro"`

	// READ-ONLY; Resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ScheduledActionsClientCheckNameAvailabilityByScopeOptions contains the optional parameters for the ScheduledActionsClient.CheckNameAvailabilityByScope
// method.
type ScheduledActionsClientCheckNameAvailabilityByScopeOptions struct {
	// placeholder for future optional parameters
}

// ScheduledActionsClientCheckNameAvailabilityOptions contains the optional parameters for the ScheduledActionsClient.CheckNameAvailability
// method.
type ScheduledActionsClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// ScheduledActionsClientCreateOrUpdateByScopeOptions contains the optional parameters for the ScheduledActionsClient.CreateOrUpdateByScope
// method.
type ScheduledActionsClientCreateOrUpdateByScopeOptions struct {
	// placeholder for future optional parameters
}

// ScheduledActionsClientCreateOrUpdateOptions contains the optional parameters for the ScheduledActionsClient.CreateOrUpdate
// method.
type ScheduledActionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ScheduledActionsClientDeleteByScopeOptions contains the optional parameters for the ScheduledActionsClient.DeleteByScope
// method.
type ScheduledActionsClientDeleteByScopeOptions struct {
	// placeholder for future optional parameters
}

// ScheduledActionsClientDeleteOptions contains the optional parameters for the ScheduledActionsClient.Delete method.
type ScheduledActionsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ScheduledActionsClientExecuteByScopeOptions contains the optional parameters for the ScheduledActionsClient.ExecuteByScope
// method.
type ScheduledActionsClientExecuteByScopeOptions struct {
	// placeholder for future optional parameters
}

// ScheduledActionsClientExecuteOptions contains the optional parameters for the ScheduledActionsClient.Execute method.
type ScheduledActionsClientExecuteOptions struct {
	// placeholder for future optional parameters
}

// ScheduledActionsClientGetByScopeOptions contains the optional parameters for the ScheduledActionsClient.GetByScope method.
type ScheduledActionsClientGetByScopeOptions struct {
	// placeholder for future optional parameters
}

// ScheduledActionsClientGetOptions contains the optional parameters for the ScheduledActionsClient.Get method.
type ScheduledActionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ScheduledActionsClientListByScopeOptions contains the optional parameters for the ScheduledActionsClient.ListByScope method.
type ScheduledActionsClientListByScopeOptions struct {
	// May be used to filter scheduled actions by properties/viewId. Supported operator is 'eq'.
	Filter *string
}

// ScheduledActionsClientListOptions contains the optional parameters for the ScheduledActionsClient.List method.
type ScheduledActionsClientListOptions struct {
	// May be used to filter scheduled actions by properties/viewId. Supported operator is 'eq'.
	Filter *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}
