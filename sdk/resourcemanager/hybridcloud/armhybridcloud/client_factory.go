// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armhybridcloud

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID      string
	cloudConnectionName string
	cloudConnectorName  string
	internal            *arm.Client
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - The ID of the target subscription.
//   - cloudConnectionName - The name of the cloud connection resource
//   - cloudConnectorName - The name of the cloud connector resource
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, cloudConnectionName string, cloudConnectorName string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	internal, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID:      subscriptionID,
		cloudConnectionName: cloudConnectionName,
		cloudConnectorName:  cloudConnectorName,
		internal:            internal,
	}, nil
}

// NewClient creates a new instance of Client.
func (c *ClientFactory) NewClient() *Client {
	return &Client{
		internal: c.internal,
	}
}

// NewCloudConnectionsClient creates a new instance of CloudConnectionsClient.
func (c *ClientFactory) NewCloudConnectionsClient() *CloudConnectionsClient {
	return &CloudConnectionsClient{
		subscriptionID:      c.subscriptionID,
		cloudConnectionName: c.cloudConnectionName,
		internal:            c.internal,
	}
}

// NewCloudConnectorsClient creates a new instance of CloudConnectorsClient.
func (c *ClientFactory) NewCloudConnectorsClient() *CloudConnectorsClient {
	return &CloudConnectorsClient{
		subscriptionID:     c.subscriptionID,
		cloudConnectorName: c.cloudConnectorName,
		internal:           c.internal,
	}
}
