//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armazuresiterecovery

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	credential azcore.TokenCredential
	options    *arm.ClientOptions
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	_, err := arm.NewClient(moduleName+".ClientFactory", moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		credential: credential,
		options:    options.Clone(),
	}, nil
}

func (c *ClientFactory) NewDraClient() *DraClient {
	subClient, _ := NewDraClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewDraOperationStatusClient() *DraOperationStatusClient {
	subClient, _ := NewDraOperationStatusClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewEmailConfigurationClient() *EmailConfigurationClient {
	subClient, _ := NewEmailConfigurationClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewEventClient() *EventClient {
	subClient, _ := NewEventClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewFabricClient() *FabricClient {
	subClient, _ := NewFabricClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewFabricOperationsStatusClient() *FabricOperationsStatusClient {
	subClient, _ := NewFabricOperationsStatusClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewManagementServiceAPIClient() *ManagementServiceAPIClient {
	subClient, _ := NewManagementServiceAPIClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	subClient, _ := NewOperationsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPolicyClient() *PolicyClient {
	subClient, _ := NewPolicyClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPolicyOperationStatusClient() *PolicyOperationStatusClient {
	subClient, _ := NewPolicyOperationStatusClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewProtectedItemClient() *ProtectedItemClient {
	subClient, _ := NewProtectedItemClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewProtectedItemOperationStatusClient() *ProtectedItemOperationStatusClient {
	subClient, _ := NewProtectedItemOperationStatusClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewRecoveryPointsClient() *RecoveryPointsClient {
	subClient, _ := NewRecoveryPointsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewReplicationExtensionClient() *ReplicationExtensionClient {
	subClient, _ := NewReplicationExtensionClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewReplicationExtensionOperationStatusClient() *ReplicationExtensionOperationStatusClient {
	subClient, _ := NewReplicationExtensionOperationStatusClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewVaultClient() *VaultClient {
	subClient, _ := NewVaultClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewVaultOperationStatusClient() *VaultOperationStatusClient {
	subClient, _ := NewVaultOperationStatusClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewWorkflowClient() *WorkflowClient {
	subClient, _ := NewWorkflowClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewWorkflowOperationStatusClient() *WorkflowOperationStatusClient {
	subClient, _ := NewWorkflowOperationStatusClient(c.credential, c.options)
	return subClient
}
