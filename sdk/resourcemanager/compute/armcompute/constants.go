//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcompute

const (
	moduleName    = "armcompute"
	moduleVersion = "v6.0.0"
)

// AggregatedReplicationState - This is the aggregated replication status based on all the regional replication status flags.
type AggregatedReplicationState string

const (
	AggregatedReplicationStateCompleted  AggregatedReplicationState = "Completed"
	AggregatedReplicationStateFailed     AggregatedReplicationState = "Failed"
	AggregatedReplicationStateInProgress AggregatedReplicationState = "InProgress"
	AggregatedReplicationStateUnknown    AggregatedReplicationState = "Unknown"
)

// PossibleAggregatedReplicationStateValues returns the possible values for the AggregatedReplicationState const type.
func PossibleAggregatedReplicationStateValues() []AggregatedReplicationState {
	return []AggregatedReplicationState{
		AggregatedReplicationStateCompleted,
		AggregatedReplicationStateFailed,
		AggregatedReplicationStateInProgress,
		AggregatedReplicationStateUnknown,
	}
}

// Architecture - The architecture of the image. Applicable to OS disks only.
type Architecture string

const (
	ArchitectureArm64 Architecture = "Arm64"
	ArchitectureX64   Architecture = "x64"
)

// PossibleArchitectureValues returns the possible values for the Architecture const type.
func PossibleArchitectureValues() []Architecture {
	return []Architecture{
		ArchitectureArm64,
		ArchitectureX64,
	}
}

// ConfidentialVMEncryptionType - confidential VM encryption types
type ConfidentialVMEncryptionType string

const (
	ConfidentialVMEncryptionTypeEncryptedVMGuestStateOnlyWithPmk ConfidentialVMEncryptionType = "EncryptedVMGuestStateOnlyWithPmk"
	ConfidentialVMEncryptionTypeEncryptedWithCmk                 ConfidentialVMEncryptionType = "EncryptedWithCmk"
	ConfidentialVMEncryptionTypeEncryptedWithPmk                 ConfidentialVMEncryptionType = "EncryptedWithPmk"
)

// PossibleConfidentialVMEncryptionTypeValues returns the possible values for the ConfidentialVMEncryptionType const type.
func PossibleConfidentialVMEncryptionTypeValues() []ConfidentialVMEncryptionType {
	return []ConfidentialVMEncryptionType{
		ConfidentialVMEncryptionTypeEncryptedVMGuestStateOnlyWithPmk,
		ConfidentialVMEncryptionTypeEncryptedWithCmk,
		ConfidentialVMEncryptionTypeEncryptedWithPmk,
	}
}

// EdgeZoneStorageAccountType - Specifies the storage account type to be used to store the image. This property is not updatable.
type EdgeZoneStorageAccountType string

const (
	EdgeZoneStorageAccountTypePremiumLRS     EdgeZoneStorageAccountType = "Premium_LRS"
	EdgeZoneStorageAccountTypeStandardLRS    EdgeZoneStorageAccountType = "Standard_LRS"
	EdgeZoneStorageAccountTypeStandardSSDLRS EdgeZoneStorageAccountType = "StandardSSD_LRS"
	EdgeZoneStorageAccountTypeStandardZRS    EdgeZoneStorageAccountType = "Standard_ZRS"
)

// PossibleEdgeZoneStorageAccountTypeValues returns the possible values for the EdgeZoneStorageAccountType const type.
func PossibleEdgeZoneStorageAccountTypeValues() []EdgeZoneStorageAccountType {
	return []EdgeZoneStorageAccountType{
		EdgeZoneStorageAccountTypePremiumLRS,
		EdgeZoneStorageAccountTypeStandardLRS,
		EdgeZoneStorageAccountTypeStandardSSDLRS,
		EdgeZoneStorageAccountTypeStandardZRS,
	}
}

// GalleryApplicationCustomActionParameterType - Specifies the type of the custom action parameter. Possible values are: String,
// ConfigurationDataBlob or LogOutputBlob
type GalleryApplicationCustomActionParameterType string

const (
	GalleryApplicationCustomActionParameterTypeConfigurationDataBlob GalleryApplicationCustomActionParameterType = "ConfigurationDataBlob"
	GalleryApplicationCustomActionParameterTypeLogOutputBlob         GalleryApplicationCustomActionParameterType = "LogOutputBlob"
	GalleryApplicationCustomActionParameterTypeString                GalleryApplicationCustomActionParameterType = "String"
)

// PossibleGalleryApplicationCustomActionParameterTypeValues returns the possible values for the GalleryApplicationCustomActionParameterType const type.
func PossibleGalleryApplicationCustomActionParameterTypeValues() []GalleryApplicationCustomActionParameterType {
	return []GalleryApplicationCustomActionParameterType{
		GalleryApplicationCustomActionParameterTypeConfigurationDataBlob,
		GalleryApplicationCustomActionParameterTypeLogOutputBlob,
		GalleryApplicationCustomActionParameterTypeString,
	}
}

type GalleryExpandParams string

const (
	GalleryExpandParamsSharingProfileGroups GalleryExpandParams = "SharingProfile/Groups"
)

// PossibleGalleryExpandParamsValues returns the possible values for the GalleryExpandParams const type.
func PossibleGalleryExpandParamsValues() []GalleryExpandParams {
	return []GalleryExpandParams{
		GalleryExpandParamsSharingProfileGroups,
	}
}

// GalleryExtendedLocationType - It is type of the extended location.
type GalleryExtendedLocationType string

const (
	GalleryExtendedLocationTypeEdgeZone GalleryExtendedLocationType = "EdgeZone"
	GalleryExtendedLocationTypeUnknown  GalleryExtendedLocationType = "Unknown"
)

// PossibleGalleryExtendedLocationTypeValues returns the possible values for the GalleryExtendedLocationType const type.
func PossibleGalleryExtendedLocationTypeValues() []GalleryExtendedLocationType {
	return []GalleryExtendedLocationType{
		GalleryExtendedLocationTypeEdgeZone,
		GalleryExtendedLocationTypeUnknown,
	}
}

// GalleryProvisioningState - The provisioning state, which only appears in the response.
type GalleryProvisioningState string

const (
	GalleryProvisioningStateCreating  GalleryProvisioningState = "Creating"
	GalleryProvisioningStateDeleting  GalleryProvisioningState = "Deleting"
	GalleryProvisioningStateFailed    GalleryProvisioningState = "Failed"
	GalleryProvisioningStateMigrating GalleryProvisioningState = "Migrating"
	GalleryProvisioningStateSucceeded GalleryProvisioningState = "Succeeded"
	GalleryProvisioningStateUpdating  GalleryProvisioningState = "Updating"
)

// PossibleGalleryProvisioningStateValues returns the possible values for the GalleryProvisioningState const type.
func PossibleGalleryProvisioningStateValues() []GalleryProvisioningState {
	return []GalleryProvisioningState{
		GalleryProvisioningStateCreating,
		GalleryProvisioningStateDeleting,
		GalleryProvisioningStateFailed,
		GalleryProvisioningStateMigrating,
		GalleryProvisioningStateSucceeded,
		GalleryProvisioningStateUpdating,
	}
}

// GallerySharingPermissionTypes - This property allows you to specify the permission of sharing gallery.
// Possible values are:
// Private
// Groups
// Community
type GallerySharingPermissionTypes string

const (
	GallerySharingPermissionTypesCommunity GallerySharingPermissionTypes = "Community"
	GallerySharingPermissionTypesGroups    GallerySharingPermissionTypes = "Groups"
	GallerySharingPermissionTypesPrivate   GallerySharingPermissionTypes = "Private"
)

// PossibleGallerySharingPermissionTypesValues returns the possible values for the GallerySharingPermissionTypes const type.
func PossibleGallerySharingPermissionTypesValues() []GallerySharingPermissionTypes {
	return []GallerySharingPermissionTypes{
		GallerySharingPermissionTypesCommunity,
		GallerySharingPermissionTypesGroups,
		GallerySharingPermissionTypesPrivate,
	}
}

// HostCaching - The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
type HostCaching string

const (
	HostCachingNone      HostCaching = "None"
	HostCachingReadOnly  HostCaching = "ReadOnly"
	HostCachingReadWrite HostCaching = "ReadWrite"
)

// PossibleHostCachingValues returns the possible values for the HostCaching const type.
func PossibleHostCachingValues() []HostCaching {
	return []HostCaching{
		HostCachingNone,
		HostCachingReadOnly,
		HostCachingReadWrite,
	}
}

// HyperVGeneration - The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
type HyperVGeneration string

const (
	HyperVGenerationV1 HyperVGeneration = "V1"
	HyperVGenerationV2 HyperVGeneration = "V2"
)

// PossibleHyperVGenerationValues returns the possible values for the HyperVGeneration const type.
func PossibleHyperVGenerationValues() []HyperVGeneration {
	return []HyperVGeneration{
		HyperVGenerationV1,
		HyperVGenerationV2,
	}
}

// OperatingSystemStateTypes - This property allows the user to specify whether the virtual machines created under this image
// are 'Generalized' or 'Specialized'.
type OperatingSystemStateTypes string

const (
	OperatingSystemStateTypesGeneralized OperatingSystemStateTypes = "Generalized"
	OperatingSystemStateTypesSpecialized OperatingSystemStateTypes = "Specialized"
)

// PossibleOperatingSystemStateTypesValues returns the possible values for the OperatingSystemStateTypes const type.
func PossibleOperatingSystemStateTypesValues() []OperatingSystemStateTypes {
	return []OperatingSystemStateTypes{
		OperatingSystemStateTypesGeneralized,
		OperatingSystemStateTypesSpecialized,
	}
}

// OperatingSystemTypes - This property allows you to specify the type of the OS that is included in the disk when creating
// a VM from a managed image.
// Possible values are:
// Windows
// Linux
type OperatingSystemTypes string

const (
	OperatingSystemTypesLinux   OperatingSystemTypes = "Linux"
	OperatingSystemTypesWindows OperatingSystemTypes = "Windows"
)

// PossibleOperatingSystemTypesValues returns the possible values for the OperatingSystemTypes const type.
func PossibleOperatingSystemTypesValues() []OperatingSystemTypes {
	return []OperatingSystemTypes{
		OperatingSystemTypesLinux,
		OperatingSystemTypesWindows,
	}
}

// PolicyViolationCategory - Describes the nature of the policy violation.
type PolicyViolationCategory string

const (
	PolicyViolationCategoryCopyrightValidation PolicyViolationCategory = "CopyrightValidation"
	PolicyViolationCategoryIPTheft             PolicyViolationCategory = "IpTheft"
	PolicyViolationCategoryImageFlaggedUnsafe  PolicyViolationCategory = "ImageFlaggedUnsafe"
	PolicyViolationCategoryOther               PolicyViolationCategory = "Other"
)

// PossiblePolicyViolationCategoryValues returns the possible values for the PolicyViolationCategory const type.
func PossiblePolicyViolationCategoryValues() []PolicyViolationCategory {
	return []PolicyViolationCategory{
		PolicyViolationCategoryCopyrightValidation,
		PolicyViolationCategoryIPTheft,
		PolicyViolationCategoryImageFlaggedUnsafe,
		PolicyViolationCategoryOther,
	}
}

// ReplicationMode - Optional parameter which specifies the mode to be used for replication. This property is not updatable.
type ReplicationMode string

const (
	ReplicationModeFull    ReplicationMode = "Full"
	ReplicationModeShallow ReplicationMode = "Shallow"
)

// PossibleReplicationModeValues returns the possible values for the ReplicationMode const type.
func PossibleReplicationModeValues() []ReplicationMode {
	return []ReplicationMode{
		ReplicationModeFull,
		ReplicationModeShallow,
	}
}

// ReplicationState - This is the regional replication state.
type ReplicationState string

const (
	ReplicationStateCompleted   ReplicationState = "Completed"
	ReplicationStateFailed      ReplicationState = "Failed"
	ReplicationStateReplicating ReplicationState = "Replicating"
	ReplicationStateUnknown     ReplicationState = "Unknown"
)

// PossibleReplicationStateValues returns the possible values for the ReplicationState const type.
func PossibleReplicationStateValues() []ReplicationState {
	return []ReplicationState{
		ReplicationStateCompleted,
		ReplicationStateFailed,
		ReplicationStateReplicating,
		ReplicationStateUnknown,
	}
}

type ReplicationStatusTypes string

const (
	ReplicationStatusTypesReplicationStatus ReplicationStatusTypes = "ReplicationStatus"
)

// PossibleReplicationStatusTypesValues returns the possible values for the ReplicationStatusTypes const type.
func PossibleReplicationStatusTypesValues() []ReplicationStatusTypes {
	return []ReplicationStatusTypes{
		ReplicationStatusTypesReplicationStatus,
	}
}

type SelectPermissions string

const (
	SelectPermissionsPermissions SelectPermissions = "Permissions"
)

// PossibleSelectPermissionsValues returns the possible values for the SelectPermissions const type.
func PossibleSelectPermissionsValues() []SelectPermissions {
	return []SelectPermissions{
		SelectPermissionsPermissions,
	}
}

// SharedGalleryHostCaching - The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
type SharedGalleryHostCaching string

const (
	SharedGalleryHostCachingNone      SharedGalleryHostCaching = "None"
	SharedGalleryHostCachingReadOnly  SharedGalleryHostCaching = "ReadOnly"
	SharedGalleryHostCachingReadWrite SharedGalleryHostCaching = "ReadWrite"
)

// PossibleSharedGalleryHostCachingValues returns the possible values for the SharedGalleryHostCaching const type.
func PossibleSharedGalleryHostCachingValues() []SharedGalleryHostCaching {
	return []SharedGalleryHostCaching{
		SharedGalleryHostCachingNone,
		SharedGalleryHostCachingReadOnly,
		SharedGalleryHostCachingReadWrite,
	}
}

type SharedToValues string

const (
	SharedToValuesTenant SharedToValues = "tenant"
)

// PossibleSharedToValuesValues returns the possible values for the SharedToValues const type.
func PossibleSharedToValuesValues() []SharedToValues {
	return []SharedToValues{
		SharedToValuesTenant,
	}
}

// SharingProfileGroupTypes - This property allows you to specify the type of sharing group.
// Possible values are:
// Subscriptions
// AADTenants
type SharingProfileGroupTypes string

const (
	SharingProfileGroupTypesAADTenants    SharingProfileGroupTypes = "AADTenants"
	SharingProfileGroupTypesSubscriptions SharingProfileGroupTypes = "Subscriptions"
)

// PossibleSharingProfileGroupTypesValues returns the possible values for the SharingProfileGroupTypes const type.
func PossibleSharingProfileGroupTypesValues() []SharingProfileGroupTypes {
	return []SharingProfileGroupTypes{
		SharingProfileGroupTypesAADTenants,
		SharingProfileGroupTypesSubscriptions,
	}
}

// SharingState - The sharing state of the gallery, which only appears in the response.
type SharingState string

const (
	SharingStateFailed     SharingState = "Failed"
	SharingStateInProgress SharingState = "InProgress"
	SharingStateSucceeded  SharingState = "Succeeded"
	SharingStateUnknown    SharingState = "Unknown"
)

// PossibleSharingStateValues returns the possible values for the SharingState const type.
func PossibleSharingStateValues() []SharingState {
	return []SharingState{
		SharingStateFailed,
		SharingStateInProgress,
		SharingStateSucceeded,
		SharingStateUnknown,
	}
}

// SharingUpdateOperationTypes - This property allows you to specify the operation type of gallery sharing update.
// Possible values are:
// Add
// Remove
// Reset
type SharingUpdateOperationTypes string

const (
	SharingUpdateOperationTypesAdd             SharingUpdateOperationTypes = "Add"
	SharingUpdateOperationTypesEnableCommunity SharingUpdateOperationTypes = "EnableCommunity"
	SharingUpdateOperationTypesRemove          SharingUpdateOperationTypes = "Remove"
	SharingUpdateOperationTypesReset           SharingUpdateOperationTypes = "Reset"
)

// PossibleSharingUpdateOperationTypesValues returns the possible values for the SharingUpdateOperationTypes const type.
func PossibleSharingUpdateOperationTypesValues() []SharingUpdateOperationTypes {
	return []SharingUpdateOperationTypes{
		SharingUpdateOperationTypesAdd,
		SharingUpdateOperationTypesEnableCommunity,
		SharingUpdateOperationTypesRemove,
		SharingUpdateOperationTypesReset,
	}
}

// StorageAccountType - Specifies the storage account type to be used to store the image. This property is not updatable.
type StorageAccountType string

const (
	StorageAccountTypePremiumLRS  StorageAccountType = "Premium_LRS"
	StorageAccountTypeStandardLRS StorageAccountType = "Standard_LRS"
	StorageAccountTypeStandardZRS StorageAccountType = "Standard_ZRS"
)

// PossibleStorageAccountTypeValues returns the possible values for the StorageAccountType const type.
func PossibleStorageAccountTypeValues() []StorageAccountType {
	return []StorageAccountType{
		StorageAccountTypePremiumLRS,
		StorageAccountTypeStandardLRS,
		StorageAccountTypeStandardZRS,
	}
}
