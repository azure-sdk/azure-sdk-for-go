//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armmaintenance

import "time"

// ApplyUpdate - Apply Update request
type ApplyUpdate struct {
	// Properties of the apply update
	Properties *ApplyUpdateProperties

	// READ-ONLY; Fully qualified identifier of the resource
	ID *string

	// READ-ONLY; Name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; Type of the resource
	Type *string
}

// ApplyUpdateForResourceGroupClientListOptions contains the optional parameters for the ApplyUpdateForResourceGroupClient.NewListPager
// method.
type ApplyUpdateForResourceGroupClientListOptions struct {
	// placeholder for future optional parameters
}

// ApplyUpdateProperties - Properties for apply update
type ApplyUpdateProperties struct {
	// Last Update time
	LastUpdateTime *time.Time

	// The resourceId
	ResourceID *string

	// The status
	Status *UpdateStatus
}

// ApplyUpdatesClientCreateOrUpdateOptions contains the optional parameters for the ApplyUpdatesClient.CreateOrUpdate method.
type ApplyUpdatesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ApplyUpdatesClientCreateOrUpdateParentOptions contains the optional parameters for the ApplyUpdatesClient.CreateOrUpdateParent
// method.
type ApplyUpdatesClientCreateOrUpdateParentOptions struct {
	// placeholder for future optional parameters
}

// ApplyUpdatesClientGetOptions contains the optional parameters for the ApplyUpdatesClient.Get method.
type ApplyUpdatesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ApplyUpdatesClientGetParentOptions contains the optional parameters for the ApplyUpdatesClient.GetParent method.
type ApplyUpdatesClientGetParentOptions struct {
	// placeholder for future optional parameters
}

// ApplyUpdatesClientListOptions contains the optional parameters for the ApplyUpdatesClient.NewListPager method.
type ApplyUpdatesClientListOptions struct {
	// placeholder for future optional parameters
}

// Configuration - Maintenance configuration record type
type Configuration struct {
	// Gets or sets location of the resource
	Location *string

	// Gets or sets properties of the resource
	Properties *ConfigurationProperties

	// Gets or sets tags of the resource
	Tags map[string]*string

	// READ-ONLY; Fully qualified identifier of the resource
	ID *string

	// READ-ONLY; Name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; Type of the resource
	Type *string
}

// ConfigurationAssignment - Configuration Assignment
type ConfigurationAssignment struct {
	// Location of the resource
	Location *string

	// Properties of the configuration assignment
	Properties *ConfigurationAssignmentProperties

	// READ-ONLY; Fully qualified identifier of the resource
	ID *string

	// READ-ONLY; Name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; Type of the resource
	Type *string
}

// ConfigurationAssignmentProperties - Properties for configuration assignment
type ConfigurationAssignmentProperties struct {
	// The maintenance configuration Id
	MaintenanceConfigurationID *string

	// The unique resourceId
	ResourceID *string
}

// ConfigurationAssignmentsClientCreateOrUpdateOptions contains the optional parameters for the ConfigurationAssignmentsClient.CreateOrUpdate
// method.
type ConfigurationAssignmentsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationAssignmentsClientCreateOrUpdateParentOptions contains the optional parameters for the ConfigurationAssignmentsClient.CreateOrUpdateParent
// method.
type ConfigurationAssignmentsClientCreateOrUpdateParentOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationAssignmentsClientDeleteOptions contains the optional parameters for the ConfigurationAssignmentsClient.Delete
// method.
type ConfigurationAssignmentsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationAssignmentsClientDeleteParentOptions contains the optional parameters for the ConfigurationAssignmentsClient.DeleteParent
// method.
type ConfigurationAssignmentsClientDeleteParentOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationAssignmentsClientGetOptions contains the optional parameters for the ConfigurationAssignmentsClient.Get method.
type ConfigurationAssignmentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationAssignmentsClientGetParentOptions contains the optional parameters for the ConfigurationAssignmentsClient.GetParent
// method.
type ConfigurationAssignmentsClientGetParentOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationAssignmentsClientListOptions contains the optional parameters for the ConfigurationAssignmentsClient.NewListPager
// method.
type ConfigurationAssignmentsClientListOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationAssignmentsClientListParentOptions contains the optional parameters for the ConfigurationAssignmentsClient.NewListParentPager
// method.
type ConfigurationAssignmentsClientListParentOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationAssignmentsWithinSubscriptionClientListOptions contains the optional parameters for the ConfigurationAssignmentsWithinSubscriptionClient.NewListPager
// method.
type ConfigurationAssignmentsWithinSubscriptionClientListOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationOverrides - List of Override Properties for the maintenance Configuration.
type ConfigurationOverrides struct {
	// Override Properties for the maintenance Configuration.
	Overrides []*OverrideProperties
}

// ConfigurationProperties - Properties for maintenance configuration
type ConfigurationProperties struct {
	// Gets or sets extensionProperties of the maintenanceConfiguration
	ExtensionProperties map[string]*string

	// The input parameters to be passed to the patch run operation.
	InstallPatches *InputPatchConfiguration

	// Gets or sets maintenanceScope of the configuration
	MaintenanceScope *MaintenanceScope

	// Definition of a MaintenanceWindow
	MaintenanceWindow *Window

	// Gets or sets namespace of the resource
	Namespace *string

	// Override the Maintenance Window for a specific period
	Overrides *ConfigurationOverrides

	// Gets or sets the visibility of the configuration. The default value is 'Custom'
	Visibility *Visibility
}

// ConfigurationsClientCreateOrUpdateOptions contains the optional parameters for the ConfigurationsClient.CreateOrUpdate
// method.
type ConfigurationsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationsClientDeleteOptions contains the optional parameters for the ConfigurationsClient.Delete method.
type ConfigurationsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationsClientGetOptions contains the optional parameters for the ConfigurationsClient.Get method.
type ConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationsClientListOptions contains the optional parameters for the ConfigurationsClient.NewListPager method.
type ConfigurationsClientListOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationsClientUpdateOptions contains the optional parameters for the ConfigurationsClient.Update method.
type ConfigurationsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationsForResourceGroupClientListOptions contains the optional parameters for the ConfigurationsForResourceGroupClient.NewListPager
// method.
type ConfigurationsForResourceGroupClientListOptions struct {
	// placeholder for future optional parameters
}

// Error - An error response received from the Azure Maintenance service.
type Error struct {
	// Details of the error
	Error *ErrorDetails
}

// ErrorDetails - An error response details received from the Azure Maintenance service.
type ErrorDetails struct {
	// Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
	Code *string

	// Human-readable representation of the error.
	Message *string
}

// EventFilter - Properties describing the filtering behavior of the event grid filter.
type EventFilter struct {
	// The event types that will be sent to Event Grid.
	IncludedEventTypes []*string

	// READ-ONLY; The subject prefix used for filtering events
	SubjectBeginsWith *string

	// READ-ONLY; The subject suffix used for filtering events
	SubjectEndsWith *string
}

// EventGridFilter - The event grid filter resource along with all resource properties.
type EventGridFilter struct {
	// All event grid filter properties.
	Properties *EventGridFilterProperties

	// READ-ONLY; The resource ID.
	ID *string

	// READ-ONLY; The name of the resource.
	Name *string

	// READ-ONLY; The type of the resource.
	Type *string
}

// EventGridFilterListResult - The result of a request to list event grid filters.
type EventGridFilterListResult struct {
	// The URI that can be used to request the next set of paged results.
	NextLink *string

	// The collection value.
	Value []*EventGridFilter
}

// EventGridFilterProperties - All event grid filter properties.
type EventGridFilterProperties struct {
	// READ-ONLY; Properties describing the filtering behavior of the event grid filter.
	Filter *EventFilter

	// READ-ONLY; The provisioning state of the event grid filter.
	ProvisioningState *ProvisioningState

	// READ-ONLY; Information describing the event subscriber.
	SubscriberIdentityInfo *SubscriberIdentityInfo
}

// EventGridFiltersClientGetOptions contains the optional parameters for the EventGridFiltersClient.Get method.
type EventGridFiltersClientGetOptions struct {
	// placeholder for future optional parameters
}

// EventGridFiltersClientListByMaintenanceConfigurationOptions contains the optional parameters for the EventGridFiltersClient.ListByMaintenanceConfiguration
// method.
type EventGridFiltersClientListByMaintenanceConfigurationOptions struct {
	// placeholder for future optional parameters
}

// InputLinuxParameters - Input properties for patching a Linux machine.
type InputLinuxParameters struct {
	// Classification category of patches to be patched
	ClassificationsToInclude []*string

	// Package names to be excluded for patching.
	PackageNameMasksToExclude []*string

	// Package names to be included for patching.
	PackageNameMasksToInclude []*string
}

// InputPatchConfiguration - Input configuration for a patch run
type InputPatchConfiguration struct {
	// Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.
	LinuxParameters *InputLinuxParameters

	// Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after
	// the patch operation is completed.
	RebootSetting *RebootOptions

	// Tasks information for the Software update configuration.
	Tasks *SoftwareUpdateConfigurationTasks

	// Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.
	WindowsParameters *InputWindowsParameters
}

// InputWindowsParameters - Input properties for patching a Windows machine.
type InputWindowsParameters struct {
	// Classification category of patches to be patched
	ClassificationsToInclude []*string

	// Exclude patches which need reboot
	ExcludeKbsRequiringReboot *bool

	// Windows KBID to be excluded for patching.
	KbNumbersToExclude []*string

	// Windows KBID to be included for patching.
	KbNumbersToInclude []*string
}

// ListApplyUpdate - Response for ApplyUpdate list
type ListApplyUpdate struct {
	// The list of apply updates
	Value []*ApplyUpdate
}

// ListConfigurationAssignmentsResult - Response for ConfigurationAssignments list
type ListConfigurationAssignmentsResult struct {
	// The list of configuration Assignments
	Value []*ConfigurationAssignment
}

// ListMaintenanceConfigurationsResult - Response for MaintenanceConfigurations list
type ListMaintenanceConfigurationsResult struct {
	// The list of maintenance Configurations
	Value []*Configuration
}

// ListUpdatesResult - Response for Updates list
type ListUpdatesResult struct {
	// The pending updates
	Value []*Update
}

// Operation - Represents an operation returned by the GetOperations request
type Operation struct {
	// Display name of the operation
	Display *OperationInfo

	// Indicates whether the operation is a data action
	IsDataAction *bool

	// Name of the operation
	Name *string

	// Origin of the operation
	Origin *string

	// Properties of the operation
	Properties any
}

// OperationInfo - Information about an operation
type OperationInfo struct {
	// Description of the operation
	Description *string

	// Name of the operation
	Operation *string

	// Name of the provider
	Provider *string

	// Name of the resource type
	Resource *string
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// OperationsListResult - Result of the List Operations operation
type OperationsListResult struct {
	// A collection of operations
	Value []*Operation
}

// OverrideProperties - Definition of a MaintenanceOverrideProperties
type OverrideProperties struct {
	// Effective end date of the maintenance override window in YYYY-MM-DD hh:mm format. The window will be created in the time
	// zone provided and adjusted to daylight savings according to that time zone.
	// Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.
	EndDateTime *time.Time

	// Gets or sets overrideProperties of the maintenanceConfiguration
	OverrideProperties map[string]*string

	// Effective start date of the maintenance override window in YYYY-MM-DD hh:mm format. The start date can be set to either
	// the current date or future date. The window will be created in the time zone
	// provided and adjusted to daylight savings according to that time zone.
	StartDateTime *time.Time

	// Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
	// Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea
	// Standard Time, Cen. Australia Standard Time.
	TimeZone *string
}

// PublicMaintenanceConfigurationsClientGetOptions contains the optional parameters for the PublicMaintenanceConfigurationsClient.Get
// method.
type PublicMaintenanceConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PublicMaintenanceConfigurationsClientListOptions contains the optional parameters for the PublicMaintenanceConfigurationsClient.NewListPager
// method.
type PublicMaintenanceConfigurationsClientListOptions struct {
	// placeholder for future optional parameters
}

// Resource - Definition of a Resource
type Resource struct {
	// READ-ONLY; Fully qualified identifier of the resource
	ID *string

	// READ-ONLY; Name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; Type of the resource
	Type *string
}

// SoftwareUpdateConfigurationTasks - Task properties of the software update configuration.
type SoftwareUpdateConfigurationTasks struct {
	// List of post tasks. e.g. [{'source' :'runbook', 'taskScope': 'Resource', 'parameters': { 'arg1': 'value1'}}]
	PostTasks []*TaskProperties

	// List of pre tasks. e.g. [{'source' :'runbook', 'taskScope': 'Global', 'parameters': { 'arg1': 'value1'}}]
	PreTasks []*TaskProperties
}

// SubscriberIdentityInfo - Information describing the event subscriber.
type SubscriberIdentityInfo struct {
	// READ-ONLY; The application id of the subscriber.
	ClientApplicationID *string

	// READ-ONLY; The authorization source of the subscriber.
	ClientAuthorizationSource *string

	// READ-ONLY; The object id of the subscriber.
	ClientObjectID *string

	// READ-ONLY; The principal id of the subscriber.
	ClientPrincipalID *string

	// READ-ONLY; The client id of the subscriber.
	ClientTenantID *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// TaskProperties - Task properties of the software update configuration.
type TaskProperties struct {
	// Gets or sets the parameters of the task.
	Parameters map[string]*string

	// Gets or sets the name of the runbook.
	Source *string

	// Global Task execute once when schedule trigger. Resource task execute for each VM.
	TaskScope *TaskScope
}

// Update - Maintenance update on a resource
type Update struct {
	// Duration of impact in seconds
	ImpactDurationInSec *int32

	// The impact type
	ImpactType *ImpactType

	// The impact area
	MaintenanceScope *MaintenanceScope

	// Time when Azure will start force updates if not self-updated by customer before this time
	NotBefore *time.Time

	// Properties of the apply update
	Properties *UpdateProperties

	// The status
	Status *UpdateStatus
}

// UpdateProperties - Properties for update
type UpdateProperties struct {
	// The resourceId
	ResourceID *string
}

// UpdatesClientListOptions contains the optional parameters for the UpdatesClient.NewListPager method.
type UpdatesClientListOptions struct {
	// placeholder for future optional parameters
}

// UpdatesClientListParentOptions contains the optional parameters for the UpdatesClient.NewListParentPager method.
type UpdatesClientListParentOptions struct {
	// placeholder for future optional parameters
}

// Window - Definition of a MaintenanceWindow
type Window struct {
	// Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope
	// provided. Example: 05:00.
	Duration *string

	// Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time
	// zone provided and adjusted to daylight savings according to that time zone.
	// Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.
	ExpirationDateTime *string

	// Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules.
	// Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)'].
	// If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.
	// Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)']
	// [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery:
	// Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as
	// integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First,
	// Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of
	// days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months,
	// recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery:
	// Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.
	RecurEvery *string

	// Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current
	// date or future date. The window will be created in the time zone provided and
	// adjusted to daylight savings according to that time zone.
	StartDateTime *string

	// Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
	// Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea
	// Standard Time, Cen. Australia Standard Time.
	TimeZone *string
}
