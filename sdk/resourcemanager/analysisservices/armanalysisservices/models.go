//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armanalysisservices

import "time"

// AzureCoreFoundationsError - The error object.
type AzureCoreFoundationsError struct {
	// REQUIRED; One of a server-defined set of error codes.
	Code *string

	// REQUIRED; A human-readable representation of the error.
	Message *string

	// An array of details about specific errors that led to this reported error.
	Details []*AzureCoreFoundationsError

	// An object containing more specific information than the current object about the error.
	Innererror *AzureCoreFoundationsInnerError

	// The target of the error.
	Target *string
}

// AzureCoreFoundationsErrorResponse - A response containing error details.
type AzureCoreFoundationsErrorResponse struct {
	// REQUIRED; The error object.
	Error *AzureCoreFoundationsError
}

// AzureCoreFoundationsInnerError - An object containing more specific information about the error. As per Microsoft One API
// guidelines -
// https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
type AzureCoreFoundationsInnerError struct {
	// One of a server-defined set of error codes.
	Code *string

	// Inner error.
	Innererror *AzureCoreFoundationsInnerError
}

// AzureResourceManagerResourceSKU - The SKU (Stock Keeping Unit) assigned to this resource.
type AzureResourceManagerResourceSKU struct {
	// The SKU (Stock Keeping Unit) assigned to this resource.
	SKU *SKU
}

// AzureResourceManagerResourceSKUUpdate - The SKU (Stock Keeping Unit) assigned to this resource.
type AzureResourceManagerResourceSKUUpdate struct {
	// The SKU (Stock Keeping Unit) assigned to this resource.
	SKU *SKU
}

// CheckServerNameAvailabilityParameters - Details of server name request body.
type CheckServerNameAvailabilityParameters struct {
	// Name for checking availability.
	Name *string

	// The resource type of azure analysis services.
	Type *string
}

// CheckServerNameAvailabilityResult - The checking result of server name availability.
type CheckServerNameAvailabilityResult struct {
	// The detailed message of the request unavailability.
	Message *string

	// Indicator of available of the server name.
	NameAvailable *bool

	// The reason of unavailability.
	Reason *string
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info any

	// READ-ONLY; The additional info type.
	Type *string
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo

	// READ-ONLY; The error code.
	Code *string

	// READ-ONLY; The error details.
	Details []*ErrorDetail

	// READ-ONLY; The error message.
	Message *string

	// READ-ONLY; The error target.
	Target *string
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail
}

// GatewayDetails - The gateway details.
type GatewayDetails struct {
	// Gateway resource to be associated with the server.
	GatewayResourceID *string

	// READ-ONLY; Uri of the DMTS cluster.
	DmtsClusterURI *string

	// READ-ONLY; Gateway object id from in the DMTS cluster for the gateway resource.
	GatewayObjectID *string
}

// GatewayListStatusLive - Status of gateway is live.
type GatewayListStatusLive struct {
	// Live message of list gateway. Status: 0 - Live
	Status *GatewayListStatusLiveStatus
}

// IPv4FirewallRule - The detail of firewall rule.
type IPv4FirewallRule struct {
	// The rule name.
	FirewallRuleName *string

	// The end range of IPv4.
	RangeEnd *string

	// The start range of IPv4.
	RangeStart *string
}

// IPv4FirewallSettings - An array of firewall rules.
type IPv4FirewallSettings struct {
	// The indicator of enabling PBI service.
	EnablePowerBIService *bool

	// An array of firewall rules.
	FirewallRules []*IPv4FirewallRule
}

// LogSpecifications - The log metric specification for exposing performance metrics to shoebox.
type LogSpecifications struct {
	// READ-ONLY; The blob duration for the log.
	BlobDuration *string

	// READ-ONLY; The displayed name of log.
	DisplayName *string

	// READ-ONLY; The name of metric.
	Name *string
}

// MetricDimensions - Metric dimension.
type MetricDimensions struct {
	// READ-ONLY; Dimension display name.
	DisplayName *string

	// READ-ONLY; Dimension name.
	Name *string
}

// MetricSpecifications - Available operation metric specification for exposing performance metrics to shoebox.
type MetricSpecifications struct {
	// READ-ONLY; The aggregation type of metric.
	AggregationType *string

	// READ-ONLY; The dimensions of metric.
	Dimensions []*MetricDimensions

	// READ-ONLY; The displayed description of metric.
	DisplayDescription *string

	// READ-ONLY; The displayed name of metric.
	DisplayName *string

	// READ-ONLY; The name of metric.
	Name *string

	// READ-ONLY; The unit of the metric.
	Unit *string
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation
}

// OperationProperties - Additional properties to expose performance metrics to shoebox.
type OperationProperties struct {
	// Performance metrics to shoebox.
	ServiceSpecification *OperationPropertiesServiceSpecification
}

// OperationPropertiesServiceSpecification - Performance metrics to shoebox.
type OperationPropertiesServiceSpecification struct {
	// READ-ONLY; The log specifications.
	LogSpecifications []*LogSpecifications

	// READ-ONLY; The metric specifications.
	MetricSpecifications []*MetricSpecifications
}

// OperationStatus - The status of operation.
type OperationStatus struct {
	// The end time of the operation.
	EndTime *string

	// The operation Id.
	ID *string

	// The operation name.
	Name *string

	// The start time of the operation.
	StartTime *string

	// The status of the operation.
	Status *string
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// SKU - The resource model definition representing SKU
type SKU struct {
	// REQUIRED; The name of the SKU. Ex - P3. It is typically a letter+number code
	Name *string

	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the
	// resource this may be omitted.
	Capacity *int32

	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string

	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string

	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required
	// on a PUT.
	Tier *SKUTier
}

// SKUDetailsForExistingResource - An object that represents SKU details for existing resources.
type SKUDetailsForExistingResource struct {
	// The resource type.
	ResourceType *string

	// The SKU in SKU details for existing resources.
	SKU *AzureResourceManagerResourceSKU
}

// SKUEnumerationForExistingResourceResult - An object that represents enumerating SKUs for existing resources.
type SKUEnumerationForExistingResourceResult struct {
	// The collection of available SKUs for existing resources.
	Value []*SKUDetailsForExistingResource
}

// Server - Represents an instance of an Analysis Services resource.
type Server struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// The resource-specific properties for this resource.
	Properties *ServerProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ServerAdministrators - An array of administrator user identities.
type ServerAdministrators struct {
	// An array of administrator user identities.
	Members []*string
}

// ServerListResult - The response of a AnalysisServicesServer list operation.
type ServerListResult struct {
	// REQUIRED; The AnalysisServicesServer items on this page
	Value []*Server

	// The link to the next page of items
	NextLink *string
}

// ServerProperties - Properties of Analysis Services resource.
type ServerProperties struct {
	// The SKU of the Analysis Services resource.
	SKU *AzureResourceManagerResourceSKU

	// READ-ONLY; The current deployment state of Analysis Services resource. The provisioningState is to indicate states for
	// resource provisioning.
	ProvisioningState *ProvisioningState

	// READ-ONLY; The full name of the Analysis Services resource.
	ServerFullName *string

	// READ-ONLY; The current state of Analysis Services resource. The state is to indicate more states outside of resource provisioning.
	State *State
}

// ServerUpdate - The type used for update operations of the AnalysisServicesServer.
type ServerUpdate struct {
	// The updatable properties of the AnalysisServicesServer.
	Properties *ServerUpdateProperties

	// Resource tags.
	Tags map[string]*string
}

// ServerUpdateProperties - The updatable properties of the AnalysisServicesServer.
type ServerUpdateProperties struct {
	// The SKU of the Analysis Services resource.
	SKU *AzureResourceManagerResourceSKUUpdate
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}
